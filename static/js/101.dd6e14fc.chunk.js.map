{"version":3,"sources":["views/app-views/manage-group/projects/UpdateStatus.jsx","views/app-views/manage-group/projects/ManageProjectTeamForm.jsx","../node_modules/antd/es/divider/index.js","constants/ManageProjectsConstant.js","constants/ManageProjects.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","constants/ChangeAllocationStatusConstant.js"],"names":["TextArea","Input","Option","Select","UpdateStatus","_ref","visible","onCancel","selectedResource","isClickOnExtendable","toggleManageTeamFormModal","getAndUpdateEmployeeList","selectedProject","moveTo","getMessage","useIntlMessage","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","feedbackReasonList","setFeedbackReasonList","_Form$useForm","Form","useForm","form","previousCountrySelected","useSelector","state","myTeams","countryForEmployee","prevStatusForEmployee","statusForEmployee","useEffect","getReasonsList","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","records","wrap","_context","prev","next","projectService","getReasonReserve","sent","t0","console","log","stop","apply","arguments","onExtend","_ref3","_callee2","values","_context2","updateExtend","statusCode","message","success","SUCCESS_MESSAGE","EXTEND_SUCCESS_MESSAGE","text","error","finish","_x","onRelease","_ref4","_callee3","payload","_context3","prepareEmployeeReleaseData","updateRelease","RELEASE_SUCCESS_MESSAGE","_x2","initialsData","comments","startDate","moment","notes","_jsx","Modal","width","onOk","validateFields","then","_selectedResource$res","resetFields","_objectSpread","accountId","reservedFor","employeeId","catch","info","data","VALIDATION_FAILED","value","centered","okButtonProps","okText","RESERVATION_FORM_FIELDS","RESERVATION","title","PAGE_HEADING","MODAL_TITLE","children","_jsxs","layout","FORM_LAYOUT","vertical","name","initialValues","Item","className","label","ACTION_DATE","START_DATE","rules","required","DatePicker","disabledDate","current","future","subtract","isBefore","format","DATE_FORMAT","FORM_FIELDS","REASON","placeholder","SELECT_TEXT","map","e","pattern","whitespace","rows","maxLength","NOTES","formItemLayout","labelCol","span","wrapperCol","connect","_ref6","employees","employeeData","props","_selectedResource$pro","_selectedResource$pro2","_selectedResource$dom4","_selectedResource$all","_selectedResource$par","_selectedResource$par2","_selectedResource$res2","_selectedResource$res3","dispatch","useDispatch","handleCancel","projectList","setProjectList","_useState5","_useState6","subDomainList","setSubDomainList","_useState7","_useState8","showUpdateStatusModal","setShowUpdateStatusModal","_useState9","_useState10","setIsClickOnExtendable","_useState11","_useState12","isRequired","setIsRequired","subDomains","subdomains","domainList","domains","internalBillable","getProjectListByAccountId","_selectedResource$dom","validateFieldRequired","domain","domainId","handleOnDomainChange","searchText","onUpdateStatus","patch","newValues","_args","length","undefined","nextAllocationStartDate","NEW_DATE_FORMAT","valueOf","prepareAddAllocationPayload","updateBillableAllocationDetails","updateAllocationStatus","UPDATE_STATUS","t1","status","country","EmployeeService","getList","resp","employeeList","prepareEmployeeList","setEmployeeDataByCountry","err","_projectList","getListByAccountId","_x3","getStartDateLabel","allocationStatus","ALLOWED_STATUS","SHADOW","concat","DATE","RESERVED","CONFIRMED","subDomainId","useMemo","_selectedResource$dom2","_selectedResource$sub2","find","subDomain","_selectedResource$sub","projectId","project","projectName","toLowerCase","includes","item","_selectedResource$dom3","onFirsTime","subDomainsLists","filter","setFieldsValue","_defineProperty","SUB_DOMAIN","handleBillableUpdate","_callee5","_context5","_ref5","_callee4","_context4","reservedForAccountId","_x4","BILLABLE","getFieldValue","PROJECT_NAME","DOMAIN_NAME","_form$setFieldsValue2","_Fragment","TEAM_TITLE","TITLE","footer","Button","onClick","CANCEL_TEXT","type","MODAL_ADD_BUTTON_TYPE","UPDATE_TEXT","allowedAllocationStatuses","val","AVAILABLE","ALLOWED_BTN_LABELS","isExtendable","extendText","labelAlign","requiredMark","Row","gutter","Col","xs","md","lg","xl","PARENT_ACCOUNT_LABEL","parentAccount","accountName","RESERVED_FOR_LABEL","EMPLOYEE_ID","EMPLOYEE","employeeName","ALLOCATION_STATUS","DESIGNATION","designation","capitalize","reservationExpiryDate","defaultReservedEndDate","NEXT_ALLOCATION_START_DATE","key","Divider","onValuesChange","Tooltip","placement","showArrow","showSearch","optionFilterProp","CHILDREN","allowClear","onChange","domainName","subDomainName","startOf","isAfter","add","BILLING_EXPECTED_END_DATE","expBillingEndDate","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","React","ConfigConsumer","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","dashed","plain","restProps","orientationPrefix","hasChildren","classString","classNames","_extends","role","UPDATE_SUCCESS","ADD_SUCCESS","PROJECT_STATUS_REQ","IntlMessage","id","PROJECT_DATE_REQ","EDIT_PROJECT_CHECKBOX_DATE","EDIT_PROJECT_TITLE","SELECT_HIGHT","SELECT_LAYOUT","ACCOUNT_REQ","CONFIRM_MESSAGE","ADD_PROJECT_MESSAGE","UPDATE_PROJECT_MESSAGE","EXTEND_LABEL","RELEASE_LABEL","ACCOUNT_NAME","DELIVERY_LEAD","PROJECT_STATUS","PROJECT_DATE","errorMessage","ASSIGNED_ROLE","ASSIGNED_LEVEL","ALLOCATION_SUB_STATUS","ALLOWED_ALLOCATION_STATUS","BILLABLE_STATUS","ADD_RESOURCE_ON_BEHALF","RESERVED_FOR","PROJECT_START_DATE","PROJECT_END_DATE","RELEASE","MANAGE_PROJECT_TITLE","ADD_PROJECT_TITLE","PROJECT_COLUMN","valueOfProject","EMP_STATUS_FORM_NAME","UNAVAILABLE_STATUS","BILLED","UPDATE","ACTIVE_STATUS","INACTIVE_STATUS","ALL_STATUS","PROPOSED_STATUS","INACTIVE_STATUS_PROJECT","COMPLETED_STATUS","STATUSES","RELEASED_STATUS","ENGAGED_STATUS","RADIO_GROUP_STATUS","RECORD_FIELDS","FIELDS_VALUE","dateValue","subDomainValue","domainValue","projectNameValue","projectValue","domainNameValue","subDomainNameValue","UPDATE_TEAM_MATE_TITLE","reserved","PROJECT_DATES","END_DATE","RELEASE_END_DATE","DATA_TABLE_COLUMNS_VIEW_TEAM","EMP_ID","EMPLOYEE_NAME","EMP_LOCATION","DOMAIN","ASSINGED_LEVEL","BILLING_START_DATE","DATA_TABLE_COLUMNS","ACCOUNT_COLUMN","STATUS","options","GROUP_PROPOSED_ACTIVE_STATUS","ADD_LABEL","CONFIRM_ALERT","RESERVATION_DETAIL","ALLOCATION_POPUP_TITLE","AVAILABLE_FROM","FEEDBACK_DETAIL","ALLOCATION_STATUS_TABLE_COLUMNS","endDate","FEEDBACK_TABLE_COLUMNS","email","date","feedback","ACCOUNT","PROJECT","ALLOCATION_LEVEL","LEVER"],"mappings":"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","file":"static/js/101.dd6e14fc.chunk.js","sourcesContent":["import { DatePicker, Form, Input, message, Modal, Select } from \"antd\";\nimport { DATE_FORMAT, FORM_LAYOUT, VALIDATION_FAILED } from \"constants/CommonConstants\";\nimport { ACTION_DATE, SUCCESS_MESSAGE } from \"constants/ManageProjects\";\nimport { PAGE_HEADING, RESERVATION_FORM_FIELDS } from \"constants/ManageProjectsConstant\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport projectService from \"services/ProjectService\";\nimport { FORM_FIELDS } from \"../../../../constants/ChangeAllocationStatusConstant\";\nimport { SELECT_TEXT } from \"../../../../constants/CommonConstants\";\nimport Utils from \"utils\";\nimport { useEffect } from \"react\";\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst UpdateStatus = ({\n  visible,\n  onCancel,\n  selectedResource,\n  isClickOnExtendable,\n  toggleManageTeamFormModal,\n  selectedProject,\n  getAndUpdateEmployeeList,\n  moveTo,\n}) => {\n  const getMessage = useIntlMessage();\n  const [loading, setLoading] = useState(false);\n  const [feedbackReasonList, setFeedbackReasonList] = useState([]);\n  const [form] = Form.useForm();\n  const previousCountrySelected = useSelector(state => state.myTeams.countryForEmployee);\n  const prevStatusForEmployee = useSelector(state => state.myTeams.statusForEmployee);\n  useEffect(() => {\n    getReasonsList();\n  }, []);\n  const getReasonsList = async () => {\n    try {\n      const records = await projectService.getReasonReserve();\n      setFeedbackReasonList(records);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const onExtend = async values => {\n    try {\n      setLoading(true);\n      const res = await projectService.updateExtend(values);\n      if (res.statusCode === 200) {\n        message.success(getMessage(SUCCESS_MESSAGE.EXTEND_SUCCESS_MESSAGE.text));\n        if (moveTo) {\n          getAndUpdateEmployeeList();\n        }\n        if (prevStatusForEmployee && previousCountrySelected) {\n          getAndUpdateEmployeeList(prevStatusForEmployee, previousCountrySelected);\n        }\n        onCancel();\n        toggleManageTeamFormModal(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleExtend = () => {\n    form\n      .validateFields()\n      .then(values => {\n        form.resetFields();\n        onExtend({\n          ...values,\n          accountId: selectedResource?.reservedFor?.accountId,\n          employeeId: selectedResource?.employeeId,\n        });\n      })\n      .catch(info => {\n        console.log(info);\n      });\n  };\n\n  const onRelease = async values => {\n    try {\n      setLoading(true);\n      const payload = projectService.prepareEmployeeReleaseData(values, selectedResource);\n      const res = await projectService.updateRelease(payload);\n      if (res.statusCode === 200) {\n        message.success(getMessage(SUCCESS_MESSAGE.RELEASE_SUCCESS_MESSAGE.text));\n        if (prevStatusForEmployee && previousCountrySelected) {\n          getAndUpdateEmployeeList(prevStatusForEmployee, previousCountrySelected);\n        }\n        if (moveTo) {\n          getAndUpdateEmployeeList();\n        }\n        toggleManageTeamFormModal(false);\n        onCancel();\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRelease = () => {\n    form\n      .validateFields()\n      .then(data => {\n        onRelease(data);\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const initialsData = {\n    comments: \"\",\n    startDate: moment(),\n    notes: \"\",\n  };\n\n  const disableBeforeDate = current => {\n    const future = moment().subtract(0, \"days\");\n    return current.isBefore(selectedResource?.startDate) || current > future;\n  };\n\n  return (\n    <Modal\n      width=\"25%\"\n      visible={visible}\n      onCancel={onCancel}\n      onOk={isClickOnExtendable ? handleExtend : handleRelease}\n      centered\n      okButtonProps={{ loading: loading }}\n      okText={getMessage(RESERVATION_FORM_FIELDS.RESERVATION.text)}\n      title={getMessage(PAGE_HEADING.MODAL_TITLE.title)}\n    >\n      <Form\n        form={form}\n        layout={FORM_LAYOUT.vertical}\n        name={RESERVATION_FORM_FIELDS.RESERVATION.name}\n        initialValues={initialsData}\n      >\n        {!isClickOnExtendable && (\n          <Form.Item\n            className=\"my-1\"\n            label={getMessage(\"component.common.status.release.start.date\")} // Released start date\n            name={ACTION_DATE.START_DATE.value}\n            rules={[{ required: true }]}\n          >\n            <DatePicker disabledDate={disableBeforeDate} format={DATE_FORMAT} className={\"w-100\"} />\n          </Form.Item>\n        )}\n        <Form.Item\n          name={FORM_FIELDS.REASON.name}\n          label={getMessage(FORM_FIELDS.REASON.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.REASON.label)}>\n            {feedbackReasonList?.map(e => {\n              return (\n                <Option key={e} value={e}>\n                  {e}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          className=\"my-1\"\n          name={RESERVATION_FORM_FIELDS.RESERVATION.name}\n          label={<span className=\"text-wrap\">{getMessage(RESERVATION_FORM_FIELDS.RESERVATION.label)}</span>}\n          rules={[\n            { required: true, message: getMessage(RESERVATION_FORM_FIELDS.RESERVATION.message) },\n            {\n              pattern: /^([^0-9]*)$/,\n              message: \"Digits are not allowed\",\n            },\n            { whitespace: true, message: \"Only spaces are not allowed\" },\n          ]}\n        >\n          <TextArea rows={2} maxLength={50} />\n        </Form.Item>\n        {!isClickOnExtendable && (\n          <Form.Item name={FORM_FIELDS.NOTES.name} label={getMessage(FORM_FIELDS.NOTES.label)}>\n            <TextArea rows={2} maxLength={500} placeholder={getMessage(FORM_FIELDS.NOTES.label)} />\n          </Form.Item>\n        )}\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UpdateStatus;\n","import { Button, Col, DatePicker, Divider, Form, message, Modal, Row, Select, Tooltip, Input } from \"antd\";\nimport {\n  CHILDREN,\n  DATE_FORMAT,\n  MODAL_ADD_BUTTON_TYPE,\n  NEW_DATE_FORMAT,\n  SELECT_TEXT,\n  UPDATE_TEXT,\n  VALIDATION_FAILED,\n} from \"constants/CommonConstants\";\nimport { CANCEL_TEXT } from \"constants/ManageAccounts\";\nimport {\n  ACTION_DATE,\n  ALLOWED_BTN_LABELS,\n  ALLOWED_STATUS,\n  NEXT_ALLOCATION_START_DATE,\n  SUCCESS_MESSAGE,\n  TEAM_TITLE,\n} from \"constants/ManageProjects\";\nimport { FORM_FIELDS, RESERVATION_FORM_FIELDS, START_DATE } from \"constants/ManageProjectsConstant\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport { capitalize } from \"lodash\";\nimport moment from \"moment\";\nimport { useMemo } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { setEmployeeDataByCountry } from \"redux/actions\";\nimport { EmployeeService } from \"services\";\nimport projectService from \"services/ProjectService\";\nimport UpdateStatus from \"./UpdateStatus\";\n\nconst formItemLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 14 },\n};\nconst { TextArea } = Input;\n\nconst ManageProjectTeamForm = props => {\n  const dispatch = useDispatch();\n  const { visible, handleCancel, selectedResource, selectedProject, toggleManageTeamFormModal } = props;\n  const { Option } = Select;\n  const getMessage = useIntlMessage();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [projectList, setProjectList] = useState([]);\n  const [subDomainList, setSubDomainList] = useState([]);\n  const [showUpdateStatusModal, setShowUpdateStatusModal] = useState(false);\n  const [isClickOnExtendable, setIsClickOnExtendable] = useState(false);\n  const [isRequired, setIsRequired] = useState(false);\n  const subDomains = useSelector(state => state.myTeams.subdomains);\n  const domainList = useSelector(state => state.myTeams.domains);\n  const previousCountrySelected = useSelector(state => state.myTeams.countryForEmployee);\n  const prevStatusForEmployee = useSelector(state => state.myTeams.statusForEmployee);\n  const internalBillable = \"INTERNAL_BILLABLE\";\n  useEffect(() => {\n    if (selectedProject?.accountId) {\n      getProjectListByAccountId(selectedProject.accountId);\n    }\n  }, [selectedProject]);\n\n  useEffect(() => {\n    validateFieldRequired();\n    if (selectedResource?.domain?.domainId) {\n      handleOnDomainChange(selectedResource.domain.domainId, true);\n    }\n  }, [selectedResource]);\n\n  const onUpdateStatus = async (values, patch = false) => {\n    try {\n      setLoading(true);\n      const newValues = {\n        ...values,\n        nextAllocationStartDate: values.nextAllocationStartDate\n          ? moment(values.nextAllocationStartDate).format(NEW_DATE_FORMAT).valueOf()\n          : null,\n      };\n      const payload = patch ? newValues : projectService.prepareAddAllocationPayload(values, selectedResource);\n      const res = patch\n        ? await projectService.updateBillableAllocationDetails(payload)\n        : await projectService.updateAllocationStatus(payload);\n      if (res.statusCode === 200) {\n        message.success(getMessage(SUCCESS_MESSAGE.UPDATE_STATUS.text));\n        handleCancel();\n        toggleManageTeamFormModal(false);\n        if (prevStatusForEmployee && previousCountrySelected) {\n          getAndUpdateEmployeeList(prevStatusForEmployee, previousCountrySelected);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getAndUpdateEmployeeList = (status, country) => {\n    EmployeeService.getList({ status, country })\n      .then(resp => {\n        if (resp) {\n          const employeeList = EmployeeService.prepareEmployeeList(resp);\n          if (employeeList) {\n            dispatch(setEmployeeDataByCountry(employeeList));\n          }\n        }\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  const handleUpdate = status => {\n    form\n      .validateFields()\n      .then(async data => {\n        const values = {\n          ...data,\n          allocationStatus: status,\n        };\n        try {\n          setLoading(true);\n          await onUpdateStatus(values);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setLoading(false);\n        }\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const getProjectListByAccountId = async accountId => {\n    try {\n      const projectList = await projectService.getListByAccountId(accountId);\n      setProjectList(projectList);\n    } catch (error) {\n      console.error(\"Something went wrong\", error);\n    }\n  };\n\n  const disableBeforeDate = current => {\n    const future = moment().subtract(0, \"days\");\n    if (selectedResource?.allocationStatus === \"SHADOW\") {\n      const twoWeeksBack = moment().subtract(2, \"weeks\");\n      return current < twoWeeksBack || current > future;\n      //return current.isBefore(moment().startOf(\"today\"));\n    } else {\n      return current.isBefore(selectedResource?.startDate || moment().startOf(\"month\")) || current > future;\n    }\n  };\n\n  const getStartDateLabel = () => {\n    switch (selectedResource?.allocationStatus) {\n      case ALLOWED_STATUS.SHADOW.value:\n        return `${getMessage(\"common.label.reserved\")} ${getMessage(START_DATE.DATE.text)}`;\n      case ALLOWED_STATUS.RESERVED.value:\n        return `${getMessage(\"component.common.text.confirm\")} ${getMessage(START_DATE.DATE.text)}`;\n      case ALLOWED_STATUS.CONFIRMED.value:\n        return `${getMessage(\"component.common.text.billable\")} ${getMessage(START_DATE.DATE.text)}`;\n      default:\n        return `${getMessage(\"component.manageopenpool.billingstartdate.heading\")}`;\n    }\n  };\n\n  const containsString = (text, searchText) => {\n    return text.toLowerCase().includes(searchText.toLowerCase());\n  };\n\n  const getSubDomainName = useMemo(() => {\n    if (\n      selectedResource?.domain?.domainId &&\n      subDomains?.find(subDomain => subDomain?.subDomainId === selectedResource?.subDomain?.subDomainId)\n    ) {\n      return selectedResource?.subDomain?.subDomainId;\n    }\n    return null;\n  }, [selectedResource, subDomains]);\n\n  const initialValues = {\n    subDomainId: getSubDomainName,\n    projectId: containsString(selectedResource?.project?.projectName, \"bench\")\n      ? null\n      : selectedResource?.project?.projectId,\n    domainId: domainList?.find(item => item?.domainId === selectedResource?.domain?.domainId)\n      ? selectedResource?.domain?.domainId\n      : null,\n  };\n\n  const handleOnDomainChange = (domainId, onFirsTime = false) => {\n    const subDomainsLists = subDomains?.filter(subDomain => subDomain.domainId === domainId);\n    setSubDomainList(subDomainsLists);\n    if (!onFirsTime) {\n      form.setFieldsValue({ [FORM_FIELDS.SUB_DOMAIN.value]: null });\n    }\n  };\n\n  const handleBillableUpdate = async () => {\n    form\n      .validateFields()\n      .then(async data => {\n        const payload = {\n          employeeId: selectedResource?.employeeId,\n          reservedForAccountId: selectedResource?.reservedFor?.accountId,\n          allocationStatus: selectedResource?.allocationStatus,\n          projectId: data.projectId,\n          domainId: data.domainId,\n          subDomainId: data.subDomainId,\n          nextAllocationStartDate: data?.nextAllocationStartDate,\n        };\n        await onUpdateStatus(payload, true);\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const validateFieldRequired = () => {\n    if (\n      selectedResource?.allocationStatus === ALLOWED_STATUS.BILLABLE.value ||\n      selectedResource?.allocationStatus === ALLOWED_STATUS.CONFIRMED.value\n    ) {\n      setIsRequired(true);\n    } else if (\n      form.getFieldValue(FORM_FIELDS.PROJECT_NAME.value) ||\n      form.getFieldValue(FORM_FIELDS.DOMAIN_NAME.value) ||\n      form.getFieldValue(FORM_FIELDS.SUB_DOMAIN.value)\n    ) {\n      setIsRequired(true);\n    } else {\n      setIsRequired(false);\n      form.resetFields([FORM_FIELDS.PROJECT_NAME.value, FORM_FIELDS.DOMAIN_NAME.value, FORM_FIELDS.SUB_DOMAIN.value]);\n      form.setFieldsValue({\n        [FORM_FIELDS.PROJECT_NAME.value]: null,\n        [FORM_FIELDS.DOMAIN_NAME.value]: null,\n        [FORM_FIELDS.SUB_DOMAIN.value]: null,\n      });\n    }\n  };\n\n  const isReservedOrConfirmed = () => {\n    if (selectedResource.allocationStatus === \"RESERVED\" || selectedResource.allocationStatus === \"CONFIRMED\") {\n      return true;\n    }\n    return false;\n  };\n  function disabledDate(current) {\n    return (\n      current.isBefore(selectedResource?.startDate || moment().startOf(\"month\")) ||\n      current.isAfter(moment().add(1, \"month\").startOf(\"day\"))\n    );\n  }\n\n  return (\n    <Modal\n      width=\"55%\"\n      title={\n        <>\n          {selectedProject?.projectName} - {getMessage(TEAM_TITLE.TITLE.text)}\n        </>\n      }\n      visible={visible}\n      centered\n      onCancel={handleCancel}\n      footer={[\n        <Button key={CANCEL_TEXT.value} onClick={handleCancel}>\n          {CANCEL_TEXT.text}\n        </Button>,\n        (selectedResource?.allocationStatus === ALLOWED_STATUS.BILLABLE.value ||\n          selectedResource?.allocationStatus === internalBillable) && (\n          <Button\n            key={UPDATE_TEXT.value}\n            type={MODAL_ADD_BUTTON_TYPE.value}\n            onClick={handleBillableUpdate}\n            loading={loading}\n          >\n            {UPDATE_TEXT.text}\n          </Button>\n        ),\n        selectedResource?.allowedAllocationStatuses?.map(val => {\n          if (val === ALLOWED_STATUS.AVAILABLE.value) {\n            return (\n              <Button\n                type={MODAL_ADD_BUTTON_TYPE.value}\n                key={RESERVATION_FORM_FIELDS.RESERVATION.name}\n                onClick={() => {\n                  setShowUpdateStatusModal(true);\n                  setIsClickOnExtendable(false);\n                }}\n              >\n                {getMessage(\"component.common.text.release\")}\n              </Button>\n            );\n          } else {\n            return (\n              <Button\n                key={UPDATE_TEXT.value}\n                type={MODAL_ADD_BUTTON_TYPE.value}\n                onClick={() => handleUpdate(val)}\n                loading={loading}\n              >\n                {getMessage(ALLOWED_BTN_LABELS[val])}\n              </Button>\n            );\n          }\n        }),\n        selectedResource.isExtendable && (\n          <Button\n            type={MODAL_ADD_BUTTON_TYPE.value}\n            key={RESERVATION_FORM_FIELDS.RESERVATION.name}\n            onClick={() => {\n              setShowUpdateStatusModal(true);\n              setIsClickOnExtendable(true);\n            }}\n          >\n            {getMessage(RESERVATION_FORM_FIELDS.RESERVATION.extendText)}\n          </Button>\n        ),\n      ]}\n    >\n      <Form\n        {...formItemLayout}\n        layout={\"horizontal\"}\n        form={form}\n        labelAlign=\"left\"\n        initialValues={initialValues}\n        requiredMark=\"\"\n      >\n        <Row gutter={12}>\n          <Col className=\"text-left mb-1\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              label={getMessage(FORM_FIELDS.PARENT_ACCOUNT_LABEL.label)}\n              name={FORM_FIELDS.PARENT_ACCOUNT_LABEL.name}\n              className=\"my-1\"\n            >\n              <span>\n                {selectedResource?.parentAccount?.accountName ? selectedResource?.parentAccount?.accountName : \"N/A\"}\n              </span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={getMessage(FORM_FIELDS.RESERVED_FOR_LABEL.label)}\n              name={FORM_FIELDS.RESERVED_FOR_LABEL.value}\n            >\n              <span>\n                {selectedResource?.reservedFor?.accountName ? selectedResource?.reservedFor?.accountName : \"N/A\"}\n              </span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              label={getMessage(FORM_FIELDS.EMPLOYEE_ID.label)}\n              name={FORM_FIELDS.EMPLOYEE_ID.name}\n              className=\"my-1\"\n            >\n              <span>{selectedResource?.employeeId}</span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item className=\"my-1\" label={getMessage(FORM_FIELDS.EMPLOYEE.label)} name={FORM_FIELDS.EMPLOYEE.name}>\n              <span>{selectedResource?.employeeName}</span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={getMessage(FORM_FIELDS.ALLOCATION_STATUS.label)}\n              name={FORM_FIELDS.ALLOCATION_STATUS.name}\n            >\n              <span>{selectedResource?.allocationStatus}</span>\n            </Form.Item>\n          </Col>\n          {/* <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={getMessage(FORM_FIELDS.ASSIGNED_LEVEL.label)}\n              name={FORM_FIELDS.ASSIGNED_LEVEL.name}\n            >\n              <span>{selectedResource?.assignedLevel}</span>\n            </Form.Item>\n          </Col> */}\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={getMessage(FORM_FIELDS.DESIGNATION.label)}\n              name={FORM_FIELDS.DESIGNATION.name}\n            >\n              <span>{selectedResource?.designation}</span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={`${\n                selectedResource?.allocationStatus === ALLOWED_STATUS.AVAILABLE.value\n                  ? getMessage(\"component.common.status.available\")\n                  : capitalize(selectedResource?.allocationStatus)\n              } ${getMessage(START_DATE.DATE.text)}`}\n            >\n              <span>{moment(selectedResource?.startDate).format(DATE_FORMAT)}</span>\n            </Form.Item>\n          </Col>\n          {selectedResource?.allocationStatus === ALLOWED_STATUS.RESERVED.value ||\n          selectedResource?.allocationStatus === ALLOWED_STATUS.SHADOW.value ? (\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item className=\"my-1\" label={`${capitalize(selectedResource.allocationStatus)} End Date`}>\n                <span>\n                  {moment(selectedResource.reservationExpiryDate || selectedResource.defaultReservedEndDate).format(\n                    DATE_FORMAT,\n                  )}\n                </span>\n              </Form.Item>\n            </Col>\n          ) : null}\n          {selectedResource.nextAllocationStartDate ? (\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item\n                className=\"my-1\"\n                label={getMessage(NEXT_ALLOCATION_START_DATE.label)}\n                name={NEXT_ALLOCATION_START_DATE.key}\n              >\n                <span>{moment(selectedResource.nextAllocationStartDate).format(DATE_FORMAT)}</span>\n              </Form.Item>\n            </Col>\n          ) : null}\n        </Row>\n      </Form>\n\n      <Divider />\n\n      <Form\n        {...formItemLayout}\n        layout={\"horizontal\"}\n        form={form}\n        labelAlign=\"left\"\n        initialValues={initialValues}\n        requiredMark=\"\"\n        onValuesChange={validateFieldRequired}\n      >\n        <Row gutter={12}>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-2\"\n              label={\n                <Tooltip placement=\"bottom\" title={getMessage(FORM_FIELDS.PROJECT_NAME.label)}>\n                  {getMessage(FORM_FIELDS.PROJECT_NAME.label)}\n                </Tooltip>\n              }\n              name={FORM_FIELDS.PROJECT_NAME.value}\n              rules={[{ required: isRequired }]}\n            >\n              <Select\n                showArrow\n                showSearch\n                optionFilterProp={CHILDREN}\n                allowClear\n                placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.PROJECT_NAME.label)}\n              >\n                {projectList?.map(e => {\n                  return (\n                    <Option key={e.projectId} value={e.projectId}>\n                      {e.projectName}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              name={FORM_FIELDS.DOMAIN_NAME.value}\n              label={\n                <Tooltip placement=\"bottom\" title={getMessage(FORM_FIELDS.DOMAIN_NAME.label)}>\n                  {getMessage(FORM_FIELDS.DOMAIN_NAME.label)}\n                </Tooltip>\n              }\n              rules={[{ required: isRequired }]}\n            >\n              <Select\n                showArrow\n                showSearch\n                optionFilterProp={CHILDREN}\n                allowClear\n                placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.DOMAIN_NAME.label)}\n                onChange={value => handleOnDomainChange(value)}\n              >\n                {domainList?.map(e => {\n                  return (\n                    <Option key={e.domainId} value={e.domainId}>\n                      {e.domainName}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              name={FORM_FIELDS.SUB_DOMAIN.value}\n              label={\n                <Tooltip placement=\"bottom\" title={getMessage(FORM_FIELDS.SUB_DOMAIN.label)}>\n                  {getMessage(FORM_FIELDS.SUB_DOMAIN.label)}\n                </Tooltip>\n              }\n              rules={[{ required: isRequired }]}\n            >\n              <Select\n                placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.SUB_DOMAIN.label)}\n                showArrow\n                allowClear\n                showSearch\n                optionFilterProp={CHILDREN}\n              >\n                {subDomainList?.map(e => {\n                  return (\n                    <Option key={e.subDomainId} value={e.subDomainId}>\n                      {e.subDomainName}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          {selectedResource?.allocationStatus !== ALLOWED_STATUS.BILLABLE.value &&\n          selectedResource?.allocationStatus !== internalBillable ? (\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item\n                className=\"my-2\"\n                label={\n                  <Tooltip placement=\"bottom\" title={getStartDateLabel()}>\n                    {getStartDateLabel()}\n                  </Tooltip>\n                }\n                name={ACTION_DATE.START_DATE.value}\n                rules={[{ required: true }]}\n              >\n                <DatePicker\n                  disabledDate={isReservedOrConfirmed() ? disabledDate : disableBeforeDate}\n                  format={DATE_FORMAT}\n                  className={\"w-100\"}\n                />\n              </Form.Item>\n            </Col>\n          ) : null}\n          {selectedResource?.allocationStatus === ALLOWED_STATUS.BILLABLE.value ||\n          selectedResource?.allocationStatus === internalBillable ? (\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item\n                className=\"my-2\"\n                label={\n                  <Tooltip\n                    placement=\"bottom\"\n                    title={getMessage(ACTION_DATE.BILLING_EXPECTED_END_DATE.expBillingEndDate)}\n                  >\n                    {getMessage(ACTION_DATE.BILLING_EXPECTED_END_DATE.label)}\n                  </Tooltip>\n                }\n                name={ACTION_DATE.BILLING_EXPECTED_END_DATE.value}\n              >\n                <DatePicker\n                  disabledDate={current => current.isBefore(selectedResource?.startDate || moment().startOf(\"month\"))}\n                  format={DATE_FORMAT}\n                  className={\"w-100\"}\n                />\n              </Form.Item>\n            </Col>\n          ) : null}\n          {selectedResource?.allocationStatus !== ALLOWED_STATUS.BILLABLE.value &&\n          selectedResource?.allocationStatus !== internalBillable ? (\n            <Col xs={24} md={12} lg={12} xl={12}>\n              <Form.Item labelAlign=\"left\" name={FORM_FIELDS.NOTES.name} label={getMessage(FORM_FIELDS.NOTES.label)}>\n                <TextArea rows={2} maxLength={500} placeholder={getMessage(FORM_FIELDS.NOTES.label)} />\n              </Form.Item>\n            </Col>\n          ) : null}\n        </Row>\n      </Form>\n      {showUpdateStatusModal && (\n        <UpdateStatus\n          visible={showUpdateStatusModal}\n          selectedResource={selectedResource}\n          isClickOnExtendable={isClickOnExtendable}\n          getAndUpdateEmployeeList={getAndUpdateEmployeeList}\n          onCancel={() => {\n            setShowUpdateStatusModal(false);\n            setIsClickOnExtendable(false);\n          }}\n          selectedProject={selectedProject}\n          toggleManageTeamFormModal={toggleManageTeamFormModal}\n        />\n      )}\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({ myTeams }) => {\n  return { employees: myTeams.employeeData };\n};\nexport default connect(mapStateToProps)(ManageProjectTeamForm);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import IntlMessage from \"components/util-components/IntlMessage\";\nimport commonService from \"services/CommonService\";\nexport const UPDATE_SUCCESS = {\n  text: \"component.manageproject.updatesuccess.msg\",\n  value: \"project updated successfuly\",\n};\nexport const ADD_SUCCESS = {\n  text: \"component.manageproject.projectsuccess.msg\",\n  value: \"project created successfuly\",\n};\nexport const PROJECTNAME_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectname.msg\" />,\n  value: \"project name is required\",\n  placeholder: \"component.manageproject.projectname.msg\",\n};\nexport const DOMAIN_REQ = {\n  text: <IntlMessage id=\"component.manageproject.domainname.msg\" />,\n  value: \"domain name is required\",\n};\nexport const LEAD_REQ = {\n  text: <IntlMessage id=\"component.manageproject.deliveryLeadname.msg\" />,\n  value: \"delivery lead  is required \",\n};\nexport const PROJECT_STATUS_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectstatus.msg\" />,\n  value: \"project status is required\",\n};\nexport const PROJECT_DATE_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectdate.msg\" />,\n  value: \"project start and end date is required\",\n};\nexport const EDIT_PROJECT_CHECKBOX_DATE = {\n  text: <IntlMessage id=\"component.manageprojects.editproject.datecheckbox\" />,\n  value:\n    \"Select this option if the updated project end date has to be updated with the billing end date for all the team members.\",\n};\nexport const ADD_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageproject.addproject.title\" />,\n  value: \"Add Project\",\n};\nexport const EDIT_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageproject.editproject.title\" />,\n  value: \"Update Project\",\n};\nexport const SELECT_HIGHT = {\n  text: \"calc(100vh - 200px)\",\n  value: \"auto\",\n};\nexport const SELECT_LAYOUT = {\n  text: \"horizontal\",\n  value: \"horizontal\",\n};\nexport const PROJECT_NAME = {\n  text: \"projectName\",\n  value: \"Project Name\",\n};\nexport const DOMAIN_NAME = {\n  text: \"domainName\",\n  value: \"Domain Name\",\n};\nexport const SUBDOMAIN_NAME = {\n  text: \"subdomain\",\n  value: \"Sub Domain\",\n};\nexport const LEAD_NAME = {\n  text: \"deliveryLead\",\n  value: \"Delivery Lead\",\n};\nexport const ACCOUNT_REQ = {\n  text: \"accountName\",\n  value: \"Account Name\",\n};\nexport const PROJECT_DATE = {\n  text: \"projectDate\",\n  value: \"Project Date\",\n};\nexport const PROJECT_STATUS = {\n  text: \"projectStatus\",\n  value: \"Project Status\",\n};\n\nexport const DATE_FORMAT = {\n  text: \"YYYY-MM-DD\",\n  value: \"YYYY-MM-DD\",\n};\nexport const LEAD_ERROR_MESSAGE = {\n  text: <IntlMessage id=\"component.manageproject.inactive.lead.error.msg\" />,\n  value: \"Select active delivery lead\",\n};\nexport const CONFIRM_MESSAGE = {\n  text: <IntlMessage id=\"component.common.confirm.message\" />,\n  value: \"Are you sure you want to cancel this?\",\n};\nexport const ADD_PROJECT_MESSAGE = {\n  text: \"component.common.confirm.addproject.message\",\n  value: \"Are you sure you want to add this project?\",\n};\nexport const UPDATE_PROJECT_MESSAGE = {\n  text: \"component.common.confirm.updateproject.message\",\n  value: \"Are you sure you want to update this project?\",\n};\n\nexport const UPDATE_PROJECT_TITLE = <IntlMessage id=\"component.manageProject.updateprojectTitle\" />;\n// export const ADD_PROJECT_TITLE = <IntlMessage id=\"component.manageProject.addprojectTitle\" />;\nexport const START_DATE = {\n  DATE: {\n    label: \"component.manageprojects.manageteams.date.heading\",\n    text: \"component.manageprojects.manageteams.startdate\",\n    value: \"startDate\",\n  },\n};\nexport const RELEASE_STATUS = {};\nexport const FORM_FIELDS = {\n  EXTEND_LABEL: {\n    label: \"common.label.extend\",\n    value: \"extend\",\n  },\n  PARENT_ACCOUNT_LABEL: {\n    label: \"common.label.parent.account\",\n    value: \"accountName\",\n  },\n  RESERVED_FOR_LABEL: {\n    label: \"component.manage.projects.reservedFor.placeholder\",\n    value: \"accountName\",\n  },\n  RELEASE_LABEL: {\n    label: \"common.label.release.text\",\n    value: \"release\",\n  },\n  PROJECT_NAME: {\n    label: \"common.label.projectname\",\n    name: \"projectName\",\n    value: \"projectId\",\n  },\n  EMPLOYEE_ID: {\n    label: \"common.label.employeeId\",\n    name: \"employeeId\",\n  },\n  ACCOUNT_NAME: {\n    label: \"common.label.accountname\",\n    name: \"accountName\",\n  },\n  DOMAIN_NAME: {\n    name: \"domainName\",\n    value: \"domainId\",\n    label: \"common.label.domainname\",\n  },\n  DELIVERY_LEAD: {\n    name: \"deliveryLead\",\n    label: \"common.label.deliverylead\",\n  },\n  PROJECT_STATUS: {\n    name: \"projectStatus\",\n    label: \"component.manageprojects.project.status.label\",\n  },\n  PROJECT_DATE: {\n    name: \"projectDate\",\n    label: \"component.manageprojects.project.date.label\",\n    errorMessage: \"component.manageproject.projectdate.msg\",\n  },\n  EMPLOYEE: {\n    name: \"employeeName\",\n    label: \"common.label.employeeName\",\n  },\n  SUB_DOMAIN: {\n    value: \"subDomainId\",\n    name: \"subdomain\",\n    label: \"common.label.subdomain.name.label\",\n  },\n  ASSIGNED_ROLE: {\n    name: \"assignedRole\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ASSIGNED_LEVEL: {\n    name: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ALLOCATION_STATUS: {\n    name: \"allocationStatus\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n  },\n  ALLOCATION_SUB_STATUS: {\n    name: \"allocationSubStatus\",\n    label: \"component.manage.projects.allowed.allocation.substatus.lablel\",\n  },\n  ALLOWED_ALLOCATION_STATUS: {\n    name: \"allowedAllocationSubStatues\",\n    label: \"component.manage.projects.allowed.allocationstatus.lablel\",\n  },\n  BILLABLE_STATUS: {\n    name: \"billableStatus\",\n    label: \"common.label.billablestatus\",\n  },\n  ADD_RESOURCE_ON_BEHALF: {\n    name: \"addResourceOnBehalf\",\n    label: \"component.manage.projects.behalfof.placeholder\",\n  },\n  RESERVED_FOR: {\n    name: \"reservedFor\",\n    label: \"component.manage.projects.reservedFor.placeholder\",\n  },\n  DESIGNATION: {\n    name: \"designation\",\n    label: \"common.label.designation\",\n  },\n  PROJECT_START_DATE: {\n    name: \"projectStartDate\",\n    label: \"component.myprojectallocations.project_start_date.heading\",\n    errorMessage: \"component.manageproject.projectstartdate.msg\",\n  },\n  PROJECT_END_DATE: {\n    name: \"projectEndDate\",\n    label: \"component.myprojectallocations.project_end_date.heading\",\n    errorMessage: \"component.manageproject.projectenddate.msg\",\n  },\n  NOTES: {\n    value: \"notes\",\n    name: \"notes\",\n    label: \"common.label.notes\",\n  },\n};\n\nexport const RESERVATION_FORM_FIELDS = {\n  RESERVATION: {\n    label: \"common.label.reservation\",\n    message: \"common.label.reservation.message\",\n    name: \"comments\",\n    text: \"component.common.update.text\",\n    extendText: \"component.manageprojects.action.text.extend\",\n  },\n  UPDATE_STATUS: {\n    label: \"common.label.update.status\",\n    value: \"updateStatus\",\n  },\n  RELEASE: {\n    label: \"common.label.release\",\n    message: \"common.label.release.date.message\",\n    name: \"releaseDate\",\n    text: \"component.manageprojects.action.label.release\",\n  },\n};\nexport const PAGE_HEADING = {\n  MODAL_TITLE: {\n    title: \"component.manageprojects.action.label.extend.reservation\",\n    text: \"component.manageprojects.action.label.release.employee\",\n  },\n};\n","import IntlMessage from \"components/util-components/IntlMessage\";\nexport const MANAGE_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.heading\" />,\n  value: \"manage projects\",\n};\nexport const ADD_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.addproject.title\" />,\n  value: \"add project\",\n};\nexport const PROJECT_COLUMN = {\n  text: <IntlMessage id=\"component.manageprojects.project.heading\" />,\n  value: \"projectName\",\n  valueOfProject: \"ProjectName\",\n};\nexport const ACCOUNT_COLUMN = {\n  text: <IntlMessage id=\"common.label.account\" />,\n  value: \"account\",\n};\nexport const DELIVERY_LEAD_COLUMN = {\n  text: <IntlMessage id=\"common.label.deliverylead\" />,\n  value: \"deliveryLeadIds\",\n};\nexport const END_DATE_COLUMN = {\n  text: <IntlMessage id=\"component.manageprojects.enddate.heading\" />,\n  value: \"projectEndDate\",\n};\nexport const TEAM_DETAILS_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.teamdetails.heading\" />,\n  value: \"team details\",\n};\n\nexport const EMP_STATUS_FORM_NAME = \"emp_status_form\";\n\nexport const EMP_STATUS_SUCCESS_MSG = {\n  text: <IntlMessage id=\"component.manageprojects.manageteams.success_message\" />,\n  value: \"Employee status update successfully\",\n};\n\nexport const UNAVAILABLE_STATUS = \"UNAVAILABLE\";\n\nexport const ALLOWED_STATUS = {\n  AVAILABLE: {\n    value: \"AVAILABLE\",\n  },\n  RESERVED: {\n    value: \"RESERVED\",\n  },\n  CONFIRMED: {\n    value: \"CONFIRMED\",\n  },\n  BILLED: {\n    value: \"BILLED\",\n  },\n  BILLABLE: {\n    value: \"BILLABLE\",\n  },\n  SHADOW: {\n    value: \"SHADOW\",\n  },\n  UPDATE: {\n    value: \"UPDATE\",\n  },\n};\n\nexport const ALLOWED_BTN_LABELS = {\n  BILLABLE: \"component.common.text.bill\",\n  CONFIRMED: \"component.common.text.confirm\",\n  AVAILABLE: \"component.common.status.available\",\n  RESERVED: \"component.common.text.reserve\",\n  SHADOW: \"component.common.text.shadow\",\n  UPDATE: \"component.common.text.update\",\n};\n\nconst ACTIVE_STATUS = { label: \"component.common.status.active\", value: \"Active\" };\nconst INACTIVE_STATUS = { label: \"component.common.status.released\", value: \"InActive\" };\nconst ALL_STATUS = { label: \"component.common.status.all\", value: \"All\" };\nconst PROPOSED_STATUS = { label: \"component.manageprojects.manageteams.status.proposed\", value: \"Proposed\" };\nconst RELEASED_STATUS = { label: \"component.common.status.released\", value: \"Released\" };\nconst ENGAGED_STATUS = { label: \"component.common.status.engaged\", value: \"Engaged\" };\nconst INACTIVE_STATUS_PROJECT = \"InActive\";\nconst COMPLETED_STATUS = \"Completed\";\nconst ON_HOLD_STATUS = { label: \"common.label.on_hold\", value: \"On Hold\" };\n\nexport const STATUSES = {\n  ACTIVE_STATUS,\n  INACTIVE_STATUS,\n  ALL_STATUS,\n  PROPOSED_STATUS,\n  INACTIVE_STATUS_PROJECT,\n  COMPLETED_STATUS,\n  RELEASED_STATUS,\n  ENGAGED_STATUS,\n};\n\nexport const RADIO_GROUP_STATUS = [ACTIVE_STATUS, INACTIVE_STATUS, ALL_STATUS];\n\nexport const GROUP_COMPLETE_INACTIVE_STATUS = [INACTIVE_STATUS_PROJECT, COMPLETED_STATUS];\nexport const TEAM_TITLE = {\n  TITLE: {\n    text: \"common.title.text.team.member\",\n  },\n};\n\nexport const RECORD_FIELDS = {\n  FIELDS_VALUE: {\n    dateValue: \"date\",\n    subDomainValue: \"subDomain\",\n    domainValue: \"domain\",\n    projectNameValue: \"projectName\",\n    projectValue: \"project\",\n    domainNameValue: \"domainName\",\n    subDomainNameValue: \"subDomainName\",\n  },\n};\nexport const SUCCESS_MESSAGE = {\n  UPDATE_TEAM_MATE_TITLE: {\n    text: \"common.title.text.team.member\",\n  },\n  EXTEND_SUCCESS_MESSAGE: {\n    text: \"common.message.text\",\n  },\n  RELEASE_SUCCESS_MESSAGE: {\n    text: \"common.message.release.text\",\n  },\n  UPDATE_STATUS: {\n    text: \"common.message.update.status\",\n  },\n};\nexport const ACTION_DATE = {\n  START_DATE: {\n    label: \"common.action.releasedate.label\",\n    reserved: \"common.action.reserveddate.label\",\n    value: \"startDate\",\n  },\n  BILLING_EXPECTED_END_DATE: {\n    label: \"common.action.exp.end.date.label\",\n    expBillingEndDate: \"common.action.expected.end.date.label\",\n    value: \"nextAllocationStartDate\",\n  },\n};\nexport const PROJECT_DATES = {\n  START_DATE: {\n    label: \"common.project.startdate.label\",\n    value: \"startDate\",\n  },\n  END_DATE: {\n    label: \"common.project.enddate.label\",\n    value: \"endDate\",\n  },\n  RELEASE_END_DATE: {\n    label: \"component.manageprojects.enddate.heading\",\n    key: \"endDate\",\n    type: \"date\",\n    width: 120,\n  },\n};\n\nexport const DATA_TABLE_COLUMNS_VIEW_TEAM = {\n  EMP_ID: {\n    label: \"common.label.emp_id\",\n    key: \"employeeId\",\n    type: \"text\",\n    width: 100,\n  },\n  EMPLOYEE_NAME: {\n    key: \"employeeName\",\n    label: \"common.label.employeeName\",\n    type: \"text\",\n    width: 150,\n  },\n  EMP_LOCATION: {\n    label: \"common.label.location\",\n    key: \"empLocation\",\n    type: \"text\",\n    width: 120,\n  },\n  // PROJECT_NAME: {\n  //   label: \"common.label.projectname\",\n  //   key: \"project\",\n  //   type: \"text\",\n  //   width: 120,\n  // },\n  DESIGNATION: {\n    key: \"designation\",\n    label: \"common.label.designation\",\n    type: \"text\",\n    width: 130,\n  },\n  DOMAIN: {\n    label: \"common.label.domain\",\n    key: \"domain\",\n    type: \"text\",\n    width: 120,\n  },\n  SUB_DOMAIN: {\n    key: \"subDomain\",\n    label: \"common.label.subdomain.label\",\n    type: \"text\",\n    width: 140,\n  },\n  ALLOCATION_STATUS: {\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n    type: \"text\",\n    width: 140,\n  },\n  ASSINGED_LEVEL: {\n    label: \"component.manage.projects.assignedlevel.label\",\n    key: \"assignedLevel\",\n    type: \"text\",\n    width: 140,\n  },\n  BILLING_START_DATE: {\n    key: \"startDate\",\n    label: \"component.common.start.date\",\n    type: \"date\",\n    width: 140,\n  },\n};\n\nexport const DATA_TABLE_COLUMNS = {\n  PROJECT_COLUMN: {\n    label: \"component.manageprojects.project.heading\",\n    key: \"projectName\",\n    type: \"text\",\n  },\n  ACCOUNT_COLUMN: {\n    label: \"common.label.account\",\n    key: \"account\",\n    type: \"text\",\n  },\n  // NUM_OF_MEMBER: {\n  //   label: \"component.managedesignations.employeecount\",\n  //   key: \"employeeCount\",\n  //   type: \"text\",\n  // },\n  STATUS: {\n    label: \"common.label.status\",\n    key: \"status\",\n    type: \"select\",\n    options: [\n      { label: INACTIVE_STATUS.label, value: INACTIVE_STATUS_PROJECT },\n      { label: PROPOSED_STATUS.label, value: PROPOSED_STATUS.value },\n      { label: ON_HOLD_STATUS.label, value: ON_HOLD_STATUS.value },\n    ],\n  },\n  END_DATE: {\n    label: \"component.manageprojects.manageteams.startdate.heading\",\n    key: \"projectStartDate\",\n    type: \"date\",\n  },\n};\nexport const NEXT_ALLOCATION_START_DATE = {\n  key: \"nextAllocationStartDate\",\n  label: \"common.project.nextAllocationStartDate\",\n};\n\nexport const GROUP_PROPOSED_ACTIVE_STATUS = [ACTIVE_STATUS.value, PROPOSED_STATUS.value];\n","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","export const ADD_LABEL = \"component.manage.employees.add.allocation.label\";\nexport const CONFIRM_ALERT = \"component.manage.employees.add.allocation.confirmation\";\nexport const RESERVATION_DETAIL = \"component.manage.employees.reservation.detail.label\";\nexport const ALLOCATION_POPUP_TITLE = \"component.manage.employees.reservation.popup.title\";\nexport const AVAILABLE_FROM = \"component.common.status.available.from\";\nexport const FEEDBACK_DETAIL = \"component.manage.employees.feedback.detail.label\";\n\nexport const ALLOCATION_STATUS_TABLE_COLUMNS = {\n  accountName: {\n    label: \"common.label.accountname\",\n    key: \"accountName\",\n    type: \"text\",\n  },\n  projectName: {\n    type: \"text\",\n    label: \"common.label.projectname\",\n    key: \"projectName\",\n  },\n  domainName: {\n    type: \"text\",\n    label: \"common.label.domain\",\n    key: \"domainName\",\n  },\n  subDomainName: {\n    type: \"text\",\n    label: \"common.label.subdomain.label\",\n    key: \"subDomainName\",\n  },\n  allocationStatus: {\n    type: \"text\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n  },\n  startDate: {\n    type: \"date\",\n    label: \"common.label.allocation.start.date\",\n    key: \"startDate\",\n  },\n  endDate: {\n    type: \"date\",\n    label: \"common.label.allocation.end.date\",\n    key: \"reservationExpiryDate\",\n  },\n};\n\nexport const FEEDBACK_TABLE_COLUMNS = {\n  name: {\n    label: \"manage.employee.reservation.feedback\",\n    key: \"givenByName\",\n    type: \"text\",\n  },\n  email: {\n    label: \"common.label.email\",\n    key: \"givenByEmail\",\n    type: \"text\",\n  },\n  date: {\n    label: \"common.label.date\",\n    key: \"givenOn\",\n    type: \"date\",\n  },\n  feedback: {\n    label: \"common.label.feedback\",\n    key: \"feedback\",\n    type: \"text\",\n  },\n};\nexport const FORM_FIELDS = {\n  ACCOUNT: {\n    label: \"common.label.accountname\",\n    name: \"accountName\",\n  },\n  PROJECT: {\n    label: \"common.label.projectname\",\n    name: \"projectName\",\n  },\n  DOMAIN_NAME: {\n    name: \"domainName\",\n    label: \"common.label.domainname\",\n  },\n  SUB_DOMAIN: {\n    name: \"subdomain\",\n    label: \"common.label.subdomain.name.label\",\n  },\n  ALLOCATION_LEVEL: {\n    name: \"allocationLevel\",\n\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ALLOCATION_STATUS: {\n    name: \"allocationStatus\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n  },\n  START_DATE: {\n    name: \"startDate\",\n    label: \"component.common.start.date\",\n  },\n  REASON: {\n    name: \"releaseFeedbackReason\",\n    label: \"component.common.reason.reserve\",\n  },\n  ASSIGNED_LEVEL: {\n    name: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  NOTES: {\n    name: \"notes\",\n    label: \"common.label.notes\",\n  },\n  LEVER: {\n    value: \"leverURL\",\n    name: \"leverURL\",\n    label: \"common.myprojectallocations.project_lever_url\"\n  }\n};\n"],"sourceRoot":""}
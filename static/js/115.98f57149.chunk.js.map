{"version":3,"sources":["views/app-views/manage-group/employees/manage-employees/EditChangeAllocationStatusForm.jsx","constants/ManageProjectsConstant.js","constants/ChangeAllocationStatusConstant.js"],"names":["EditChangeAllocationStatusForm","props","_Utils$sortArray","_Utils$sortArray2","_Utils$sortArray3","_Utils$sortArray4","_Utils$sortArray5","_Utils$sortArray6","onCancelToggleAllocationModal","employee","_useState","useState","_useState2","_slicedToArray","projectList","setProjectList","_useState3","_useState4","accountList","setAccountList","_useState5","_useState6","subDomains","setSubDomains","_useState7","_useState8","hasChanges","setHasChanges","_useState9","_useState10","loading","setLoading","domainList","useSelector","state","myTeams","allocationLevel","masterData","AssignedLevel","_Form$useForm","Form","useForm","form","Option","Select","OptGroup","ACCOUNT","FORM_FIELDS","PROJECT","ALLOCATION_LEVEL","ALLOCATION_STATUS","START_DATE","DOMAIN_NAME","SUB_DOMAIN","confirm","Modal","getMessage","useIntlMessage","useEffect","populateProjectAndAccountList","handleOk","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","e","formValues","wrap","_context2","prev","next","validateFields","sent","title","CONFIRM_ALERT","centered","onOk","_onOk","_callee","response","_context","employeeService","addAllocation","_objectSpread","empId","employeeId","statusCode","resetFields","message","success","error","t0","console","finish","stop","apply","arguments","VALIDATION_FAILED","value","_x","handleConfirm","CONFIRM_MESSAGE","handleDomainChange","_ref2","_callee3","domainId","_subDomains","_context3","setFieldsValue","subdomain","domainService","getSubDomainsInfoByDomainId","_x2","_ref3","_callee4","accountPromise","projectListPromise","_yield$Promise$all","_yield$Promise$all2","accountsList","_projectList","_context4","projectService","getList","Promise","all","_jsx","visible","ADD_LABEL","onCancel","bodyStyle","overflowY","SELECT_HIGHT","text","maxHeight","footer","Button","onClick","children","CANCEL_TEXT","MODAL_BACK_BUTTON","type","MODAL_ADD_BUTTON_TYPE","ADD_ACCOUNT_TEXT","okButtonProps","_jsxs","name","FORM_NAME","layout","SELECT_LAYOUT","onFieldsChange","labelCol","span","wrapperCol","Item","label","rules","required","showArrow","showSearch","optionFilterProp","CHILDREN","placeholder","SELECT_TEXT","PROJECT_NAME","Utils","sortArray","map","projectId","projectName","ACCOUNT_REQ","accountId","accountName","onChange","DOMAIN","domainName","subDomainId","subDomainName","DatePicker","className","format","DATE_FORMAT","UPDATE_SUCCESS","ADD_SUCCESS","PROJECT_STATUS_REQ","IntlMessage","id","PROJECT_DATE_REQ","EDIT_PROJECT_CHECKBOX_DATE","EDIT_PROJECT_TITLE","ADD_PROJECT_MESSAGE","UPDATE_PROJECT_MESSAGE","DATE","EXTEND_LABEL","PARENT_ACCOUNT_LABEL","RESERVED_FOR_LABEL","RELEASE_LABEL","EMPLOYEE_ID","ACCOUNT_NAME","DELIVERY_LEAD","PROJECT_STATUS","PROJECT_DATE","errorMessage","EMPLOYEE","ASSIGNED_ROLE","ASSIGNED_LEVEL","ALLOCATION_SUB_STATUS","ALLOWED_ALLOCATION_STATUS","BILLABLE_STATUS","ADD_RESOURCE_ON_BEHALF","RESERVED_FOR","DESIGNATION","PROJECT_START_DATE","PROJECT_END_DATE","NOTES","RESERVATION_FORM_FIELDS","RESERVATION","extendText","UPDATE_STATUS","RELEASE","PAGE_HEADING","MODAL_TITLE","RESERVATION_DETAIL","ALLOCATION_POPUP_TITLE","AVAILABLE_FROM","FEEDBACK_DETAIL","ALLOCATION_STATUS_TABLE_COLUMNS","key","allocationStatus","startDate","endDate","FEEDBACK_TABLE_COLUMNS","email","date","feedback","REASON","LEVER"],"mappings":"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","file":"static/js/115.98f57149.chunk.js","sourcesContent":["import { Modal, Button, message, Form, Select, DatePicker } from \"antd\";\nimport {\n  CHILDREN,\n  CONFIRM_MESSAGE,\n  DATE_FORMAT,\n  FORM_NAME,\n  MODAL_ADD_BUTTON_TYPE,\n  MODAL_BACK_BUTTON,\n  SELECT_TEXT,\n  VALIDATION_FAILED,\n} from \"constants/CommonConstants\";\nimport Utils from \"utils\";\nimport { useSelector } from \"react-redux\";\nimport { ADD_LABEL, FORM_FIELDS, CONFIRM_ALERT } from \"../../../../../constants/ChangeAllocationStatusConstant\";\nimport React from \"react\";\nimport {\n  ACCOUNT_REQ,\n  PROJECT_NAME,\n  SELECT_HIGHT,\n  SELECT_LAYOUT,\n  DOMAIN_NAME as DOMAIN,\n} from \"constants/ManageProjectsConstant\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport { ADD_ACCOUNT_TEXT, CANCEL_TEXT } from \"constants/ManageAccounts\";\nimport { useState } from \"react\";\nimport projectService from \"services/ProjectService\";\nimport domainService from \"services/DomainService\";\nimport { useEffect } from \"react\";\nimport employeeService from \"services/EmployeeService\";\n\nconst EditChangeAllocationStatusForm = props => {\n  const { onCancelToggleAllocationModal, employee } = props;\n  const [projectList, setProjectList] = useState([]);\n  const [accountList, setAccountList] = useState([]);\n  const [subDomains, setSubDomains] = useState([]);\n  const [hasChanges, setHasChanges] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const domainList = useSelector(state => state.myTeams.domainList);\n  const allocationLevel = useSelector(state => state.myTeams.masterData.AssignedLevel);\n  const [form] = Form.useForm();\n  const formItemLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 14 },\n  };\n  const { Option, OptGroup } = Select;\n\n  const allocationStatuses = [\"Reserved\", \"Shadow\"];\n  const { ACCOUNT, PROJECT, ALLOCATION_LEVEL, ALLOCATION_STATUS, START_DATE, DOMAIN_NAME, SUB_DOMAIN } = FORM_FIELDS;\n  const { confirm } = Modal;\n  const getMessage = useIntlMessage();\n\n  useEffect(() => {\n    populateProjectAndAccountList();\n  }, []);\n\n  const handleOk = async e => {\n    try {\n      setLoading(true);\n      let formValues = await form.validateFields();\n      confirm({\n        title: getMessage(CONFIRM_ALERT),\n        centered: true,\n        onOk: async () => {\n          try {\n            const response = await employeeService.addAllocation({ ...formValues, empId: employee.employeeId });\n            if (response.statusCode === 200) {\n              form.resetFields();\n              message.success(response?.message);\n              onCancelToggleAllocationModal();\n            } else {\n              message.error(response?.message);\n            }\n          } catch (error) {\n            console.error(error);\n          } finally {\n            setLoading(false);\n          }\n        },\n      });\n    } catch (info) {\n      console.error(VALIDATION_FAILED.value, info);\n    }\n  };\n\n  const handleConfirm = () => {\n    if (hasChanges) {\n      confirm({\n        title: CONFIRM_MESSAGE.value,\n        centered: true,\n        onOk() {\n          onCancelToggleAllocationModal();\n        },\n      });\n    } else {\n      form.resetFields();\n      onCancelToggleAllocationModal();\n    }\n  };\n  const handleDomainChange = async domainId => {\n    try {\n      form.setFieldsValue({ subdomain: null });\n      const subDomains = await domainService.getSubDomainsInfoByDomainId(domainId);\n      setSubDomains(subDomains);\n    } catch (error) {\n      console.error(\"Something went wrong while fetching subdomains\", error);\n    }\n  };\n\n  const populateProjectAndAccountList = async () => {\n    try {\n      const accountPromise = projectService.accountList();\n      const projectListPromise = projectService.getList();\n      const [accountsList, projectList] = await Promise.all([accountPromise, projectListPromise]);\n      setProjectList(projectList);\n      setAccountList(accountsList);\n    } catch (e) {\n      console.error(\"Unable to populate project list\", e);\n    }\n  };\n\n  return (\n    <Modal\n      visible\n      title={getMessage(ADD_LABEL)}\n      onCancel={handleConfirm}\n      onOk={handleOk}\n      bodyStyle={{ overflowY: SELECT_HIGHT.text, maxHeight: SELECT_HIGHT.value }}\n      footer={[\n        <Button key={MODAL_BACK_BUTTON.value} onClick={handleConfirm}>\n          {CANCEL_TEXT.text}\n        </Button>,\n        <Button key={MODAL_ADD_BUTTON_TYPE.value} onClick={handleOk} type={MODAL_ADD_BUTTON_TYPE.value}>\n          {ADD_ACCOUNT_TEXT.value}\n        </Button>,\n      ]}\n      okButtonProps={{ loading: loading }}\n    >\n      <Form\n        form={form}\n        name={FORM_NAME.text}\n        layout={SELECT_LAYOUT.text}\n        onFieldsChange={() => {\n          setHasChanges(true);\n        }}\n        {...formItemLayout}\n      >\n        <Form.Item\n          name={PROJECT.name}\n          label={getMessage(PROJECT.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            showArrow\n            showSearch\n            optionFilterProp={CHILDREN}\n            placeholder={getMessage(SELECT_TEXT.label, PROJECT.label)}\n          >\n            <OptGroup label={PROJECT_NAME?.value}>\n              {Utils.sortArray(projectList, PROJECT.name)?.map(e => {\n                return (\n                  <Option key={e?.projectId} value={e?.projectId}>\n                    {e?.projectName}\n                  </Option>\n                );\n              })}\n            </OptGroup>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name={ACCOUNT.name}\n          label={getMessage(ACCOUNT.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            showArrow\n            showSearch\n            optionFilterProp={CHILDREN}\n            placeholder={getMessage(SELECT_TEXT.label, ACCOUNT.label)}\n          >\n            <OptGroup label={ACCOUNT_REQ?.value}>\n              {Utils.sortArray(accountList, ACCOUNT.name)?.map(e => {\n                return (\n                  <Option key={e.accountId} value={e.accountId}>\n                    {e.accountName}\n                  </Option>\n                );\n              })}\n            </OptGroup>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name={DOMAIN_NAME.name}\n          label={getMessage(DOMAIN_NAME.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            showArrow\n            showSearch\n            optionFilterProp={CHILDREN}\n            placeholder={getMessage(SELECT_TEXT.label, DOMAIN_NAME.label)}\n            onChange={handleDomainChange}\n          >\n            <OptGroup label={DOMAIN?.value}>\n              {Utils.sortArray(domainList, DOMAIN_NAME.name)?.map(e => {\n                return (\n                  <Option key={e.domainId} value={e.domainId}>\n                    {e.domainName}\n                  </Option>\n                );\n              })}\n            </OptGroup>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name={SUB_DOMAIN.name}\n          label={getMessage(SUB_DOMAIN.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select placeholder={getMessage(SELECT_TEXT.label, SUB_DOMAIN.label)}>\n            {Utils.sortArray(subDomains, \"subDomainName\")?.map(e => {\n              return (\n                <Option key={e.subDomainId} value={e.subDomainId}>\n                  {e.subDomainName}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name={ALLOCATION_LEVEL.name}\n          label={getMessage(ALLOCATION_LEVEL.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select placeholder={getMessage(SELECT_TEXT.label, ALLOCATION_LEVEL.label)}>\n            {Utils.sortArray(allocationLevel)?.map(e => {\n              return (\n                <Option key={e} value={e}>\n                  {e}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label={getMessage(ALLOCATION_STATUS.label)}\n          name={ALLOCATION_STATUS.name}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select placeholder={getMessage(SELECT_TEXT.label, ALLOCATION_STATUS.label)}>\n            {Utils.sortArray(allocationStatuses)?.map(e => {\n              return (\n                <Option key={e} value={e}>\n                  {e}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label={getMessage(START_DATE.label)}\n          name={START_DATE.name}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <DatePicker className=\"w-100\" format={DATE_FORMAT} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default EditChangeAllocationStatusForm;\n","import IntlMessage from \"components/util-components/IntlMessage\";\nimport commonService from \"services/CommonService\";\nexport const UPDATE_SUCCESS = {\n  text: \"component.manageproject.updatesuccess.msg\",\n  value: \"project updated successfuly\",\n};\nexport const ADD_SUCCESS = {\n  text: \"component.manageproject.projectsuccess.msg\",\n  value: \"project created successfuly\",\n};\nexport const PROJECTNAME_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectname.msg\" />,\n  value: \"project name is required\",\n  placeholder: \"component.manageproject.projectname.msg\",\n};\nexport const DOMAIN_REQ = {\n  text: <IntlMessage id=\"component.manageproject.domainname.msg\" />,\n  value: \"domain name is required\",\n};\nexport const LEAD_REQ = {\n  text: <IntlMessage id=\"component.manageproject.deliveryLeadname.msg\" />,\n  value: \"delivery lead  is required \",\n};\nexport const PROJECT_STATUS_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectstatus.msg\" />,\n  value: \"project status is required\",\n};\nexport const PROJECT_DATE_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectdate.msg\" />,\n  value: \"project start and end date is required\",\n};\nexport const EDIT_PROJECT_CHECKBOX_DATE = {\n  text: <IntlMessage id=\"component.manageprojects.editproject.datecheckbox\" />,\n  value:\n    \"Select this option if the updated project end date has to be updated with the billing end date for all the team members.\",\n};\nexport const ADD_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageproject.addproject.title\" />,\n  value: \"Add Project\",\n};\nexport const EDIT_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageproject.editproject.title\" />,\n  value: \"Update Project\",\n};\nexport const SELECT_HIGHT = {\n  text: \"calc(100vh - 200px)\",\n  value: \"auto\",\n};\nexport const SELECT_LAYOUT = {\n  text: \"horizontal\",\n  value: \"horizontal\",\n};\nexport const PROJECT_NAME = {\n  text: \"projectName\",\n  value: \"Project Name\",\n};\nexport const DOMAIN_NAME = {\n  text: \"domainName\",\n  value: \"Domain Name\",\n};\nexport const SUBDOMAIN_NAME = {\n  text: \"subdomain\",\n  value: \"Sub Domain\",\n};\nexport const LEAD_NAME = {\n  text: \"deliveryLead\",\n  value: \"Delivery Lead\",\n};\nexport const ACCOUNT_REQ = {\n  text: \"accountName\",\n  value: \"Account Name\",\n};\nexport const PROJECT_DATE = {\n  text: \"projectDate\",\n  value: \"Project Date\",\n};\nexport const PROJECT_STATUS = {\n  text: \"projectStatus\",\n  value: \"Project Status\",\n};\n\nexport const DATE_FORMAT = {\n  text: \"YYYY-MM-DD\",\n  value: \"YYYY-MM-DD\",\n};\nexport const LEAD_ERROR_MESSAGE = {\n  text: <IntlMessage id=\"component.manageproject.inactive.lead.error.msg\" />,\n  value: \"Select active delivery lead\",\n};\nexport const CONFIRM_MESSAGE = {\n  text: <IntlMessage id=\"component.common.confirm.message\" />,\n  value: \"Are you sure you want to cancel this?\",\n};\nexport const ADD_PROJECT_MESSAGE = {\n  text: \"component.common.confirm.addproject.message\",\n  value: \"Are you sure you want to add this project?\",\n};\nexport const UPDATE_PROJECT_MESSAGE = {\n  text: \"component.common.confirm.updateproject.message\",\n  value: \"Are you sure you want to update this project?\",\n};\n\nexport const UPDATE_PROJECT_TITLE = <IntlMessage id=\"component.manageProject.updateprojectTitle\" />;\n// export const ADD_PROJECT_TITLE = <IntlMessage id=\"component.manageProject.addprojectTitle\" />;\nexport const START_DATE = {\n  DATE: {\n    label: \"component.manageprojects.manageteams.date.heading\",\n    text: \"component.manageprojects.manageteams.startdate\",\n    value: \"startDate\",\n  },\n};\nexport const RELEASE_STATUS = {};\nexport const FORM_FIELDS = {\n  EXTEND_LABEL: {\n    label: \"common.label.extend\",\n    value: \"extend\",\n  },\n  PARENT_ACCOUNT_LABEL: {\n    label: \"common.label.parent.account\",\n    value: \"accountName\",\n  },\n  RESERVED_FOR_LABEL: {\n    label: \"component.manage.projects.reservedFor.placeholder\",\n    value: \"accountName\",\n  },\n  RELEASE_LABEL: {\n    label: \"common.label.release.text\",\n    value: \"release\",\n  },\n  PROJECT_NAME: {\n    label: \"common.label.projectname\",\n    name: \"projectName\",\n    value: \"projectId\",\n  },\n  EMPLOYEE_ID: {\n    label: \"common.label.employeeId\",\n    name: \"employeeId\",\n  },\n  ACCOUNT_NAME: {\n    label: \"common.label.accountname\",\n    name: \"accountName\",\n  },\n  DOMAIN_NAME: {\n    name: \"domainName\",\n    value: \"domainId\",\n    label: \"common.label.domainname\",\n  },\n  DELIVERY_LEAD: {\n    name: \"deliveryLead\",\n    label: \"common.label.deliverylead\",\n  },\n  PROJECT_STATUS: {\n    name: \"projectStatus\",\n    label: \"component.manageprojects.project.status.label\",\n  },\n  PROJECT_DATE: {\n    name: \"projectDate\",\n    label: \"component.manageprojects.project.date.label\",\n    errorMessage: \"component.manageproject.projectdate.msg\",\n  },\n  EMPLOYEE: {\n    name: \"employeeName\",\n    label: \"common.label.employeeName\",\n  },\n  SUB_DOMAIN: {\n    value: \"subDomainId\",\n    name: \"subdomain\",\n    label: \"common.label.subdomain.name.label\",\n  },\n  ASSIGNED_ROLE: {\n    name: \"assignedRole\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ASSIGNED_LEVEL: {\n    name: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ALLOCATION_STATUS: {\n    name: \"allocationStatus\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n  },\n  ALLOCATION_SUB_STATUS: {\n    name: \"allocationSubStatus\",\n    label: \"component.manage.projects.allowed.allocation.substatus.lablel\",\n  },\n  ALLOWED_ALLOCATION_STATUS: {\n    name: \"allowedAllocationSubStatues\",\n    label: \"component.manage.projects.allowed.allocationstatus.lablel\",\n  },\n  BILLABLE_STATUS: {\n    name: \"billableStatus\",\n    label: \"common.label.billablestatus\",\n  },\n  ADD_RESOURCE_ON_BEHALF: {\n    name: \"addResourceOnBehalf\",\n    label: \"component.manage.projects.behalfof.placeholder\",\n  },\n  RESERVED_FOR: {\n    name: \"reservedFor\",\n    label: \"component.manage.projects.reservedFor.placeholder\",\n  },\n  DESIGNATION: {\n    name: \"designation\",\n    label: \"common.label.designation\",\n  },\n  PROJECT_START_DATE: {\n    name: \"projectStartDate\",\n    label: \"component.myprojectallocations.project_start_date.heading\",\n    errorMessage: \"component.manageproject.projectstartdate.msg\",\n  },\n  PROJECT_END_DATE: {\n    name: \"projectEndDate\",\n    label: \"component.myprojectallocations.project_end_date.heading\",\n    errorMessage: \"component.manageproject.projectenddate.msg\",\n  },\n  NOTES: {\n    value: \"notes\",\n    name: \"notes\",\n    label: \"common.label.notes\",\n  },\n};\n\nexport const RESERVATION_FORM_FIELDS = {\n  RESERVATION: {\n    label: \"common.label.reservation\",\n    message: \"common.label.reservation.message\",\n    name: \"comments\",\n    text: \"component.common.update.text\",\n    extendText: \"component.manageprojects.action.text.extend\",\n  },\n  UPDATE_STATUS: {\n    label: \"common.label.update.status\",\n    value: \"updateStatus\",\n  },\n  RELEASE: {\n    label: \"common.label.release\",\n    message: \"common.label.release.date.message\",\n    name: \"releaseDate\",\n    text: \"component.manageprojects.action.label.release\",\n  },\n};\nexport const PAGE_HEADING = {\n  MODAL_TITLE: {\n    title: \"component.manageprojects.action.label.extend.reservation\",\n    text: \"component.manageprojects.action.label.release.employee\",\n  },\n};\n","export const ADD_LABEL = \"component.manage.employees.add.allocation.label\";\nexport const CONFIRM_ALERT = \"component.manage.employees.add.allocation.confirmation\";\nexport const RESERVATION_DETAIL = \"component.manage.employees.reservation.detail.label\";\nexport const ALLOCATION_POPUP_TITLE = \"component.manage.employees.reservation.popup.title\";\nexport const AVAILABLE_FROM = \"component.common.status.available.from\";\nexport const FEEDBACK_DETAIL = \"component.manage.employees.feedback.detail.label\";\n\nexport const ALLOCATION_STATUS_TABLE_COLUMNS = {\n  accountName: {\n    label: \"common.label.accountname\",\n    key: \"accountName\",\n    type: \"text\",\n  },\n  projectName: {\n    type: \"text\",\n    label: \"common.label.projectname\",\n    key: \"projectName\",\n  },\n  domainName: {\n    type: \"text\",\n    label: \"common.label.domain\",\n    key: \"domainName\",\n  },\n  subDomainName: {\n    type: \"text\",\n    label: \"common.label.subdomain.label\",\n    key: \"subDomainName\",\n  },\n  allocationStatus: {\n    type: \"text\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n  },\n  startDate: {\n    type: \"date\",\n    label: \"common.label.allocation.start.date\",\n    key: \"startDate\",\n  },\n  endDate: {\n    type: \"date\",\n    label: \"common.label.allocation.end.date\",\n    key: \"reservationExpiryDate\",\n  },\n};\n\nexport const FEEDBACK_TABLE_COLUMNS = {\n  name: {\n    label: \"manage.employee.reservation.feedback\",\n    key: \"givenByName\",\n    type: \"text\",\n  },\n  email: {\n    label: \"common.label.email\",\n    key: \"givenByEmail\",\n    type: \"text\",\n  },\n  date: {\n    label: \"common.label.date\",\n    key: \"givenOn\",\n    type: \"date\",\n  },\n  feedback: {\n    label: \"common.label.feedback\",\n    key: \"feedback\",\n    type: \"text\",\n  },\n};\nexport const FORM_FIELDS = {\n  ACCOUNT: {\n    label: \"common.label.accountname\",\n    name: \"accountName\",\n  },\n  PROJECT: {\n    label: \"common.label.projectname\",\n    name: \"projectName\",\n  },\n  DOMAIN_NAME: {\n    name: \"domainName\",\n    label: \"common.label.domainname\",\n  },\n  SUB_DOMAIN: {\n    name: \"subdomain\",\n    label: \"common.label.subdomain.name.label\",\n  },\n  ALLOCATION_LEVEL: {\n    name: \"allocationLevel\",\n\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ALLOCATION_STATUS: {\n    name: \"allocationStatus\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n  },\n  START_DATE: {\n    name: \"startDate\",\n    label: \"component.common.start.date\",\n  },\n  REASON: {\n    name: \"releaseFeedbackReason\",\n    label: \"component.common.reason.reserve\",\n  },\n  ASSIGNED_LEVEL: {\n    name: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  NOTES: {\n    name: \"notes\",\n    label: \"common.label.notes\",\n  },\n  LEVER: {\n    value: \"leverURL\",\n    name: \"leverURL\",\n    label: \"common.myprojectallocations.project_lever_url\"\n  }\n};\n"],"sourceRoot":""}
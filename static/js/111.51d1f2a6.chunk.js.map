{"version":3,"sources":["views/app-views/manage-group/statuses/UpdateSubStatusForm.js","constants/ManageEmployeeConstants.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js"],"names":["UpdateSubStatusForm","_ref","handleOk","handleCancel","visible","employeeToEdit","handleRefresh","Option","Select","employeeSubStatusList","useSelector","state","myTeams","masterData","EmployeeSubStatus","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","empSubStatus","subStatus","_useState6","employeeSubStatus","setEmployeSubStatus","_useState7","_useState8","setEmpSubStatusStartDate","_Form$useForm","Form","useForm","form","confirm","Modal","getMessage","useIntlMessage","initialData","employeeId","toDate","empSubStatusEndDate","moment","fromDate","empSubStatusStartDate","handleApiResponse","response","statusCode","message","success","EMPLOYEE_LABELS","EMPLOYEE_UPDATE_SUCCESS","EMPLOYEE_CREATE_SUCCESS","resetFields","saveData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_response","_response2","wrap","_context","prev","next","isEditMode","employeeService","updateSubStatus","sent","createSubStatus","t0","console","error","finish","stop","_x","apply","arguments","React","useCallback","_jsx","_Fragment","children","title","MODAL_TITLE_UPDATE","MODAL_TITLE_ADD","centered","width","okText","UPDATE_TEXT","ADD_TEXT","onOk","validateFields","then","_objectSpread","catch","info","log","VALIDATION_FAILED","value","onCancel","isFieldsTouched","CONFIRM_MESSAGE","okButtonProps","id","cancelButtonProps","closeIcon","CloseOutlined","_jsxs","labelCol","span","wrapperCol","layout","labelAlign","initialValues","role","requiredMark","Row","gutter","Col","className","xs","Item","label","EMP_FORM_FIELDS","EMPLOYEE_SUB_STATUS","name","placeholder","allowClear","onChange","status","map","concat","SUB_STATUS_START_DATE","rules","required","COMMON_MESSAGES","REQIRED_PREFIX","DatePicker","onSelect","format","DATE_FORMAT","SUB_STATUS_END_DATE","style","color","TYPE","STATUSES","ACTIVE_STATUS","INACTIVE_STATUS","ALL_STATUS","EMPLOYEE_EXIT_REASON_TYPES","TEMPORARY","PERMANENT","PERMANENT_EXIT_REASONS","TEMPORARY_EXIT_REASONS","ALLOCATION_STATUSES","EMPLOYEE_TABLE","EMPLOYEE_ID","key","type","HRMS_ID","EMPLOYEE_NAME","LOCATION","PARENT_ACCOUNT","RESERVED_FOR","EMP_SKILLS","ASSIGN_LEVEL","ALLOCATION_SUB_STATUS","EXPERIENCE","DESIGNATION","FUNCTIONAL_GROUP","DATE_OF_JOINING","DATE_OF_LEAVING","EMAIL","EMP_SUB_STATUS","EMP_SUB_STATUS_START_DATE","EMP_SUB_STATUS_END_DATE","DEPLOYMENT_STATUS","PERSONAL_INFO","ORGANIZATIONAL_INFO","OTHER_INFO","RESUMES","EMPLOYEEP_NAME","CURRENT_STATUS","START_DATE_LABEL","PARENT_ACCOUNT_UPDATED","MARK_INACTIVE","MANAGE_UNAVIALABLE","EMPLOYEE_DEACTIVATED_ACCOUNT_SUCCESS","GENDER","MOBILE_NO","invalidMessage","DOJ","DOB","EMP_STATUS","COUNTRY","EMPLOYEMENT_TYPE","SKILLS","PARENT_ACCOUNT_NAME","PREVIOUS_EXPERIENCE","ORG_ROLE","HAS_PASSPORT","PASSPORT_EXPIRY","HAS_B1","B1_EXPIRY","EXIT_DATE","REHIRE_DATE","DEACTIVATE_EMP_FORM_FIELDS","EXIT_TYPE","EXIT_REASON","END_DATE","ADMIN_ROLES","ADMIN","SUPER_ADMIN","ROLES","BAR_COLORS","BULK_UPLOAD_HEADING"],"mappings":"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","file":"static/js/111.51d1f2a6.chunk.js","sourcesContent":["import { Col, DatePicker, Form, message, Modal, Row, Select } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { COMMON_MESSAGES, DATE_FORMAT, VALIDATION_FAILED } from \"constants/CommonConstants\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport employeeService from \"services/EmployeeService\";\nimport { CONFIRM_MESSAGE } from \"../../../../constants/ManageAccounts\";\nimport { EMPLOYEE_LABELS, EMP_FORM_FIELDS } from \"../../../../constants/ManageEmployeeConstants\";\n\nconst UpdateSubStatusForm = ({ handleOk, handleCancel, visible, employeeToEdit, handleRefresh }) => {  \n  const { Option } = Select;\n  const employeeSubStatusList = useSelector(state => state.myTeams.masterData.EmployeeSubStatus);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [employeeSubStatus, setEmployeSubStatus] = useState(\n    employeeToEdit?.empSubStatus\n      ? employeeToEdit?.empSubStatus\n      : employeeToEdit?.subStatus\n      ? employeeToEdit?.subStatus\n      : null,\n  );\n  const [empSubStatusStartDate, setEmpSubStatusStartDate] = useState(null);\n  const [form] = Form.useForm();\n  const { confirm } = Modal;\n  const getMessage = useIntlMessage();\n  const formItemLayout = {\n    labelCol: { span: 10 },\n    wrapperCol: { span: 14 },\n  };\n\n  const initialData = {\n    employeeId: employeeToEdit?.employeeId,\n    subStatus: employeeToEdit?.empSubStatus || employeeToEdit?.subStatus,\n    toDate: employeeToEdit?.empSubStatusEndDate\n      ? moment(employeeToEdit?.empSubStatusEndDate)\n      : employeeToEdit?.toDate\n      ? moment(employeeToEdit?.toDate)\n      : null,\n    fromDate: employeeToEdit?.empSubStatusStartDate\n      ? moment(employeeToEdit?.empSubStatusStartDate)\n      : employeeToEdit?.fromDate\n      ? moment(employeeToEdit?.fromDate)\n      : null,\n  };\n  function showConfirm() {\n    confirm({\n      title: CONFIRM_MESSAGE.value,\n      centered: true,\n      onOk() {\n        handleCancel();\n      },\n      onCancel() {},\n    });\n  }\n  const HandleSubmit = () => {\n    form\n      .validateFields()\n      .then(values => {\n        saveData({...values, employeeId: employeeToEdit?.employeeId});\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n  const handleApiResponse = response => {\n    if (response?.statusCode === 901 || response?.statusCode === 906) {\n      message.success(\n        response.statusCode === 906\n          ? getMessage(EMPLOYEE_LABELS.EMPLOYEE_UPDATE_SUCCESS)\n          : getMessage(EMPLOYEE_LABELS.EMPLOYEE_CREATE_SUCCESS),\n      );\n      handleOk();\n      handleRefresh();\n      handleCancel();\n      form.resetFields();\n    } else {\n      setErrorMessage(response?.message || \"\");\n    }\n  };\n  const saveData = async values => {\n    try {\n      setLoading(true);\n      let response;\n      if (isEditMode()) {\n        response = await employeeService.updateSubStatus(values);\n        if (response?.statusCode === 400 || response?.statusCode === 401) {\n          response = await employeeService.createSubStatus(values);\n        }\n      }\n      handleApiResponse(response);\n    } catch (e) {\n      console.error(\"Unable to save employee data\", e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const onCancelHandler = () => {\n    if (form.isFieldsTouched()) {\n      showConfirm();\n    } else {\n      handleCancel();\n    }\n  };\n\n  // Memoized version of making fields disabled.\n  const isEditMode = React.useCallback(() => {\n    return employeeToEdit && true;\n  }, [employeeToEdit]);\n\n  return (\n    <>\n      <Modal\n        title={\n          isEditMode() ? getMessage(EMPLOYEE_LABELS.MODAL_TITLE_UPDATE) : getMessage(EMPLOYEE_LABELS.MODAL_TITLE_ADD)\n        }\n        visible={visible}\n        centered\n        width=\"33%\"\n        okText={isEditMode() ? getMessage(EMPLOYEE_LABELS.UPDATE_TEXT) : getMessage(EMPLOYEE_LABELS.ADD_TEXT)}\n        onOk={HandleSubmit}\n        onCancel={onCancelHandler}\n        okButtonProps={{ loading: loading, id: \"add-emp-addBtn\" }}\n        cancelButtonProps={{ id: \"add-emp-cancelBtn\" }}\n        closeIcon={<CloseOutlined id=\"add-emp-close-modal-btn\" />}\n      >\n        <Form\n          {...formItemLayout}\n          layout={\"horizontal\"}\n          form={form}\n          labelAlign=\"left\"\n          initialValues={employeeToEdit ? initialData : { role: \"Employee\" }}\n          requiredMark=\"\"\n        >\n              <Row gutter={24}>\n                <Col className=\"mb-1\" xs={24}>\n                  <Form.Item\n                    label={getMessage(EMP_FORM_FIELDS.EMPLOYEE_SUB_STATUS.label)}\n                    name={EMP_FORM_FIELDS.EMPLOYEE_SUB_STATUS.name}\n                  >\n                      <Select\n                        placeholder={getMessage(EMP_FORM_FIELDS.EMPLOYEE_SUB_STATUS.label)}\n                        allowClear\n                        onChange={status => setEmployeSubStatus(status)}\n                        value={employeeToEdit?.subStatus}\n                      >\n                        {employeeSubStatusList?.map(status => {\n                          return (\n                            <Option key={status} value={status}>\n                              {status}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                  </Form.Item>\n                </Col>\n                {employeeSubStatus && (\n                  <Col className=\"mb-1\" xs={24}>\n                    <Form.Item\n                      label={\n                        <div className=\"text-wrap\">{`${employeeSubStatus} ${getMessage(\n                          EMP_FORM_FIELDS.SUB_STATUS_START_DATE.label,\n                        )}`}</div>\n                      }\n                      name={EMP_FORM_FIELDS.SUB_STATUS_START_DATE.name}\n                      rules={[\n                        {\n                          required: isEditMode() ? false : true,\n                          message: getMessage(\n                            COMMON_MESSAGES.REQIRED_PREFIX,\n                            EMP_FORM_FIELDS.SUB_STATUS_START_DATE.label,\n                          ),\n                        },\n                      ]}\n                    >\n                      <DatePicker\n                        onSelect={value => setEmpSubStatusStartDate(value)}\n                        format={DATE_FORMAT}\n                        value={employeeToEdit?.fromDate}\n                        id=\"emp-date-of-joining\"\n                        className=\"w-100\"\n                      />\n                    </Form.Item>\n                  </Col>\n                )}\n                {employeeSubStatus && (\n                  <Col className=\"mb-1\" xs={24}>\n                    <Form.Item\n                      label={\n                        <div className=\"text-wrap\">{`${employeeSubStatus} ${getMessage(\n                          EMP_FORM_FIELDS.SUB_STATUS_END_DATE.label,\n                        )}`}</div>\n                      }\n                      name={EMP_FORM_FIELDS.SUB_STATUS_END_DATE.name}\n                      rules={[\n                        {\n                          required: isEditMode() ? false : true,\n                          message: getMessage(\n                            COMMON_MESSAGES.REQIRED_PREFIX,\n                            EMP_FORM_FIELDS.SUB_STATUS_END_DATE.label,\n                          ),\n                        },\n                      ]}\n                    >\n                      <DatePicker\n                        format={DATE_FORMAT}\n                        value={employeeToEdit?.toDate}\n                        className=\"w-100\"\n                      />\n                    </Form.Item>\n                  </Col>\n                )}\n              </Row>\n          <Col>\n            {errorMessage && (\n              <div className=\"text-left my-3\" style={{ color: \"red\" }}>\n                * {errorMessage}\n              </div>\n            )}\n          </Col>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateSubStatusForm;\n","const ACTIVE_STATUS = { label: \"component.common.status.active\", value: \"Active\" };\nconst INACTIVE_STATUS = { label: \"component.common.status.inactive\", value: \"In Active\" };\nconst ALL_STATUS = { label: \"component.common.status.all\", value: \"all\" };\nconst TEMPORARY = { label: \"component.manageemployees.label.temporary\", value: \"TEMPORARY_EXIT\" };\nconst PERMANENT = { label: \"component.manageemployees.label.permanent\", value: \"PERMANENT_EXIT\" };\n\nexport const TYPE = \"email\";\n\nexport const STATUSES = {\n  ACTIVE_STATUS,\n  INACTIVE_STATUS,\n  ALL_STATUS,\n};\nexport const EMPLOYEE_EXIT_REASON_TYPES = {\n  TEMPORARY,\n  PERMANENT,\n};\nexport const PERMANENT_EXIT_REASONS = [\n  {\n    label: \"component.manageemployees.label.permanent.resigned\",\n    value: \"RESIGNED\",\n  },\n  {\n    label: \"component.manageemployees.label.permanent.termination\",\n    value: \"TERMINATION\",\n  },\n];\nexport const TEMPORARY_EXIT_REASONS = [\n  {\n    label: \"component.manageemployees.label.temporary.visaAuthorisation\",\n    value: \"VISA_AUTHORISATION\",\n  },\n  {\n    label: \"component.manageemployees.label.temporary.personal\",\n    value: \"PERSONAL\",\n  },\n];\nexport const ALLOCATION_STATUSES = [\n  {\n    label: \"common.label.reserved\",\n    value: \"RESERVED\",\n  },\n  {\n    label: \"common.label.shadow\",\n    value: \"SHADOW\",\n  },\n  {\n    label: \"common.label.internal_billable\",\n    value: \"INTERNAL_BILLABLE\",\n  },\n];\nexport const EMPLOYEE_TABLE = {\n  EMPLOYEE_ID: {\n    label: \"common.label.employeeId\",\n    key: \"employeeId\",\n    type: \"text\",\n    width: 120,\n  },\n  HRMS_ID: {\n    label: \"common.label.hrmsId\",\n    key: \"hrmsId\",\n    type: \"text\",\n    width: 120,\n  },\n  EMPLOYEE_NAME: {\n    label: \"common.label.employeeName\",\n    key: \"employeeName\",\n    type: \"text\",\n    width: 150,\n  },\n  LOCATION: {\n    label: \"common.label.location\",\n    key: \"empLocation\",\n    type: \"text\",\n    width: 120,\n  },\n  PARENT_ACCOUNT: {\n    label: \"common.label.parent.account\",\n    key: \"parentAccount\",\n    type: \"text\",\n    width: 130,\n  },\n  RESERVED_FOR: {\n    label: \"component.manageemployees.reservedFor.heading\",\n    key: \"reservedForAccount\",\n    type: \"text\",\n    width: 130,\n  },\n  EMP_SKILLS: {\n    key: \"employeeSkills\",\n    label: \"component.myprofile.employeeskills.label\",\n    type: \"text\",\n    width: 170,\n  },\n  ASSIGN_LEVEL: {\n    key: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n    type: \"text\",\n    width: 170,\n  },\n  ALLOCATION_SUB_STATUS: {\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n    type: \"text\",\n    width: 120,\n  },\n  EXPERIENCE: {\n    label: \"common.label.experience\",\n    key: \"totalExperience\",\n    type: \"text\",\n    width: 130,\n  },\n  DESIGNATION: {\n    label: \"common.label.designation\",\n    key: \"designation\",\n    type: \"text\",\n    width: 130,\n  },\n  FUNCTIONAL_GROUP: {\n    label: \"common.label.functionalgroup\",\n    key: \"functionalGroup\",\n    type: \"text\",\n    width: 130,\n  },\n  DATE_OF_JOINING: {\n    label: \"common.label.dateofjoining\",\n    key: \"dateOfJoining\",\n    type: \"date\",\n    width: 130,\n  },\n  DATE_OF_LEAVING: {\n    label: \"common.label.dateofleaving\",\n    key: \"endDate\",\n    type: \"date\",\n    width: 130,\n  },\n  EMAIL: {\n    label: \"common.label.emailid\",\n    key: \"emailId\",\n    type: \"text\",\n    width: 180,\n  },\n\n  EMP_SUB_STATUS: {\n    label: \"common.report.Employee.UnAvailable.reason\",\n    key: \"empSubStatus\",\n    type: \"text\",\n    width: 130,\n  },\n  EMP_SUB_STATUS_START_DATE: {\n    label: \"common.label.substatusstartdate\",\n    key: \"empSubStatusStartDate\",\n    type: \"date\",\n    width: 130,\n  },\n  EMP_SUB_STATUS_END_DATE: {\n    label: \"common.label.substatusenddate\",\n    key: \"empSubStatusEndDate\",\n    type: \"date\",\n    width: 130,\n  },\n  DEPLOYMENT_STATUS: {\n    label: \"common.label.deploymentstatus\",\n    key: \"nonDeployable\",\n    type: \"text\",\n    width: 130,\n  },\n};\n\nexport const EMPLOYEE_LABELS = {\n  MODAL_TITLE_ADD: \"component.addemployeeform.modalTitle\",\n  MODAL_TITLE_UPDATE: \"component.updateemployeeform.modalTitle\",\n  UPDATE_TEXT: \"component.common.update.text\",\n  ADD_TEXT: \"component.common.add.text\",\n  PERSONAL_INFO: \"component.addemployeeform.personalInfo.header\",\n  ORGANIZATIONAL_INFO: \"component.addemployeeform.organizationInfo.header\",\n  OTHER_INFO: \"component.addemployeeform.otherInfo.header\",\n  RESUMES: \"component.addemployeeform.resumes.header\",\n  EMPLOYEE_CREATE_SUCCESS: \"component.addemployeeform.success.message\",\n  EMPLOYEE_UPDATE_SUCCESS: \"component.addemployeeform.update.message\",\n  EMPLOYEE_ID: \"common.label.employeeId\",\n  EMPLOYEEP_NAME: \"common.label.employeeName\",\n  CURRENT_STATUS: \"common.label.current.status\",\n  START_DATE_LABEL: \"component.manageprojects.manageteams.startdate.heading\",\n  PARENT_ACCOUNT: \"common.label.parent.account\",\n  PARENT_ACCOUNT_UPDATED: \"common.label.parent.account.updated\",\n  MARK_INACTIVE: \"common.label.emp.mark.inactive\",\n  MANAGE_UNAVIALABLE: \"common.label.emp.manage.unavailable\",\n  EMPLOYEE_DEACTIVATED_ACCOUNT_SUCCESS: \"component.addemployeeform.deactivatedAccount.success.message\",\n};\n\nexport const EMP_FORM_FIELDS = {\n  EMPLOYEE_ID: {\n    label: \"common.label.employeeId\",\n    name: \"employeeId\",\n  },\n  HRMS_ID: {\n    label: \"common.label.hrmsId\",\n    name: \"hrmsId\",\n  },\n  EMPLOYEE_NAME: {\n    label: \"common.label.employeeName\",\n    name: \"employeeName\",\n  },\n  GENDER: {\n    label: \"component.addemployeeform.personalInfo.gender.label\",\n    name: \"gender\",\n  },\n  MOBILE_NO: {\n    label: \"common.label.mobileno\",\n    name: \"mobileNumber\",\n    invalidMessage: \"component.addemployeeform.mobileno.message.validation\",\n  },\n  EMAIL: {\n    label: \"common.label.email\",\n    name: \"emailId\",\n    invalidMessage: \"component.addemployeeform.email.invalid.error.message\",\n  },\n  DOJ: {\n    label: \"common.label.dateofjoining\",\n    name: \"dateOfJoining\",\n  },\n  DOB: {\n    label: \"component.addemployeeform.personalInfo.birthDate.label\",\n    name: \"dateOfBirth\",\n    invalidMessage: \"component.addemployeeform.personalInfo.birthDate.validation\",\n  },\n  EMP_STATUS: {\n    label: \"common.label.status\",\n    name: \"empStatus\",\n  },\n  FUNCTIONAL_GROUP: {\n    label: \"common.label.functionalgroup\",\n    name: \"functionalGroup\",\n  },\n  DESIGNATION: {\n    label: \"common.label.designation\",\n    name: \"designation\",\n  },\n  COUNTRY: {\n    label: \"component.addemployeeform.organizationInfo.country.label\",\n    name: \"country\",\n  },\n  LOCATION: {\n    label: \"common.label.location\",\n    name: \"empLocation\",\n  },\n  EMPLOYEMENT_TYPE: {\n    label: \"component.addemployeeform.organizationInfo.employementType.label\",\n    name: \"employmentType\",\n  },\n  SKILLS: {\n    label: \"component.myprofile.primaryskills.label\",\n    name: \"baseTechnology\",\n  },\n  PARENT_ACCOUNT_NAME: {\n    label: \"component.addemployeeform.parentaccountname\",\n    name: \"parentAccountName\",\n  },\n  PREVIOUS_EXPERIENCE: {\n    label: \"component.addemployeeform.otherInfo.previousExperience.label\",\n    name: \"previousExperience\",\n    invalidMessage: \"component.addemployeeform.otherInfo.previousExperience.error\",\n  },\n  ORG_ROLE: {\n    label: \"component.addemployeeform.otherInfo.orgRole.label\",\n    name: \"role\",\n  },\n  HAS_PASSPORT: {\n    label: \"component.addemployeeform.otherInfo.hasPassport.label\",\n    name: \"hasPassort\",\n  },\n  PASSPORT_EXPIRY: {\n    label: \"component.addemployeeform.passportexpirydate\",\n    name: \"passportExpiryDate\",\n  },\n  HAS_B1: {\n    label: \"component.addemployeeform.hasB1\",\n    name: \"hasB1\",\n  },\n  B1_EXPIRY: {\n    label: \"component.addemployeeform.hasB1.expiryDate.title\",\n    name: \"b1ExpiryDate\",\n  },\n  EXIT_DATE: {\n    label: \"component.addemployeeform.inactive.endDate\",\n    name: \"endDate\",\n    invalidMessage: \"component.addemployeeform.inactive.endDate.invalid\",\n  },\n  EMPLOYEE_SUB_STATUS: {\n    label: \"common.report.Employee.UnAvailable.reason\",\n    name: \"subStatus\",\n  },\n  SUB_STATUS_START_DATE: {\n    label: \"common.label.substatusstartdate\",\n    name: \"fromDate\",\n  },\n  SUB_STATUS_END_DATE: {\n    label: \"common.label.substatusenddate\",\n    name: \"toDate\",\n  },\n  EMP_SUB_STATUS: {\n    label: \"common.label.employeeSubStatus\",\n    name: \"empSubStatus\",\n  },\n  DEPLOYMENT_STATUS: {\n    label: \"common.label.deploymentstatus\",\n    name: \"nonDeployable\",\n  },\n  REHIRE_DATE: {\n    label: \"common.label.rehire.Date\",\n    name: \"rehireDate\",\n  },\n};\nexport const DEACTIVATE_EMP_FORM_FIELDS = {\n  EXIT_TYPE: {\n    label: \"component.manageemployees.label.exitType\",\n    name: \"exitType\",\n  },\n  EXIT_REASON: {\n    label: \"component.manageemployees.label.exitReason\",\n    name: \"exitReason\",\n  },\n  END_DATE: {\n    label: \"component.manageprojects.enddate.heading\",\n    name: \"endDate\",\n  },\n};\nexport const ADMIN_ROLES = {\n  ADMIN: {\n    key: \"Admin\",\n  },\n  SUPER_ADMIN: {\n    key: \"Super_Admin\",\n  },\n};\n\nexport const ROLES = [ADMIN_ROLES.SUPER_ADMIN.key, ADMIN_ROLES.ADMIN.key, \"RMG\"];\nexport const BAR_COLORS = [\"#108ee9\", \"#87d068\"];\nexport const BULK_UPLOAD_HEADING = {\n  name: \"component.bulkuploademployee.header\",\n  value: \"Uploaded Employee History\",\n};\n","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;"],"sourceRoot":""}
{"version":3,"sources":["views/app-views/manage-group/domains/AddDomainForm.js","constants/ManageEmployeeConstants.js","services/DesignationService.js","constants/ManageDesinations.js","constants/AddDomainFormConstant.js"],"names":["AddDomain","_ref","_editDomainData$subDo","visible","onCancel","editDomainData","onSave","_Form$useForm","useDispatch","Form","useForm","form","_slicedToArray","Option","Select","confirm","Modal","_useState","useState","_useState2","subDomainList","setSubDomainList","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","loading","setLoading","intl","useIntl","getMessage","useIntlMessage","SUB_DOMAIN","FORM_FIELDS","DOMAIN_NAME","useEffect","getSubDomains","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","domainID","list","wrap","_context","prev","next","domainService","getSubDomainListV2","sent","stop","_x","apply","arguments","domainId","CreateDomain","_ref3","_callee2","values","saveResponse","_context2","addDomainV2","verifySaveResult","resetFields","message","success","formatMessage","id","DOMAIN_MESSAGES","DOMAIN_SUCCESS","t0","console","error","finish","_x2","UpdateDomain","_ref4","_callee3","_context3","isActive","domainStatus","updateDomainStatus","updateDomainV2","DOMAIN_UPDATE","_x3","includes","statusCode","description","Error","initialsData","domainName","subDomains","log","isEditMode","React","useCallback","_jsx","title","UPDATE_DOMAIN_FORM_TITLE","ADD_DOMAIN_FORM_TITLE","isFieldsTouched","CONFIRM_MESSAGE","value","centered","onOk","validateFields","then","_objectSpread","catch","info","VALIDATION_FAILED","NO_CHANGES_TO_SAVE","okText","UPDATE_TEXT","text","ADD_TEXT","okButtonProps","children","_jsxs","labelAlign","labelCol","span","wrapperCol","name","ADD_DOMAIN_FORM_NAME","initialValues","Item","label","rules","required","className","Input","placeholder","map","x","join","mode","SELECT_METHODS","MULTIPLE","showArrow","showSearch","optionFilterProp","CHILDREN","item","subDomainName","DOMAIN_STATUS","DESIGNATION_FORM_FIELDS","DESIGNATION_STATUS","EMP_FORM_FIELDS","EMP_STATUS","Object","DESIGNATION_STATUSES","e","style","color","TYPE","STATUSES","ACTIVE_STATUS","INACTIVE_STATUS","ALL_STATUS","EMPLOYEE_EXIT_REASON_TYPES","TEMPORARY","PERMANENT","PERMANENT_EXIT_REASONS","TEMPORARY_EXIT_REASONS","ALLOCATION_STATUSES","EMPLOYEE_TABLE","EMPLOYEE_ID","key","type","width","HRMS_ID","EMPLOYEE_NAME","LOCATION","PARENT_ACCOUNT","RESERVED_FOR","EMP_SKILLS","ASSIGN_LEVEL","ALLOCATION_SUB_STATUS","EXPERIENCE","DESIGNATION","FUNCTIONAL_GROUP","DATE_OF_JOINING","DATE_OF_LEAVING","EMAIL","EMP_SUB_STATUS","EMP_SUB_STATUS_START_DATE","EMP_SUB_STATUS_END_DATE","DEPLOYMENT_STATUS","EMPLOYEE_LABELS","MODAL_TITLE_ADD","MODAL_TITLE_UPDATE","PERSONAL_INFO","ORGANIZATIONAL_INFO","OTHER_INFO","RESUMES","EMPLOYEE_CREATE_SUCCESS","EMPLOYEE_UPDATE_SUCCESS","EMPLOYEEP_NAME","CURRENT_STATUS","START_DATE_LABEL","PARENT_ACCOUNT_UPDATED","MARK_INACTIVE","MANAGE_UNAVIALABLE","EMPLOYEE_DEACTIVATED_ACCOUNT_SUCCESS","GENDER","MOBILE_NO","invalidMessage","DOJ","DOB","COUNTRY","EMPLOYEMENT_TYPE","SKILLS","PARENT_ACCOUNT_NAME","PREVIOUS_EXPERIENCE","ORG_ROLE","HAS_PASSPORT","PASSPORT_EXPIRY","HAS_B1","B1_EXPIRY","EXIT_DATE","EMPLOYEE_SUB_STATUS","SUB_STATUS_START_DATE","SUB_STATUS_END_DATE","REHIRE_DATE","DEACTIVATE_EMP_FORM_FIELDS","EXIT_TYPE","EXIT_REASON","END_DATE","ADMIN_ROLES","ADMIN","SUPER_ADMIN","ROLES","BAR_COLORS","BULK_UPLOAD_HEADING","designationService","deleteDesignation","designationId","_API_CONSTANTS$DELETE","path","method","response","API_CONSTANTS","DELETE_DESIGNATION","service","url","concat","Utils","isEmpty","abrupt","getList","params","_API_CONSTANTS$DESIGN","_response$records","DESIGNATION_LIST_BY_PARAMS","data","records","forEach","record","index","createDesignation","_API_CONSTANTS$CREATE","CREATE_DESIGNATION","changeStatus","_callee4","_API_CONSTANTS$CHANGE","_args4","_context4","length","undefined","CHANGE_DESIGNATION_STATUS","headers","uploadDocument","_ref5","_callee5","payload","_API_CONSTANTS$UPLOAD","_context5","UPLOAD_DESIGNATION","_x4","updateDesignation","_ref6","_callee6","_API_CONSTANTS$UPLOAD2","_context6","UPLOAD_DESIGNATION_API","_x5","UPDATE_SUCCESS","IntlMessage","MANAGE_DESIGNATIONS_TITLE","ADD_DESIGNATION","UPDATE_DESIGNATION","SUCCESS_MESSAGE","DESIGNATION_FIELD","DESIGNATION_FIELDS_NAME","LABEL","ACTIVE","IN_ACTIVE","DESIGNATION_TABLE_COLUMNS","STATUS","options","INVALID_DELIVERY_LEAD","INVALID_SUB_DOMAIN","INVALID_DOMAIN","DELIVERY_LEAD","ACCOUNT"],"mappings":"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","file":"static/js/106.dcc90bc5.chunk.js","sourcesContent":["import { Form, Input, message, Modal, Select } from \"antd\";\nimport {\n  ADD_DOMAIN_FORM_NAME,\n  ADD_DOMAIN_FORM_TITLE,\n  DOMAIN_MESSAGES,\n  FORM_FIELDS,\n  UPDATE_DOMAIN_FORM_TITLE,\n} from \"constants/AddDomainFormConstant\";\nimport {\n  ADD_TEXT,\n  CHILDREN,\n  CONFIRM_MESSAGE,\n  FORM_LAYOUT,\n  SELECT_METHODS,\n  VALIDATION_FAILED,\n} from \"constants/CommonConstants\";\nimport { EMP_FORM_FIELDS } from \"constants/ManageEmployeeConstants\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport { useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport domainService from \"services/DomainService\";\nimport { UPDATE_TEXT } from \"../../../../constants/ManageAccounts\";\nimport { STATUSES } from \"../../../../constants/ManageEmployeeConstants\";\nimport React from \"react\";\nimport { DESIGNATION_STATUSES } from \"constants/ManageDesinations\";\nimport { DESIGNATION_FORM_FIELDS } from \"../../../../constants/ManageDesinations\";\n\nconst AddDomain = ({ visible, onCancel, editDomainData, onSave }) => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const { Option } = Select;\n  const { confirm } = Modal;\n  const [subDomainList, setSubDomainList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const intl = useIntl();\n  const getMessage = useIntlMessage();\n  const { SUB_DOMAIN, DOMAIN_NAME } = FORM_FIELDS;\n\n  useEffect(() => {\n    const getSubDomains = async domainID => {\n      const list = await domainService.getSubDomainListV2(domainID);\n      setSubDomainList(list);\n    };\n\n    if (editDomainData?.domainId) {\n      getSubDomains(editDomainData.domainId);\n    }\n  }, [editDomainData]);\n\n  const CreateDomain = async values => {\n    try {\n      setLoading(true);\n      const saveResponse = await domainService.addDomainV2(values);\n      verifySaveResult(saveResponse);\n      form.resetFields();\n      onSave();\n      onCancel();\n      message.success(intl.formatMessage({ id: DOMAIN_MESSAGES.DOMAIN_SUCCESS }));\n    } catch (e) {\n      console.error(\"Error in adding a new domain\", e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const UpdateDomain = async values => {\n    try {\n      if (editDomainData.isActive !== values?.domainStatus) {\n        const saveResponse = await domainService.updateDomainStatus(values);\n      }\n      setLoading(true);\n      const saveResponse = await domainService.updateDomainV2(values);\n      verifySaveResult(saveResponse);\n      form.resetFields();\n      onSave();\n      onCancel();\n      message.success(intl.formatMessage({ id: DOMAIN_MESSAGES.DOMAIN_UPDATE }));\n    } catch (e) {\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const verifySaveResult = saveResponse => {\n    if ([200, 201].includes(saveResponse?.statusCode)) {\n      // If update or create request is successful\n      return;\n    }\n    setErrorMessage(saveResponse?.description);\n    throw new Error(saveResponse?.message);\n  };\n\n  const handleOk = () => {\n    if (!form.isFieldsTouched()) {\n      setErrorMessage(DOMAIN_MESSAGES.NO_CHANGES_TO_SAVE);\n      return;\n    }\n    form\n      .validateFields()\n      .then(values => {\n        if (editDomainData) {\n          UpdateDomain({\n            ...values,\n            domainId: editDomainData?.domainId,\n          });\n        } else {\n          CreateDomain({ domainName: values.domainName });\n        }\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const handleConfirm = () => {\n    confirm({\n      title: CONFIRM_MESSAGE.value,\n      centered: true,\n      onOk() {\n        onCancel();\n      },\n    });\n  };\n\n  const handleCancel = () => {\n    if (form.isFieldsTouched()) {\n      handleConfirm();\n    } else {\n      onCancel();\n    }\n  };\n\n  const initialsData = {\n    domainName: editDomainData?.domainName,\n    subDomains: editDomainData?.subDomains,\n    domainStatus: editDomainData?.isActive === true ? true : false,\n  };\n  console.log(editDomainData.subDomains);\n\n  const isEditMode = React.useCallback(() => {\n    return editDomainData && true;\n  }, [editDomainData]);\n  const formItemLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  return (\n    <Modal\n      visible={visible}\n      title={editDomainData ? UPDATE_DOMAIN_FORM_TITLE : ADD_DOMAIN_FORM_TITLE}\n      onCancel={handleCancel}\n      onOk={handleOk}\n      okText={editDomainData ? UPDATE_TEXT.text : ADD_TEXT.text}\n      okButtonProps={{ loading: loading }}\n    >\n      <Form form={form} labelAlign=\"left\" {...formItemLayout} name={ADD_DOMAIN_FORM_NAME} initialValues={initialsData}>\n        <Form.Item\n          name={DOMAIN_NAME.value}\n          label={getMessage(DOMAIN_NAME.label)}\n          rules={[\n            {\n              required: isEditMode() ? false : true,\n            },\n          ]}\n        >\n          {isEditMode() ? (\n            <span className=\"profile-text-color\">{editDomainData?.domainName}</span>\n          ) : (\n            <Input placeholder={getMessage(DOMAIN_NAME.placeholder)} />\n          )}\n        </Form.Item>\n        {editDomainData && (\n          <Form.Item\n            name={SUB_DOMAIN.value}\n            label={getMessage(SUB_DOMAIN.label)}\n            rules={[\n              {\n                required: isEditMode() && editDomainData?.isActive !== true ? false : true,\n                message: \"Please select Sub Domain\",\n              },\n            ]}\n          >\n            {isEditMode() && editDomainData?.isActive !== true ? (\n              <span className=\"profile-text-color\">{editDomainData?.subDomains?.map(x => x).join(\", \")}</span>\n            ) : (\n              <Select\n                // disabled={editDomainData?.isActive === true ? false : isEditMode()}\n                placeholder={getMessage(SUB_DOMAIN.placeholder)}\n                mode={SELECT_METHODS.MULTIPLE}\n                showArrow\n                showSearch\n                optionFilterProp={CHILDREN}\n              >\n                {subDomainList?.map(item => {\n                  return (\n                    <Option key={item?.subDomainName} value={item?.subDomainName}>\n                      {item?.subDomainName}\n                    </Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n        )}\n\n        <Form.Item\n          name={FORM_FIELDS.DOMAIN_STATUS.name}\n          label={getMessage(DESIGNATION_FORM_FIELDS.DESIGNATION_STATUS.label)}\n          rules={[{ required: true }]}\n        >\n          <Select placeholder={getMessage(EMP_FORM_FIELDS.EMP_STATUS.label)} id=\"emp-status\">\n            {Object.values(DESIGNATION_STATUSES).map(e => {\n              return (\n                <Option key={e.name} value={e.value}>\n                  {getMessage(e.name)}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        {errorMessage && <div style={{ color: \"red\" }}>* {errorMessage}</div>}\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddDomain;\n","const ACTIVE_STATUS = { label: \"component.common.status.active\", value: \"Active\" };\nconst INACTIVE_STATUS = { label: \"component.common.status.inactive\", value: \"In Active\" };\nconst ALL_STATUS = { label: \"component.common.status.all\", value: \"all\" };\nconst TEMPORARY = { label: \"component.manageemployees.label.temporary\", value: \"TEMPORARY_EXIT\" };\nconst PERMANENT = { label: \"component.manageemployees.label.permanent\", value: \"PERMANENT_EXIT\" };\n\nexport const TYPE = \"email\";\n\nexport const STATUSES = {\n  ACTIVE_STATUS,\n  INACTIVE_STATUS,\n  ALL_STATUS,\n};\nexport const EMPLOYEE_EXIT_REASON_TYPES = {\n  TEMPORARY,\n  PERMANENT,\n};\nexport const PERMANENT_EXIT_REASONS = [\n  {\n    label: \"component.manageemployees.label.permanent.resigned\",\n    value: \"RESIGNED\",\n  },\n  {\n    label: \"component.manageemployees.label.permanent.termination\",\n    value: \"TERMINATION\",\n  },\n];\nexport const TEMPORARY_EXIT_REASONS = [\n  {\n    label: \"component.manageemployees.label.temporary.visaAuthorisation\",\n    value: \"VISA_AUTHORISATION\",\n  },\n  {\n    label: \"component.manageemployees.label.temporary.personal\",\n    value: \"PERSONAL\",\n  },\n];\nexport const ALLOCATION_STATUSES = [\n  {\n    label: \"common.label.reserved\",\n    value: \"RESERVED\",\n  },\n  {\n    label: \"common.label.shadow\",\n    value: \"SHADOW\",\n  },\n  {\n    label: \"common.label.internal_billable\",\n    value: \"INTERNAL_BILLABLE\",\n  },\n];\nexport const EMPLOYEE_TABLE = {\n  EMPLOYEE_ID: {\n    label: \"common.label.employeeId\",\n    key: \"employeeId\",\n    type: \"text\",\n    width: 120,\n  },\n  HRMS_ID: {\n    label: \"common.label.hrmsId\",\n    key: \"hrmsId\",\n    type: \"text\",\n    width: 120,\n  },\n  EMPLOYEE_NAME: {\n    label: \"common.label.employeeName\",\n    key: \"employeeName\",\n    type: \"text\",\n    width: 150,\n  },\n  LOCATION: {\n    label: \"common.label.location\",\n    key: \"empLocation\",\n    type: \"text\",\n    width: 120,\n  },\n  PARENT_ACCOUNT: {\n    label: \"common.label.parent.account\",\n    key: \"parentAccount\",\n    type: \"text\",\n    width: 130,\n  },\n  RESERVED_FOR: {\n    label: \"component.manageemployees.reservedFor.heading\",\n    key: \"reservedForAccount\",\n    type: \"text\",\n    width: 130,\n  },\n  EMP_SKILLS: {\n    key: \"employeeSkills\",\n    label: \"component.myprofile.employeeskills.label\",\n    type: \"text\",\n    width: 170,\n  },\n  ASSIGN_LEVEL: {\n    key: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n    type: \"text\",\n    width: 170,\n  },\n  ALLOCATION_SUB_STATUS: {\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n    type: \"text\",\n    width: 120,\n  },\n  EXPERIENCE: {\n    label: \"common.label.experience\",\n    key: \"totalExperience\",\n    type: \"text\",\n    width: 130,\n  },\n  DESIGNATION: {\n    label: \"common.label.designation\",\n    key: \"designation\",\n    type: \"text\",\n    width: 130,\n  },\n  FUNCTIONAL_GROUP: {\n    label: \"common.label.functionalgroup\",\n    key: \"functionalGroup\",\n    type: \"text\",\n    width: 130,\n  },\n  DATE_OF_JOINING: {\n    label: \"common.label.dateofjoining\",\n    key: \"dateOfJoining\",\n    type: \"date\",\n    width: 130,\n  },\n  DATE_OF_LEAVING: {\n    label: \"common.label.dateofleaving\",\n    key: \"endDate\",\n    type: \"date\",\n    width: 130,\n  },\n  EMAIL: {\n    label: \"common.label.emailid\",\n    key: \"emailId\",\n    type: \"text\",\n    width: 180,\n  },\n\n  EMP_SUB_STATUS: {\n    label: \"common.report.Employee.UnAvailable.reason\",\n    key: \"empSubStatus\",\n    type: \"text\",\n    width: 130,\n  },\n  EMP_SUB_STATUS_START_DATE: {\n    label: \"common.label.substatusstartdate\",\n    key: \"empSubStatusStartDate\",\n    type: \"date\",\n    width: 130,\n  },\n  EMP_SUB_STATUS_END_DATE: {\n    label: \"common.label.substatusenddate\",\n    key: \"empSubStatusEndDate\",\n    type: \"date\",\n    width: 130,\n  },\n  DEPLOYMENT_STATUS: {\n    label: \"common.label.deploymentstatus\",\n    key: \"nonDeployable\",\n    type: \"text\",\n    width: 130,\n  },\n};\n\nexport const EMPLOYEE_LABELS = {\n  MODAL_TITLE_ADD: \"component.addemployeeform.modalTitle\",\n  MODAL_TITLE_UPDATE: \"component.updateemployeeform.modalTitle\",\n  UPDATE_TEXT: \"component.common.update.text\",\n  ADD_TEXT: \"component.common.add.text\",\n  PERSONAL_INFO: \"component.addemployeeform.personalInfo.header\",\n  ORGANIZATIONAL_INFO: \"component.addemployeeform.organizationInfo.header\",\n  OTHER_INFO: \"component.addemployeeform.otherInfo.header\",\n  RESUMES: \"component.addemployeeform.resumes.header\",\n  EMPLOYEE_CREATE_SUCCESS: \"component.addemployeeform.success.message\",\n  EMPLOYEE_UPDATE_SUCCESS: \"component.addemployeeform.update.message\",\n  EMPLOYEE_ID: \"common.label.employeeId\",\n  EMPLOYEEP_NAME: \"common.label.employeeName\",\n  CURRENT_STATUS: \"common.label.current.status\",\n  START_DATE_LABEL: \"component.manageprojects.manageteams.startdate.heading\",\n  PARENT_ACCOUNT: \"common.label.parent.account\",\n  PARENT_ACCOUNT_UPDATED: \"common.label.parent.account.updated\",\n  MARK_INACTIVE: \"common.label.emp.mark.inactive\",\n  MANAGE_UNAVIALABLE: \"common.label.emp.manage.unavailable\",\n  EMPLOYEE_DEACTIVATED_ACCOUNT_SUCCESS: \"component.addemployeeform.deactivatedAccount.success.message\",\n};\n\nexport const EMP_FORM_FIELDS = {\n  EMPLOYEE_ID: {\n    label: \"common.label.employeeId\",\n    name: \"employeeId\",\n  },\n  HRMS_ID: {\n    label: \"common.label.hrmsId\",\n    name: \"hrmsId\",\n  },\n  EMPLOYEE_NAME: {\n    label: \"common.label.employeeName\",\n    name: \"employeeName\",\n  },\n  GENDER: {\n    label: \"component.addemployeeform.personalInfo.gender.label\",\n    name: \"gender\",\n  },\n  MOBILE_NO: {\n    label: \"common.label.mobileno\",\n    name: \"mobileNumber\",\n    invalidMessage: \"component.addemployeeform.mobileno.message.validation\",\n  },\n  EMAIL: {\n    label: \"common.label.email\",\n    name: \"emailId\",\n    invalidMessage: \"component.addemployeeform.email.invalid.error.message\",\n  },\n  DOJ: {\n    label: \"common.label.dateofjoining\",\n    name: \"dateOfJoining\",\n  },\n  DOB: {\n    label: \"component.addemployeeform.personalInfo.birthDate.label\",\n    name: \"dateOfBirth\",\n    invalidMessage: \"component.addemployeeform.personalInfo.birthDate.validation\",\n  },\n  EMP_STATUS: {\n    label: \"common.label.status\",\n    name: \"empStatus\",\n  },\n  FUNCTIONAL_GROUP: {\n    label: \"common.label.functionalgroup\",\n    name: \"functionalGroup\",\n  },\n  DESIGNATION: {\n    label: \"common.label.designation\",\n    name: \"designation\",\n  },\n  COUNTRY: {\n    label: \"component.addemployeeform.organizationInfo.country.label\",\n    name: \"country\",\n  },\n  LOCATION: {\n    label: \"common.label.location\",\n    name: \"empLocation\",\n  },\n  EMPLOYEMENT_TYPE: {\n    label: \"component.addemployeeform.organizationInfo.employementType.label\",\n    name: \"employmentType\",\n  },\n  SKILLS: {\n    label: \"component.myprofile.primaryskills.label\",\n    name: \"baseTechnology\",\n  },\n  PARENT_ACCOUNT_NAME: {\n    label: \"component.addemployeeform.parentaccountname\",\n    name: \"parentAccountName\",\n  },\n  PREVIOUS_EXPERIENCE: {\n    label: \"component.addemployeeform.otherInfo.previousExperience.label\",\n    name: \"previousExperience\",\n    invalidMessage: \"component.addemployeeform.otherInfo.previousExperience.error\",\n  },\n  ORG_ROLE: {\n    label: \"component.addemployeeform.otherInfo.orgRole.label\",\n    name: \"role\",\n  },\n  HAS_PASSPORT: {\n    label: \"component.addemployeeform.otherInfo.hasPassport.label\",\n    name: \"hasPassort\",\n  },\n  PASSPORT_EXPIRY: {\n    label: \"component.addemployeeform.passportexpirydate\",\n    name: \"passportExpiryDate\",\n  },\n  HAS_B1: {\n    label: \"component.addemployeeform.hasB1\",\n    name: \"hasB1\",\n  },\n  B1_EXPIRY: {\n    label: \"component.addemployeeform.hasB1.expiryDate.title\",\n    name: \"b1ExpiryDate\",\n  },\n  EXIT_DATE: {\n    label: \"component.addemployeeform.inactive.endDate\",\n    name: \"endDate\",\n    invalidMessage: \"component.addemployeeform.inactive.endDate.invalid\",\n  },\n  EMPLOYEE_SUB_STATUS: {\n    label: \"common.report.Employee.UnAvailable.reason\",\n    name: \"subStatus\",\n  },\n  SUB_STATUS_START_DATE: {\n    label: \"common.label.substatusstartdate\",\n    name: \"fromDate\",\n  },\n  SUB_STATUS_END_DATE: {\n    label: \"common.label.substatusenddate\",\n    name: \"toDate\",\n  },\n  EMP_SUB_STATUS: {\n    label: \"common.label.employeeSubStatus\",\n    name: \"empSubStatus\",\n  },\n  DEPLOYMENT_STATUS: {\n    label: \"common.label.deploymentstatus\",\n    name: \"nonDeployable\",\n  },\n  REHIRE_DATE: {\n    label: \"common.label.rehire.Date\",\n    name: \"rehireDate\",\n  },\n};\nexport const DEACTIVATE_EMP_FORM_FIELDS = {\n  EXIT_TYPE: {\n    label: \"component.manageemployees.label.exitType\",\n    name: \"exitType\",\n  },\n  EXIT_REASON: {\n    label: \"component.manageemployees.label.exitReason\",\n    name: \"exitReason\",\n  },\n  END_DATE: {\n    label: \"component.manageprojects.enddate.heading\",\n    name: \"endDate\",\n  },\n};\nexport const ADMIN_ROLES = {\n  ADMIN: {\n    key: \"Admin\",\n  },\n  SUPER_ADMIN: {\n    key: \"Super_Admin\",\n  },\n};\n\nexport const ROLES = [ADMIN_ROLES.SUPER_ADMIN.key, ADMIN_ROLES.ADMIN.key, \"RMG\"];\nexport const BAR_COLORS = [\"#108ee9\", \"#87d068\"];\nexport const BULK_UPLOAD_HEADING = {\n  name: \"component.bulkuploademployee.header\",\n  value: \"Uploaded Employee History\",\n};\n","import service from \"auth/FetchInterceptor\";\nimport API_CONSTANTS from \"constants/ApiConstant\";\nimport Utils from \"utils\";\nimport { domainService } from \"services/DomainService\";\n\nconst designationService = {};\n\ndesignationService.deleteDesignation = async function (designationId) {\n  const { path, method } = API_CONSTANTS.DELETE_DESIGNATION;\n\n  try {\n    const response = await service({\n      url: `${path}${designationId}`,\n      method,\n    });\n    if (Utils.isEmpty(response)) {\n      return [];\n    }\n    return response;\n  } catch (e) {\n    console.error(\"Error in deleting designation.\", e);\n    throw Error(e);\n  }\n};\n\ndesignationService.getList = async function (params) {\n  // const { path, method } = API_CONSTANTS.DESIGNATION_LIST;\n  const { path, method } = API_CONSTANTS.DESIGNATION_LIST_BY_PARAMS;\n  try {\n    const response = await service({\n      url: path,\n      method,\n      data: params,\n    });\n    if (Utils.isEmpty(response)) {\n      return [];\n    }\n    response.records?.forEach((record, index) => {\n      record.key = index;\n    });\n    return response.records;\n  } catch (e) {\n    console.error(\"Error in getting the designation list.\", e);\n  }\n};\n\ndesignationService.createDesignation = async function (data) {\n  const { path, method } = API_CONSTANTS.CREATE_DESIGNATION;\n  try {\n    const response = await service({\n      url: path,\n      method,\n      data: data,\n    });\n    if (Utils.isEmpty(response)) {\n      return [];\n    }\n    return response;\n  } catch (e) {\n    console.error(\"Error in changing designation status.\", e);\n  }\n};\n\ndesignationService.changeStatus = async function (data = \"\", designationId) {\n  const { path, method } = API_CONSTANTS.CHANGE_DESIGNATION_STATUS;\n  try {\n    const response = await service({\n      url: `${path}${designationId}`,\n      method,\n      data,\n      headers: {\n        \"content-type\": \"text/plain\",\n      },\n    });\n    if (Utils.isEmpty(response)) {\n      return [];\n    }\n    return response.records;\n  } catch (e) {\n    console.error(\"Error in changing designation status.\", e);\n  }\n};\n\ndesignationService.uploadDocument = async function (payload) {\n  const { path, method } = API_CONSTANTS.UPLOAD_DESIGNATION;\n  try {\n    const response = await service({\n      url: path,\n      method,\n      data: payload,\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Something went wrong while uploading document\", error);\n    throw Error(error);\n  }\n};\ndesignationService.updateDesignation = async function (data) {\n  const { path, method } = API_CONSTANTS.UPLOAD_DESIGNATION_API;\n  try {\n    const response = await service({\n      url: path,\n      method,\n      data,\n    });\n    if (Utils.isEmpty(response)) {\n      return [];\n    }\n    return response;\n  } catch (e) {\n    console.error(\"Error in updating designation status.\", e);\n  }\n};\nexport default designationService;\n","import IntlMessage from \"components/util-components/IntlMessage\";\nimport designationService from \"services/DesignationService\";\n\nexport const EMPLOYEE_COUNT = {\n  text: <IntlMessage id=\"component.managedesignations.employeecount\" />,\n  value: \"designationCount\",\n};\nexport const UPDATE_SUCCESS = {\n  value: \"Designation Updated Successfully\",\n  label: \"component.desigantion.success.update\",\n};\nexport const MANAGE_DESIGNATIONS_TITLE = {\n  text: <IntlMessage id=\"component.managedesignations.heading\" />,\n  value: \"designation\",\n};\nexport const ADD_DESIGNATION = {\n  text: <IntlMessage id=\"component.managedesignations.button.text\" />,\n  value: \"add designation\",\n};\nexport const UPDATE_DESIGNATION = {\n  text: <IntlMessage id=\"component.managedesignations.button.update.text\" />,\n  value: \"Update Designation\",\n};\nexport const UPLOAD_DESIGNATION = {\n  text: <IntlMessage id=\"component.managedesignations.upload.button.text\" />,\n  value: \"Upload Designation\",\n};\nexport const ENABLE_USER = {\n  text: <IntlMessage id=\"component.managedesignations.enable.user\" />,\n  value: \"Do you want to enable this designation?\",\n};\nexport const DISABLE_USER = {\n  text: <IntlMessage id=\"component.managedesignations.disable.user\" />,\n  value: \"Do you want to disable this designation?\",\n};\nexport const DELETE_DESIGNATION = {\n  text: <IntlMessage id=\"component.managedesignations.delete.designation\" />,\n  value: \"Do you want to delete this designation?\",\n};\nexport const DESIGNATION_NAME = {\n  text: <IntlMessage id=\"component.managedesignation.designationname.heading\" />,\n  value: \"designationName\",\n};\nexport const DESIGNATION_NAME_MESSAGE = {\n  text: <IntlMessage id=\"component.adddesignationform.form.designationname.message\" />,\n  value: \" Designation Name\",\n};\n\nexport const SUCCESS_MESSAGE = {\n  text: <IntlMessage id=\"component.adddesignationform.message\" />,\n  value: \"Designation created successfully\",\n};\n\nexport const DESIGNATION_STATUS_SUCCESS_MESSAGE = {\n  text: <IntlMessage id=\"component.adddesignationform.message\" />,\n  value: \"Designation status updated successfully\",\n};\n\nexport const DELETE_DESIGNATION_SUCCESS_MESSAGE = {\n  text: <IntlMessage id=\"component.adddesignationform.message\" />,\n  value: \"Designation deleted successfully\",\n};\n\nexport const ACTIVE_STATUS = {\n  text: <IntlMessage id=\"component.common.status.active\" />,\n  value: true,\n};\n\nexport const INACTIVE_STATUS = {\n  text: <IntlMessage id=\"component.common.status.inactive\" />,\n  value: false,\n};\n\nexport const ACTIVE_STATUS_FILTER = { label: \"component.common.status.active\", value: \"active\" };\nexport const INACTIVE_STATUS_FILTER = { label: \"component.common.status.inactive\", value: \"inactive\" };\n\nexport const DESIGNATION_FORM_FIELDS = {\n  DESIGNATION_FIELD: {\n    name: \"designationName\",\n    value: \"designation\",\n    label: \"component.managedesignation.designationname.heading\",\n  },\n  DESIGNATION_STATUS: {\n    name: \"status\",\n    label: \"common.label.status\",\n  },\n};\n\nexport const DESIGNATION_FIELDS_NAME = {\n  LABEL: {\n    label: \"component.managedomains.search.text\",\n    value: \"country\",\n  },\n  ACTIVE: {\n    label: \"component.common.status.active\",\n  },\n  IN_ACTIVE: {\n    label: \"component.common.status.inactive\",\n  },\n};\n\nexport const DESIGNATION_TABLE_COLUMNS = {\n  DESIGNATION: {\n    type: \"text\",\n    key: \"designation\",\n    label: \"common.label.designation\",\n    width: 400,\n  },\n  COUNTRY: {\n    type: \"text\",\n    key: \"country\",\n    label: \"component.addemployeeform.organizationInfo.country.label\",\n    width: 400,\n  },\n  STATUS: {\n    key: \"activeInd\",\n    type: \"select\",\n    label: \"common.label.status\",\n    options: [{ ...ACTIVE_STATUS_FILTER }, { ...INACTIVE_STATUS_FILTER }],\n    width: 400,\n  },\n};\nexport const DESIGNATION_STATUSES = {\n  ACTIVE: {\n    name: \"Active\",\n    value: true,\n  },\n  IN_ACTIVE: {\n    name: \"In Active\",\n    value: false,\n  },\n};\n","import IntlMessage from \"components/util-components/IntlMessage\";\n\nexport const ADD_DOMAIN_FORM_TITLE = <IntlMessage id=\"component.managedomain.adddomainform.title\" />;\nexport const UPDATE_DOMAIN_FORM_TITLE = <IntlMessage id=\"component.managedomain.updatedomainform.title\" />;\nexport const ADD_DOMAIN_FORM_NAME = \"add_domain\";\n\nexport const DOMAIN_MESSAGES = {\n  DOMAIN_SUCCESS: \"component.managedomains.success.message\",\n  DOMAIN_UPDATE: \"component.managedomains.update.message\",\n  NO_CHANGES_TO_SAVE: <IntlMessage id=\"common.nochangetosave\" />,\n  INVALID_DELIVERY_LEAD: <IntlMessage id=\"component.managedomain.domainform.deliverlead.message\" />,\n  INVALID_SUB_DOMAIN: <IntlMessage id=\"component.managedomain.domainform.subdomain.message\" />,\n  INVALID_DOMAIN: <IntlMessage id=\"component.managedomain.domainform.domainname.message\" />,\n};\n\nexport const FORM_FIELDS = {\n  DOMAIN_NAME: {\n    value: \"domainName\",\n    label: \"common.label.domainname\",\n    placeholder: \"component.managedomain.domainform.domain.message\",\n  },\n  SUB_DOMAIN: {\n    value: \"subDomains\",\n    label: \"component.managedomain.domainform.subdomain.label\",\n    placeholder: \"component.managedomain.domainform.subdomain.message\",\n  },\n  DELIVERY_LEAD: {\n    value: \"deliveryManagers\",\n    label: \"component.managedomain.domainform.deliverlead.label\",\n    placeholder: \"component.managedomain.domainform.deliverlead.message\",\n  },\n  ACCOUNT: {\n    name: \"accountName\",\n    value: \"accountId\",\n    label: \"common.label.account\",\n    placeholder: \"component.managedomain.domainform.account.message\",\n  },\n  DOMAIN_STATUS: {\n    name: \"domainStatus\",\n    label: \"components.domain.status\",\n  },\n};\n"],"sourceRoot":""}
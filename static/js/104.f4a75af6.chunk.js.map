{"version":3,"sources":["views/app-views/manage-group/accounts/AddAccountForm.jsx","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/SaveOutlined.js","../node_modules/@ant-design/icons/es/icons/SaveOutlined.js"],"names":["useBreakpoint","Grid","AddAccountForm","_ref","_editAccounts$clientP","_editAccounts$clientD2","_editAccounts$clientP2","setIsVisible","onCancel","editAccounts","handleRefresh","_useState","useState","_useState2","_slicedToArray","loading","setloading","IndustryType","useSelector","state","myTeams","masterData","employeeData","allLocations","_state$myTeams$allLoc","map","x","country","_useState3","_useState4","technicalfunctionalGroupList","setTechnicalFunctionalGroup","_Form$useForm","Form","useForm","form","Option","Select","confirm","OptGroup","Modal","_useState5","_useState6","hasChanges","setHasChanges","_useState7","_useState8","data","setData","_useState9","_useState10","Region","setRegion","_useState11","_useState12","functionalGroup","setFunctionalGroup","_useState13","_useState14","ccls","setCcls","_useState15","_useState16","isCclFormVisible","setCclFormVisiblity","isMobile","Utils","getBreakPoint","includes","_useState17","_useState18","errorMessage","setErrorMessage","_useState19","_useState20","CDH","setCDH","_useState21","_useState22","CCLList","setCCLList","getMessage","useIntlMessage","useEffect","getTechnicalFunctionalGroup","clientCountryLeads","assignKey","listOfCCl","filter","e","employeeId","_editAccounts$clientD","clientDeliveryHead","isEmpty","MESSAGES","CCL_AND_CDH_DUPLICATE","disabledStatus","React","useCallback","obj","editdata","id","key","region","functionalGroups","handleAdd","values","_data","tableData","length","dtableData","concat","_toConsumableArray","resetFields","setFieldsValue","columns","title","ACC_FORM_FIELDS","CCLS","REGION","label","dataIndex","name","FUNC_GROUP","render","services","join","CCL_NAME","_employeeData$find","find","employeeName","LABELS","ACTIONS","record","_jsx","Button","onClick","handleDelete","children","DeleteOutlined","onCreateAccount","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dataToPass","response","wrap","_context","prev","next","ManageAccountsService","prepareDataForAddAccount","CreateAccount","sent","statusCode","message","success","ADD_SUCCESS","stop","_x","apply","arguments","onUpdateAccount","_ref3","_callee2","_context2","prepareDataForUpdateAccount","Update","accountId","UPDATE_SUCCESS","_x2","handleOk","validateFields","then","performValidations","_objectSpread","saveData","catch","info","console","log","VALIDATION_FAILED","value","_ref4","_callee3","_context3","t0","finish","_x3","formData","error","performDataValidations","handleCancel","isFieldsTouched","CONFIRM_MESSAGE","centered","onOk","_ref5","_callee4","technicalFunctionalGroup","_context4","commonService","fetchAllFunctionalGroupsTechnical","initials","accountName","industryType","clientAddress","clientPortfolioManager","status","clientPartner","_jsxs","visible","EDIT_ACCOUNT_TITLE","ADD_ACCOUNT_TITLE","width","footer","CANCEL_TEXT","MODAL_BACK_BUTTON","type","MODAL_ADD_BUTTON_TYPE","UPDATE_TEXT","ADD_TEXT","SUBMIT_TEXT","okButtonProps","cancelButtonProps","closeIcon","CloseOutlined","labelCol","span","wrapperCol","layout","FORM_LAYOUT","horizontal","FORM_NAME","initialValues","labelAlign","Row","gutter","Col","xs","md","lg","Item","ACC_NAME","rules","required","Input","placeholder","INDUSTRY_TYPE","_e$charAt","charAt","toUpperCase","slice","CLIENT_ADDRESS","showSearch","optionFilterProp","onSelect","CPM","CHILDREN","CP","STATUS","initialValue","STATUSES","ACTIVE_STATUS","className","text","allowClear","Object","ALL_STATUS","PlusCircleOutlined","style","color","sortArray","showArrow","onChange","mode","SELECT_METHODS","MULTIPLE","CCL","Flex","alignItems","SaveOutlined","Table","dataSource","props","ref","AntdIcon","icon","DeleteOutlinedSvg","displayName","PlusCircleOutlinedSvg","SaveOutlinedSvg"],"mappings":"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","file":"static/js/104.f4a75af6.chunk.js","sourcesContent":["import { CloseOutlined, DeleteOutlined, PlusCircleOutlined, SaveOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Form, Grid, Input, message, Modal, Row, Select, Table } from \"antd\";\nimport Flex from \"components/shared-components/Flex\";\nimport {\n  CHILDREN,\n  CONFIRM_MESSAGE,\n  FORM_LAYOUT,\n  MODAL_ADD_BUTTON_TYPE,\n  MODAL_BACK_BUTTON,\n  SELECT_METHODS,\n  SUBMIT_TEXT,\n  VALIDATION_FAILED,\n} from \"constants/CommonConstants\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport { isEmpty } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport commonService from \"services/CommonService\";\nimport Utils from \"utils\";\nimport { ACC_FORM_FIELDS, LABELS, MESSAGES, STATUSES } from \"../../../../constants/ManageAccounts\";\nimport ManageAccountsService from \"../../../../services/ManageAccountService\";\nimport { ACTIVE_STATUS } from \"../../../../constants/CommonConstants\";\nconst { useBreakpoint } = Grid;\n\nconst AddAccountForm = ({ setIsVisible, onCancel, editAccounts, handleRefresh }) => {\n  const [loading, setloading] = useState(false);\n  const { IndustryType } = useSelector(state => state.myTeams.masterData);\n  const employeeData = useSelector(state => state.myTeams.employeeData);\n  const allLocations = useSelector(state => state.myTeams.allLocations?.map(x => x.country));\n  const [technicalfunctionalGroupList, setTechnicalFunctionalGroup] = useState([]);\n  const [form] = Form.useForm();\n  const { Option, OptGroup } = Select;\n  const { confirm } = Modal;\n  const [hasChanges, setHasChanges] = useState(false);\n  const [data, setData] = useState([]);\n  const [Region, setRegion] = useState(null);\n  const [functionalGroup, setFunctionalGroup] = useState([]);\n  const [ccls, setCcls] = useState(null);\n  const [isCclFormVisible, setCclFormVisiblity] = useState(false);\n  const isMobile = !Utils.getBreakPoint(useBreakpoint()).includes(\"md\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [CDH, setCDH] = useState(null);\n  const [CCLList, setCCLList] = useState([]);\n  const getMessage = useIntlMessage();\n\n  const formItemLayout = {\n    labelCol: { span: 10 },\n    wrapperCol: { span: 14 },\n  };\n  useEffect(() => {\n    getTechnicalFunctionalGroup();\n    if (editAccounts) {\n      if (editAccounts.clientCountryLeads !== null) {\n        assignKey(editAccounts?.clientCountryLeads);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    setCCLList([]);\n    let listOfCCl = CDH\n      ? employeeData.filter(e => e.employeeId !== CDH)\n      : employeeData.filter(e => e.employeeId !== editAccounts?.clientDeliveryHead?.employeeId);\n    setCCLList(listOfCCl);\n    if (ccls === CDH && !Utils.isEmpty(CDH)) {\n      setErrorMessage(getMessage(MESSAGES.CCL_AND_CDH_DUPLICATE));\n    } else {\n      setErrorMessage(false);\n    }\n  }, [CDH, employeeData, editAccounts, ccls]);\n\n  const disabledStatus = React.useCallback(() => {\n    if (!editAccounts) {\n      return true;\n    }\n  }, []);\n  const assignKey = obj => {\n    const editdata = obj?.map((x, id) => {\n      return {\n        key: id,\n        region: x.region,\n        functionalGroups: x.functionalGroups,\n        employeeId: x.employeeId,\n      };\n    });\n    setData(editdata);\n  };\n  // const mergeLocations = () => {\n  //   const merged = Array.prototype.concat(...allLocations);\n  //   setLocationsList(merged);\n\n  // }\n  const handleAdd = values => {\n    const _value = data && data[data.length - 1]?.key;\n    const tableData = {\n      key: (_value || 0) + 1,\n      region: Region,\n      functionalGroups: functionalGroup,\n      employeeId: ccls,\n    };\n\n    let dtableData = Utils.isEmpty(data) ? [tableData] : [...data, tableData];\n    setData(dtableData);\n    setCclFormVisiblity(false);\n    setHasChanges(true);\n    resetFields();\n  };\n  const resetFields = () => {\n    form.setFieldsValue({ functionalGroups: [], region: null, clientCountryLeads: null });\n    setFunctionalGroup([]);\n    setRegion(null);\n    setCcls(null);\n  };\n  const handleDelete = key => {\n    setHasChanges(true);\n    let dtableData = data.filter(x => x.key !== key);\n    setData(dtableData);\n  };\n  const columns = [\n    {\n      title: getMessage(ACC_FORM_FIELDS.CCLS.REGION.label),\n      dataIndex: ACC_FORM_FIELDS.CCLS.REGION.name,\n      key: ACC_FORM_FIELDS.CCLS.REGION.name,\n    },\n    {\n      title: getMessage(ACC_FORM_FIELDS.CCLS.FUNC_GROUP.label),\n      dataIndex: ACC_FORM_FIELDS.CCLS.FUNC_GROUP.name,\n      key: ACC_FORM_FIELDS.CCLS.FUNC_GROUP.name,\n      render: services => services?.join(\",\"),\n    },\n    {\n      title: getMessage(ACC_FORM_FIELDS.CCLS.CCL_NAME.label),\n      dataIndex: ACC_FORM_FIELDS.CCLS.CCL_NAME.name,\n      key: ACC_FORM_FIELDS.CCLS.CCL_NAME.name,\n      render: employeeId => employeeData.find(x => x.employeeId === employeeId)?.employeeName,\n    },\n    {\n      title: getMessage(LABELS.ACTIONS),\n      key: \"actions\",\n      render: record => (\n        <Button onClick={() => handleDelete(record.key)} id={\"manage-account-delete-CCL\"}>\n          <DeleteOutlined />\n        </Button>\n      ),\n    },\n  ];\n  const handleConfirm = () => {\n    confirm({\n      title: CONFIRM_MESSAGE.value,\n      centered: true,\n      onOk() {\n        onCancel();\n      },\n    });\n  };\n\n  const confirmationCCls = () => {\n    confirm({\n      title: CONFIRM_MESSAGE.value,\n      centered: true,\n      onOk() {\n        resetFields();\n        setCclFormVisiblity(false);\n      },\n    });\n  };\n  const closeCCls = () => {\n    if (form.isFieldsTouched()) {\n      confirmationCCls();\n    } else {\n      setCclFormVisiblity(false);\n    }\n  };\n\n  const onCreateAccount = async values => {\n    const dataToPass = ManageAccountsService.prepareDataForAddAccount(values, data);\n    const response = await ManageAccountsService.CreateAccount(dataToPass);\n    if (response?.statusCode) {\n      message.success(getMessage(MESSAGES.ADD_SUCCESS));\n      handleRefresh();\n      onCancel();\n      form.resetFields();\n    } else {\n      // message.error(getMessage(MESSAGES.CCL_AND_CDH_DUPLICATE));\n    }\n  };\n  const onUpdateAccount = async values => {\n    const dataToPass = ManageAccountsService.prepareDataForUpdateAccount(editAccounts, values, data);\n    const response = await ManageAccountsService.Update(editAccounts?.accountId, dataToPass);\n    if (response?.statusCode) {\n      message.success(getMessage(MESSAGES.UPDATE_SUCCESS));\n      handleRefresh();\n      onCancel();\n      form.resetFields();\n    } else {\n      // message.error(getMessage(MESSAGES.CCL_AND_CDH_DUPLICATE));\n    }\n  };\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then(values => {\n        if (performValidations({ ...values, ccls: data })) {\n          saveData(values);\n        }\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n  const saveData = async values => {\n    try {\n      setloading(true);\n      if (editAccounts) {\n        await onUpdateAccount(values);\n      } else {\n        await onCreateAccount(values);\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setloading(false);\n    }\n  };\n  const performValidations = formData => {\n    const error = ManageAccountsService.performDataValidations(formData);\n    if (isEmpty(error)) {\n      return true;\n    }\n    setErrorMessage(getMessage(error));\n    return false;\n  };\n  const handleCancel = () => {\n    if (form.isFieldsTouched() || hasChanges) {\n      handleConfirm();\n    } else {\n      onCancel();\n    }\n  };\n  const handleCCLS = () => {\n    if (\n      Utils.isEmpty(ccls) ||\n      Utils.isEmpty(Region) ||\n      Utils.isEmpty(functionalGroup) ||\n      (ccls === CDH && !Utils.isEmpty(CDH))\n    ) {\n      return null;\n    } else {\n      return (\n        <Button onClick={handleAdd} className=\"mr-2\" id={\"manage-account-save-ccl\"}>\n          <SaveOutlined />\n        </Button>\n      );\n    }\n  };\n  const getTechnicalFunctionalGroup = async () => {\n    const technicalFunctionalGroup = await commonService.fetchAllFunctionalGroupsTechnical();\n    if (technicalFunctionalGroup) {\n      setTechnicalFunctionalGroup(technicalFunctionalGroup);\n    }\n  };\n  const initials = {\n    accountName: editAccounts?.accountName,\n    industryType: editAccounts?.industryType,\n    clientAddress: editAccounts?.clientAddress,\n    clientPortfolioManager: editAccounts?.clientPortfolioManager?.employeeId || [],\n    clientDeliveryHead: editAccounts?.clientDeliveryHead?.employeeId || [],\n    status: editAccounts?.status,\n    clientPartner: editAccounts?.clientPartner?.employeeId || [],\n  };\n  return (\n    <Modal\n      visible={setIsVisible}\n      title={editAccounts ? getMessage(LABELS.EDIT_ACCOUNT_TITLE) : getMessage(LABELS.ADD_ACCOUNT_TITLE)}\n      onCancel={handleCancel}\n      onOk={handleOk}\n      width={isMobile ? \"80%\" : \"90%\"}\n      footer={[\n        <Button key={MODAL_BACK_BUTTON.value} onClick={handleCancel} id={\"manage-account-cancel-btn\"}>\n          {getMessage(LABELS.CANCEL_TEXT)}\n        </Button>,\n        <Button\n          key={SUBMIT_TEXT.value}\n          onClick={handleOk}\n          type={MODAL_ADD_BUTTON_TYPE.value}\n          loading={loading}\n          id={\"manage-account-ok-btn\"}\n        >\n          {editAccounts ? getMessage(LABELS.UPDATE_TEXT) : getMessage(LABELS.ADD_TEXT)}\n        </Button>,\n      ]}\n      okButtonProps={{ loading: loading, id: \"add-account-addBtn\" }}\n      cancelButtonProps={{ id: \"add-account-cancelBtn\" }}\n      closeIcon={<CloseOutlined id=\"add-account-close-modal-btn\" />}\n    >\n      <Form\n        {...formItemLayout}\n        form={form}\n        layout={FORM_LAYOUT.horizontal}\n        name={ACC_FORM_FIELDS.FORM_NAME.name}\n        initialValues={initials}\n        labelAlign=\"left\"\n      >\n        <Row gutter={24}>\n          <Col xs={24} md={12} lg={8}>\n            <Form.Item\n              name={ACC_FORM_FIELDS.ACC_NAME.name}\n              label={getMessage(ACC_FORM_FIELDS.ACC_NAME.label)}\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input placeholder={getMessage(ACC_FORM_FIELDS.ACC_NAME.label)} id=\"manage-account-account-input\" />\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={12} lg={8}>\n            <Form.Item\n              name={ACC_FORM_FIELDS.INDUSTRY_TYPE.name}\n              label={getMessage(ACC_FORM_FIELDS.INDUSTRY_TYPE.label)}\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Select placeholder={getMessage(ACC_FORM_FIELDS.INDUSTRY_TYPE.label)} id=\"manage-account-industry\">\n                {IndustryType?.map(e => {\n                  return (\n                    <Option key={e} value={e}>\n                      {e.charAt(0)?.toUpperCase() + e.slice(1)}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={12} lg={8}>\n            <Form.Item\n              name={ACC_FORM_FIELDS.CLIENT_ADDRESS.name}\n              label={getMessage(ACC_FORM_FIELDS.CLIENT_ADDRESS.label)}\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input placeholder={getMessage(ACC_FORM_FIELDS.CLIENT_ADDRESS.label)} id=\"manage-account-address-input\" />\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={12} lg={8}>\n            <Form.Item\n              name={ACC_FORM_FIELDS.CDH.name}\n              label={getMessage(ACC_FORM_FIELDS.CDH.label)}\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Select\n                placeholder={getMessage(ACC_FORM_FIELDS.CDH.label)}\n                showSearch\n                optionFilterProp=\"children\"\n                id=\"manage-account-cdh-input\"\n                onSelect={e => setCDH(e)}\n              >\n                {employeeData?.map(e => {\n                  return (\n                    <Option key={e.employeeId} value={e.employeeId}>\n                      {e.employeeName}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={12} lg={8}>\n            <Form.Item\n              name={ACC_FORM_FIELDS.CPM.name}\n              label={getMessage(ACC_FORM_FIELDS.CPM.label)}\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Select\n                placeholder={getMessage(ACC_FORM_FIELDS.CPM.label)}\n                showSearch\n                optionFilterProp={CHILDREN}\n                id=\"manage-account-cpm-input\"\n              >\n                {employeeData?.map(e => {\n                  return (\n                    <Option key={e.employeeId} value={e.employeeId}>\n                      {e.employeeName}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={12} lg={8}>\n            <Form.Item\n              name={ACC_FORM_FIELDS.CP.name}\n              label={getMessage(ACC_FORM_FIELDS.CP.label)}\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Select\n                placeholder={getMessage(ACC_FORM_FIELDS.CP.label)}\n                showSearch\n                optionFilterProp={CHILDREN}\n                id=\"manage-account-cpm-input\"\n              >\n                {employeeData?.map(e => {\n                  return (\n                    <Option key={e.employeeId} value={e.employeeId}>\n                      {e.employeeName}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={12} lg={8}>\n            <Form.Item\n              name={ACC_FORM_FIELDS.STATUS.name}\n              label={getMessage(ACC_FORM_FIELDS.STATUS.label)}\n              rules={[{ required: disabledStatus() ? false : true }]}\n              initialValue={STATUSES.ACTIVE_STATUS.value}\n            >\n              {disabledStatus() ? (\n                <span className=\"profile-text-color\">{ACTIVE_STATUS.text}</span>\n              ) : (\n                <Select\n                  // disabled={disabledStatus()}\n                  placeholder={getMessage(ACC_FORM_FIELDS.STATUS.label)}\n                  allowClear\n                  id=\"manage-account-status-input\"\n                >\n                  {Object.values(STATUSES)\n                    .filter(x => x.value !== STATUSES.ALL_STATUS.value)\n                    .map(e => {\n                      return <Option value={e.value}>{getMessage(e.label)}</Option>;\n                    })}\n                </Select>\n              )}\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row className=\"mb-2\">\n          <Col xs={12} md={4} lg={4}>\n            <span>\n              <h3>{getMessage(ACC_FORM_FIELDS.CCLS.title)}</h3>\n            </span>\n          </Col>\n          <Col xs={12} md={4} lg={4}>\n            <Button\n              onClick={() => {\n                setCclFormVisiblity(true);\n              }}\n              id={\"manage-account-show-ccl-btn\"}\n            >\n              <PlusCircleOutlined />\n            </Button>\n          </Col>\n          {errorMessage && (\n            <Col xs={12} md={16}>\n              <div style={{ color: \"red\" }}>* {errorMessage}</div>\n            </Col>\n          )}\n        </Row>\n        {isCclFormVisible && (\n          <Row gutter={12}>\n            <Col xs={24} md={12} lg={6}>\n              <Form.Item\n                name={ACC_FORM_FIELDS.CCLS.REGION.name}\n                label={getMessage(ACC_FORM_FIELDS.CCLS.REGION.label)}\n                required\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Select\n                  placeholder={getMessage(ACC_FORM_FIELDS.CCLS.REGION.label)}\n                  showSearch\n                  optionFilterProp={CHILDREN}\n                  onSelect={e => setRegion(e)}\n                  id=\"manage-account-region-input\"\n                >\n                  {Utils.sortArray(allLocations).map(x => (\n                    <Option key={x} value={x}>\n                      {x}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col xs={24} md={12} lg={6}>\n              <Form.Item\n                name={ACC_FORM_FIELDS.CCLS.FUNC_GROUP.name}\n                label={getMessage(ACC_FORM_FIELDS.CCLS.FUNC_GROUP.label)}\n                required\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Select\n                  id=\"manage-account-functionalgroup-input\"\n                  placeholder={getMessage(ACC_FORM_FIELDS.CCLS.FUNC_GROUP.label)}\n                  showSearch\n                  showArrow\n                  optionFilterProp={CHILDREN}\n                  onChange={e => setFunctionalGroup(e)}\n                  mode={SELECT_METHODS.MULTIPLE}\n                >\n                  {technicalfunctionalGroupList?.map(x => (\n                    <Option key={x} value={x}>\n                      {x}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col xs={24} md={12} lg={6}>\n              <Form.Item\n                name={ACC_FORM_FIELDS.CCLS.CCL.name}\n                label={getMessage(ACC_FORM_FIELDS.CCLS.CCL.label)}\n                required\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Select\n                  placeholder={getMessage(ACC_FORM_FIELDS.CCLS.CCL.label)}\n                  showSearch\n                  optionFilterProp={CHILDREN}\n                  onSelect={e => setCcls(e)}\n                  id=\"manage-account-ccl-input\"\n                >\n                  {CCLList?.map(e => {\n                    return (\n                      <Option key={e.employeeId} value={e.employeeId}>\n                        {e.employeeName}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col xs={24} md={12} lg={6}>\n              <Flex alignItems=\"center\">\n                <span className=\"mr-2\">\n                  <h5>{getMessage(LABELS.ACTIONS)}</h5>\n                </span>\n                <Row>\n                  <Col>{handleCCLS()}</Col>\n                  <Col>\n                    <Button onClick={closeCCls} id={\"manage-account-close-btn\"}>\n                      <CloseOutlined />\n                    </Button>\n                  </Col>\n                </Row>\n              </Flex>\n            </Col>\n          </Row>\n        )}\n      </Form>\n      <Table dataSource={data} columns={columns} />\n    </Modal>\n  );\n};\n\nexport default AddAccountForm;\n","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);","// This icon file is generated automatically.\nvar SaveOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z\" } }] }, \"name\": \"save\", \"theme\": \"outlined\" };\nexport default SaveOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SaveOutlinedSvg from \"@ant-design/icons-svg/es/asn/SaveOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SaveOutlined = function SaveOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SaveOutlinedSvg\n  }));\n};\nSaveOutlined.displayName = 'SaveOutlined';\nexport default /*#__PURE__*/React.forwardRef(SaveOutlined);"],"sourceRoot":""}
{"version":3,"sources":["views/app-views/manage-group/domains/AddSubDomain.js","constants/AddSubDomainConstants.js","constants/AddDomainFormConstant.js"],"names":["Option","Select","AddSubDomainForm","_ref","setIsVisible","domainsList","onCancel","onSave","_useState","useState","_useState2","_slicedToArray","domain","setDomainName","_Form$useForm","Form","useForm","form","getMessage","useIntlMessage","intl","useIntl","confirm","Modal","DOMAIN_NAME","FORM_FIELDS","onCreate","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","res","wrap","_context","prev","next","domainService","setPost","sent","success","stop","_x","apply","arguments","Cancel","isFieldsTouched","title","CONFIRM_MESSAGE","value","centered","onOk","message","SUB_DOMAIN_SUCCESS_MESSAGE","handleOk","validateFields","then","resetFields","domainId","domainName","subDomainName","catch","info","console","log","VALIDATION_FAILED","_jsx","visible","ADD_SUB_DOMAIN","text","footer","Button","onClick","children","CANCEL_TEXT","DOMAIN_MODAL_BACK_BUTTON","type","DOMAIN_MODAL_ADD_BUTTON_TYPE","ADD_TEXT","SUBMIT_TEXT","_jsxs","labelAlign","layout","DOMAIN_FORM_LAYOUT","name","DOMAIN_FORM_NAME","onFinish","Item","label","rules","required","placeholder","showArrow","showSearch","optionFilterProp","CHILDREN","map","item","ADD_SUB_DOMAIN_MESSAGE","Input","formatMessage","id","onChange","e","target","SUB_DOMAINS","IntlMessage","subDomainValue","ACCOUNT","MANAGE_DOMAINS_TITLE","ADD_DOMAIN_FORM_TITLE","UPDATE_DOMAIN_FORM_TITLE","ADD_DOMAIN_FORM_NAME","DOMAIN_MESSAGES","DOMAIN_SUCCESS","DOMAIN_UPDATE","NO_CHANGES_TO_SAVE","INVALID_DELIVERY_LEAD","INVALID_SUB_DOMAIN","INVALID_DOMAIN","SUB_DOMAIN","DELIVERY_LEAD","DOMAIN_STATUS"],"mappings":"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","file":"static/js/114.8898c215.chunk.js","sourcesContent":["import { Button, Form, Input, message, Modal, Select } from \"antd\";\nimport { FORM_FIELDS } from \"constants/AddDomainFormConstant\";\nimport { ADD_TEXT, CHILDREN, CONFIRM_MESSAGE, SUBMIT_TEXT } from \"constants/CommonConstants\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport { useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport domainService from \"services/DomainService\";\nimport {\n  ADD_SUB_DOMAIN,\n  ADD_SUB_DOMAIN_MESSAGE,\n  CANCEL_TEXT,\n  DOMAIN_FORM_LAYOUT,\n  DOMAIN_FORM_NAME,\n  DOMAIN_MODAL_ADD_BUTTON_TYPE,\n  DOMAIN_MODAL_BACK_BUTTON,\n  SUB_DOMAIN_SUCCESS_MESSAGE,\n  VALIDATION_FAILED,\n} from \"../../../../constants/AddSubDomainConstants\";\nconst { Option } = Select;\n\nconst AddSubDomainForm = ({ setIsVisible, domainsList, onCancel, onSave }) => {\n  const [domain, setDomainName] = useState(null);\n  const [form] = Form.useForm();\n  const getMessage = useIntlMessage();\n  const intl = useIntl();\n  const { confirm } = Modal;\n  const { DOMAIN_NAME } = FORM_FIELDS;\n\n  const onCreate = async data => {\n    const res = await domainService.setPost(data);\n    if (res) {\n      setDomainName(res);\n      success();\n      onSave();\n    }\n  };\n\n  const handleConfirm = () => {\n    confirm({\n      title: CONFIRM_MESSAGE.value,\n      centered: true,\n      onOk() {\n        onCancel();\n      },\n    });\n  };\n\n  const Cancel = () => {\n    if (form.isFieldsTouched()) {\n      handleConfirm();\n    } else {\n      onCancel();\n    }\n  };\n\n  const success = () => {\n    message.success(SUB_DOMAIN_SUCCESS_MESSAGE.value);\n  };\n\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then(value => {\n        form.resetFields();\n        onCreate({\n          domainId: value?.domainName,\n          subDomainName: value?.subDomainName,\n        });\n        onCancel();\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const handleOnChange = e => {\n    setDomainName(e.target.id, e.target.value);\n  };\n\n  return (\n    <Modal\n      visible={setIsVisible}\n      title={ADD_SUB_DOMAIN.text}\n      onCancel={Cancel}\n      onOk={handleOk}\n      footer={[\n        <Button key={DOMAIN_MODAL_BACK_BUTTON.value} onClick={Cancel}>\n          {CANCEL_TEXT.text}\n        </Button>,\n        <Button key={SUBMIT_TEXT.value} onClick={handleOk} type={DOMAIN_MODAL_ADD_BUTTON_TYPE.value}>\n          {ADD_TEXT.text}\n        </Button>,\n      ]}\n    >\n      <Form form={form} labelAlign=\"left\" layout={DOMAIN_FORM_LAYOUT.text} name={DOMAIN_FORM_NAME.text} onFinish={handleOk}>\n        <Form.Item\n          name={DOMAIN_NAME.value}\n          label={getMessage(DOMAIN_NAME.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select placeholder={getMessage(DOMAIN_NAME.placeholder)} showArrow showSearch optionFilterProp={CHILDREN}>\n            {domainsList?.map(item => {\n              return (\n                <Option key={item?.domainId} value={item?.domainId}>\n                  {item?.domainName}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name={ADD_SUB_DOMAIN.value}\n          label={ADD_SUB_DOMAIN.text}\n          rules={[\n            {\n              required: true,\n              message: ADD_SUB_DOMAIN_MESSAGE.value,\n            },\n          ]}\n        >\n          <Input\n            placeholder={intl.formatMessage({ id: ADD_SUB_DOMAIN.placeholder })}\n            onChange={handleOnChange}\n            value={domain}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddSubDomainForm;\n","import IntlMessage from \"components/util-components/IntlMessage\";\n\nexport const DOMAIN_NAME = {\n  text: <IntlMessage id=\"common.label.domain\" />,\n  value: \"domainName\",\n};\nexport const DELIVERY_LEADS = {\n  text: <IntlMessage id=\"component.managedomains.deliveryleads.heading\" />,\n  value: \"deliveryManagers\",\n};\nexport const SUB_DOMAINS = {\n  text: <IntlMessage id=\"common.label.subdomain.label\" />,\n  value: \"subDomains\",\n  subDomainValue: \"subDomain\",\n};\nexport const ACCOUNT = {\n  text: <IntlMessage id=\"common.label.account\" />,\n  value: \"accountName\",\n};\nexport const ADD_DOMAIN = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.adddomainbutton.text\" />,\n  value: \"add domain\",\n};\nexport const DOMAIN_MODAL_ADD_BUTTON_TYPE = {\n  text: <IntlMessage id=\"component.managedomains.modal.button.type\" />,\n  value: \"primary\",\n};\nexport const CANCEL_TEXT = {\n  text: <IntlMessage id=\"component.managedomains.cancel.text\" />,\n  value: \"cancel\",\n};\nexport const DOMAIN_MODAL_BACK_BUTTON = {\n  text: <IntlMessage id=\"component.managedomains.modal.back.button\" />,\n  value: \"back\",\n};\nexport const DOMAIN_FORM_LAYOUT = {\n  text: \"vertical\",\n  value: \"vertical\",\n};\nexport const DOMAIN_FORM_NAME = {\n  text: \"form_in_modal\",\n  value: \"form_in_modal\",\n};\nexport const SUB_DOMAIN_SUCCESS_MESSAGE = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.confirmmessage\" />,\n  value: \"Sub-Domain Added Successfully\",\n};\n\nexport const VALIDATION_FAILED = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.validationfailed.message\" />,\n  value: \"Validation Failed\",\n};\nexport const ADD_SUB_DOMAIN = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.adddomain.heading\" />,\n  value: \"subDomainName\",\n  placeholder: \"component.managedomains.addsubdomain.adddomain.heading\",\n};\nexport const ADD_SUB_DOMAIN_MESSAGE = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.validatemessage\" />,\n  value: \"Enter Sub Domain\",\n};\nexport const MANAGE_DOMAINS_TITLE = {\n  text: <IntlMessage id=\"component.managedomains.heading\" />,\n  value: \"manage domains\",\n};\n","import IntlMessage from \"components/util-components/IntlMessage\";\n\nexport const ADD_DOMAIN_FORM_TITLE = <IntlMessage id=\"component.managedomain.adddomainform.title\" />;\nexport const UPDATE_DOMAIN_FORM_TITLE = <IntlMessage id=\"component.managedomain.updatedomainform.title\" />;\nexport const ADD_DOMAIN_FORM_NAME = \"add_domain\";\n\nexport const DOMAIN_MESSAGES = {\n  DOMAIN_SUCCESS: \"component.managedomains.success.message\",\n  DOMAIN_UPDATE: \"component.managedomains.update.message\",\n  NO_CHANGES_TO_SAVE: <IntlMessage id=\"common.nochangetosave\" />,\n  INVALID_DELIVERY_LEAD: <IntlMessage id=\"component.managedomain.domainform.deliverlead.message\" />,\n  INVALID_SUB_DOMAIN: <IntlMessage id=\"component.managedomain.domainform.subdomain.message\" />,\n  INVALID_DOMAIN: <IntlMessage id=\"component.managedomain.domainform.domainname.message\" />,\n};\n\nexport const FORM_FIELDS = {\n  DOMAIN_NAME: {\n    value: \"domainName\",\n    label: \"common.label.domainname\",\n    placeholder: \"component.managedomain.domainform.domain.message\",\n  },\n  SUB_DOMAIN: {\n    value: \"subDomains\",\n    label: \"component.managedomain.domainform.subdomain.label\",\n    placeholder: \"component.managedomain.domainform.subdomain.message\",\n  },\n  DELIVERY_LEAD: {\n    value: \"deliveryManagers\",\n    label: \"component.managedomain.domainform.deliverlead.label\",\n    placeholder: \"component.managedomain.domainform.deliverlead.message\",\n  },\n  ACCOUNT: {\n    name: \"accountName\",\n    value: \"accountId\",\n    label: \"common.label.account\",\n    placeholder: \"component.managedomain.domainform.account.message\",\n  },\n  DOMAIN_STATUS: {\n    name: \"domainStatus\",\n    label: \"components.domain.status\",\n  },\n};\n"],"sourceRoot":""}
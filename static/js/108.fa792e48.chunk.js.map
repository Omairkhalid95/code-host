{"version":3,"sources":["views/app-views/manage-group/projects/UpdateStatus.jsx","constants/ManageProjectsConstant.js","constants/ManageProjects.js","constants/ChangeAllocationStatusConstant.js"],"names":["TextArea","Input","Option","Select","UpdateStatus","_ref","visible","onCancel","selectedResource","isClickOnExtendable","toggleManageTeamFormModal","getAndUpdateEmployeeList","selectedProject","moveTo","getMessage","useIntlMessage","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","feedbackReasonList","setFeedbackReasonList","_Form$useForm","Form","useForm","form","previousCountrySelected","useSelector","state","myTeams","countryForEmployee","prevStatusForEmployee","statusForEmployee","useEffect","getReasonsList","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","records","wrap","_context","prev","next","projectService","getReasonReserve","sent","t0","console","log","stop","apply","arguments","onExtend","_ref3","_callee2","values","_context2","updateExtend","statusCode","message","success","SUCCESS_MESSAGE","EXTEND_SUCCESS_MESSAGE","text","error","finish","_x","onRelease","_ref4","_callee3","payload","_context3","prepareEmployeeReleaseData","updateRelease","RELEASE_SUCCESS_MESSAGE","_x2","initialsData","comments","startDate","moment","notes","_jsx","Modal","width","onOk","validateFields","then","_selectedResource$res","resetFields","_objectSpread","accountId","reservedFor","employeeId","catch","info","data","VALIDATION_FAILED","value","centered","okButtonProps","okText","RESERVATION_FORM_FIELDS","RESERVATION","title","PAGE_HEADING","MODAL_TITLE","children","_jsxs","layout","FORM_LAYOUT","vertical","name","initialValues","Item","className","label","ACTION_DATE","START_DATE","rules","required","DatePicker","disabledDate","current","future","subtract","isBefore","format","DATE_FORMAT","FORM_FIELDS","REASON","placeholder","SELECT_TEXT","map","e","pattern","whitespace","rows","maxLength","NOTES","UPDATE_SUCCESS","ADD_SUCCESS","PROJECT_STATUS_REQ","IntlMessage","id","PROJECT_DATE_REQ","EDIT_PROJECT_CHECKBOX_DATE","EDIT_PROJECT_TITLE","SELECT_HIGHT","SELECT_LAYOUT","PROJECT_NAME","DOMAIN_NAME","ACCOUNT_REQ","CONFIRM_MESSAGE","ADD_PROJECT_MESSAGE","UPDATE_PROJECT_MESSAGE","DATE","EXTEND_LABEL","PARENT_ACCOUNT_LABEL","RESERVED_FOR_LABEL","RELEASE_LABEL","EMPLOYEE_ID","ACCOUNT_NAME","DELIVERY_LEAD","PROJECT_STATUS","PROJECT_DATE","errorMessage","EMPLOYEE","SUB_DOMAIN","ASSIGNED_ROLE","ASSIGNED_LEVEL","ALLOCATION_STATUS","ALLOCATION_SUB_STATUS","ALLOWED_ALLOCATION_STATUS","BILLABLE_STATUS","ADD_RESOURCE_ON_BEHALF","RESERVED_FOR","DESIGNATION","PROJECT_START_DATE","PROJECT_END_DATE","extendText","UPDATE_STATUS","RELEASE","MANAGE_PROJECT_TITLE","ADD_PROJECT_TITLE","PROJECT_COLUMN","valueOfProject","EMP_STATUS_FORM_NAME","UNAVAILABLE_STATUS","ALLOWED_STATUS","AVAILABLE","RESERVED","CONFIRMED","BILLED","BILLABLE","SHADOW","UPDATE","ALLOWED_BTN_LABELS","ACTIVE_STATUS","INACTIVE_STATUS","ALL_STATUS","PROPOSED_STATUS","INACTIVE_STATUS_PROJECT","COMPLETED_STATUS","STATUSES","RELEASED_STATUS","ENGAGED_STATUS","RADIO_GROUP_STATUS","TEAM_TITLE","TITLE","RECORD_FIELDS","FIELDS_VALUE","dateValue","subDomainValue","domainValue","projectNameValue","projectValue","domainNameValue","subDomainNameValue","UPDATE_TEAM_MATE_TITLE","reserved","BILLING_EXPECTED_END_DATE","expBillingEndDate","PROJECT_DATES","END_DATE","RELEASE_END_DATE","key","type","DATA_TABLE_COLUMNS_VIEW_TEAM","EMP_ID","EMPLOYEE_NAME","EMP_LOCATION","DOMAIN","ASSINGED_LEVEL","BILLING_START_DATE","DATA_TABLE_COLUMNS","ACCOUNT_COLUMN","STATUS","options","NEXT_ALLOCATION_START_DATE","GROUP_PROPOSED_ACTIVE_STATUS","ADD_LABEL","CONFIRM_ALERT","RESERVATION_DETAIL","ALLOCATION_POPUP_TITLE","AVAILABLE_FROM","FEEDBACK_DETAIL","ALLOCATION_STATUS_TABLE_COLUMNS","accountName","projectName","domainName","subDomainName","allocationStatus","endDate","FEEDBACK_TABLE_COLUMNS","email","date","feedback","ACCOUNT","PROJECT","ALLOCATION_LEVEL","LEVER"],"mappings":"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","file":"static/js/108.fa792e48.chunk.js","sourcesContent":["import { DatePicker, Form, Input, message, Modal, Select } from \"antd\";\nimport { DATE_FORMAT, FORM_LAYOUT, VALIDATION_FAILED } from \"constants/CommonConstants\";\nimport { ACTION_DATE, SUCCESS_MESSAGE } from \"constants/ManageProjects\";\nimport { PAGE_HEADING, RESERVATION_FORM_FIELDS } from \"constants/ManageProjectsConstant\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport projectService from \"services/ProjectService\";\nimport { FORM_FIELDS } from \"../../../../constants/ChangeAllocationStatusConstant\";\nimport { SELECT_TEXT } from \"../../../../constants/CommonConstants\";\nimport Utils from \"utils\";\nimport { useEffect } from \"react\";\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst UpdateStatus = ({\n  visible,\n  onCancel,\n  selectedResource,\n  isClickOnExtendable,\n  toggleManageTeamFormModal,\n  selectedProject,\n  getAndUpdateEmployeeList,\n  moveTo,\n}) => {\n  const getMessage = useIntlMessage();\n  const [loading, setLoading] = useState(false);\n  const [feedbackReasonList, setFeedbackReasonList] = useState([]);\n  const [form] = Form.useForm();\n  const previousCountrySelected = useSelector(state => state.myTeams.countryForEmployee);\n  const prevStatusForEmployee = useSelector(state => state.myTeams.statusForEmployee);\n  useEffect(() => {\n    getReasonsList();\n  }, []);\n  const getReasonsList = async () => {\n    try {\n      const records = await projectService.getReasonReserve();\n      setFeedbackReasonList(records);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const onExtend = async values => {\n    try {\n      setLoading(true);\n      const res = await projectService.updateExtend(values);\n      if (res.statusCode === 200) {\n        message.success(getMessage(SUCCESS_MESSAGE.EXTEND_SUCCESS_MESSAGE.text));\n        if (moveTo) {\n          getAndUpdateEmployeeList();\n        }\n        if (prevStatusForEmployee && previousCountrySelected) {\n          getAndUpdateEmployeeList(prevStatusForEmployee, previousCountrySelected);\n        }\n        onCancel();\n        toggleManageTeamFormModal(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleExtend = () => {\n    form\n      .validateFields()\n      .then(values => {\n        form.resetFields();\n        onExtend({\n          ...values,\n          accountId: selectedResource?.reservedFor?.accountId,\n          employeeId: selectedResource?.employeeId,\n        });\n      })\n      .catch(info => {\n        console.log(info);\n      });\n  };\n\n  const onRelease = async values => {\n    try {\n      setLoading(true);\n      const payload = projectService.prepareEmployeeReleaseData(values, selectedResource);\n      const res = await projectService.updateRelease(payload);\n      if (res.statusCode === 200) {\n        message.success(getMessage(SUCCESS_MESSAGE.RELEASE_SUCCESS_MESSAGE.text));\n        if (prevStatusForEmployee && previousCountrySelected) {\n          getAndUpdateEmployeeList(prevStatusForEmployee, previousCountrySelected);\n        }\n        if (moveTo) {\n          getAndUpdateEmployeeList();\n        }\n        toggleManageTeamFormModal(false);\n        onCancel();\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRelease = () => {\n    form\n      .validateFields()\n      .then(data => {\n        onRelease(data);\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const initialsData = {\n    comments: \"\",\n    startDate: moment(),\n    notes: \"\",\n  };\n\n  const disableBeforeDate = current => {\n    const future = moment().subtract(0, \"days\");\n    return current.isBefore(selectedResource?.startDate) || current > future;\n  };\n\n  return (\n    <Modal\n      width=\"25%\"\n      visible={visible}\n      onCancel={onCancel}\n      onOk={isClickOnExtendable ? handleExtend : handleRelease}\n      centered\n      okButtonProps={{ loading: loading }}\n      okText={getMessage(RESERVATION_FORM_FIELDS.RESERVATION.text)}\n      title={getMessage(PAGE_HEADING.MODAL_TITLE.title)}\n    >\n      <Form\n        form={form}\n        layout={FORM_LAYOUT.vertical}\n        name={RESERVATION_FORM_FIELDS.RESERVATION.name}\n        initialValues={initialsData}\n      >\n        {!isClickOnExtendable && (\n          <Form.Item\n            className=\"my-1\"\n            label={getMessage(\"component.common.status.release.start.date\")} // Released start date\n            name={ACTION_DATE.START_DATE.value}\n            rules={[{ required: true }]}\n          >\n            <DatePicker disabledDate={disableBeforeDate} format={DATE_FORMAT} className={\"w-100\"} />\n          </Form.Item>\n        )}\n        <Form.Item\n          name={FORM_FIELDS.REASON.name}\n          label={getMessage(FORM_FIELDS.REASON.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.REASON.label)}>\n            {feedbackReasonList?.map(e => {\n              return (\n                <Option key={e} value={e}>\n                  {e}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          className=\"my-1\"\n          name={RESERVATION_FORM_FIELDS.RESERVATION.name}\n          label={<span className=\"text-wrap\">{getMessage(RESERVATION_FORM_FIELDS.RESERVATION.label)}</span>}\n          rules={[\n            { required: true, message: getMessage(RESERVATION_FORM_FIELDS.RESERVATION.message) },\n            {\n              pattern: /^([^0-9]*)$/,\n              message: \"Digits are not allowed\",\n            },\n            { whitespace: true, message: \"Only spaces are not allowed\" },\n          ]}\n        >\n          <TextArea rows={2} maxLength={50} />\n        </Form.Item>\n        {!isClickOnExtendable && (\n          <Form.Item name={FORM_FIELDS.NOTES.name} label={getMessage(FORM_FIELDS.NOTES.label)}>\n            <TextArea rows={2} maxLength={500} placeholder={getMessage(FORM_FIELDS.NOTES.label)} />\n          </Form.Item>\n        )}\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UpdateStatus;\n","import IntlMessage from \"components/util-components/IntlMessage\";\nimport commonService from \"services/CommonService\";\nexport const UPDATE_SUCCESS = {\n  text: \"component.manageproject.updatesuccess.msg\",\n  value: \"project updated successfuly\",\n};\nexport const ADD_SUCCESS = {\n  text: \"component.manageproject.projectsuccess.msg\",\n  value: \"project created successfuly\",\n};\nexport const PROJECTNAME_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectname.msg\" />,\n  value: \"project name is required\",\n  placeholder: \"component.manageproject.projectname.msg\",\n};\nexport const DOMAIN_REQ = {\n  text: <IntlMessage id=\"component.manageproject.domainname.msg\" />,\n  value: \"domain name is required\",\n};\nexport const LEAD_REQ = {\n  text: <IntlMessage id=\"component.manageproject.deliveryLeadname.msg\" />,\n  value: \"delivery lead  is required \",\n};\nexport const PROJECT_STATUS_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectstatus.msg\" />,\n  value: \"project status is required\",\n};\nexport const PROJECT_DATE_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectdate.msg\" />,\n  value: \"project start and end date is required\",\n};\nexport const EDIT_PROJECT_CHECKBOX_DATE = {\n  text: <IntlMessage id=\"component.manageprojects.editproject.datecheckbox\" />,\n  value:\n    \"Select this option if the updated project end date has to be updated with the billing end date for all the team members.\",\n};\nexport const ADD_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageproject.addproject.title\" />,\n  value: \"Add Project\",\n};\nexport const EDIT_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageproject.editproject.title\" />,\n  value: \"Update Project\",\n};\nexport const SELECT_HIGHT = {\n  text: \"calc(100vh - 200px)\",\n  value: \"auto\",\n};\nexport const SELECT_LAYOUT = {\n  text: \"horizontal\",\n  value: \"horizontal\",\n};\nexport const PROJECT_NAME = {\n  text: \"projectName\",\n  value: \"Project Name\",\n};\nexport const DOMAIN_NAME = {\n  text: \"domainName\",\n  value: \"Domain Name\",\n};\nexport const SUBDOMAIN_NAME = {\n  text: \"subdomain\",\n  value: \"Sub Domain\",\n};\nexport const LEAD_NAME = {\n  text: \"deliveryLead\",\n  value: \"Delivery Lead\",\n};\nexport const ACCOUNT_REQ = {\n  text: \"accountName\",\n  value: \"Account Name\",\n};\nexport const PROJECT_DATE = {\n  text: \"projectDate\",\n  value: \"Project Date\",\n};\nexport const PROJECT_STATUS = {\n  text: \"projectStatus\",\n  value: \"Project Status\",\n};\n\nexport const DATE_FORMAT = {\n  text: \"YYYY-MM-DD\",\n  value: \"YYYY-MM-DD\",\n};\nexport const LEAD_ERROR_MESSAGE = {\n  text: <IntlMessage id=\"component.manageproject.inactive.lead.error.msg\" />,\n  value: \"Select active delivery lead\",\n};\nexport const CONFIRM_MESSAGE = {\n  text: <IntlMessage id=\"component.common.confirm.message\" />,\n  value: \"Are you sure you want to cancel this?\",\n};\nexport const ADD_PROJECT_MESSAGE = {\n  text: \"component.common.confirm.addproject.message\",\n  value: \"Are you sure you want to add this project?\",\n};\nexport const UPDATE_PROJECT_MESSAGE = {\n  text: \"component.common.confirm.updateproject.message\",\n  value: \"Are you sure you want to update this project?\",\n};\n\nexport const UPDATE_PROJECT_TITLE = <IntlMessage id=\"component.manageProject.updateprojectTitle\" />;\n// export const ADD_PROJECT_TITLE = <IntlMessage id=\"component.manageProject.addprojectTitle\" />;\nexport const START_DATE = {\n  DATE: {\n    label: \"component.manageprojects.manageteams.date.heading\",\n    text: \"component.manageprojects.manageteams.startdate\",\n    value: \"startDate\",\n  },\n};\nexport const RELEASE_STATUS = {};\nexport const FORM_FIELDS = {\n  EXTEND_LABEL: {\n    label: \"common.label.extend\",\n    value: \"extend\",\n  },\n  PARENT_ACCOUNT_LABEL: {\n    label: \"common.label.parent.account\",\n    value: \"accountName\",\n  },\n  RESERVED_FOR_LABEL: {\n    label: \"component.manage.projects.reservedFor.placeholder\",\n    value: \"accountName\",\n  },\n  RELEASE_LABEL: {\n    label: \"common.label.release.text\",\n    value: \"release\",\n  },\n  PROJECT_NAME: {\n    label: \"common.label.projectname\",\n    name: \"projectName\",\n    value: \"projectId\",\n  },\n  EMPLOYEE_ID: {\n    label: \"common.label.employeeId\",\n    name: \"employeeId\",\n  },\n  ACCOUNT_NAME: {\n    label: \"common.label.accountname\",\n    name: \"accountName\",\n  },\n  DOMAIN_NAME: {\n    name: \"domainName\",\n    value: \"domainId\",\n    label: \"common.label.domainname\",\n  },\n  DELIVERY_LEAD: {\n    name: \"deliveryLead\",\n    label: \"common.label.deliverylead\",\n  },\n  PROJECT_STATUS: {\n    name: \"projectStatus\",\n    label: \"component.manageprojects.project.status.label\",\n  },\n  PROJECT_DATE: {\n    name: \"projectDate\",\n    label: \"component.manageprojects.project.date.label\",\n    errorMessage: \"component.manageproject.projectdate.msg\",\n  },\n  EMPLOYEE: {\n    name: \"employeeName\",\n    label: \"common.label.employeeName\",\n  },\n  SUB_DOMAIN: {\n    value: \"subDomainId\",\n    name: \"subdomain\",\n    label: \"common.label.subdomain.name.label\",\n  },\n  ASSIGNED_ROLE: {\n    name: \"assignedRole\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ASSIGNED_LEVEL: {\n    name: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ALLOCATION_STATUS: {\n    name: \"allocationStatus\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n  },\n  ALLOCATION_SUB_STATUS: {\n    name: \"allocationSubStatus\",\n    label: \"component.manage.projects.allowed.allocation.substatus.lablel\",\n  },\n  ALLOWED_ALLOCATION_STATUS: {\n    name: \"allowedAllocationSubStatues\",\n    label: \"component.manage.projects.allowed.allocationstatus.lablel\",\n  },\n  BILLABLE_STATUS: {\n    name: \"billableStatus\",\n    label: \"common.label.billablestatus\",\n  },\n  ADD_RESOURCE_ON_BEHALF: {\n    name: \"addResourceOnBehalf\",\n    label: \"component.manage.projects.behalfof.placeholder\",\n  },\n  RESERVED_FOR: {\n    name: \"reservedFor\",\n    label: \"component.manage.projects.reservedFor.placeholder\",\n  },\n  DESIGNATION: {\n    name: \"designation\",\n    label: \"common.label.designation\",\n  },\n  PROJECT_START_DATE: {\n    name: \"projectStartDate\",\n    label: \"component.myprojectallocations.project_start_date.heading\",\n    errorMessage: \"component.manageproject.projectstartdate.msg\",\n  },\n  PROJECT_END_DATE: {\n    name: \"projectEndDate\",\n    label: \"component.myprojectallocations.project_end_date.heading\",\n    errorMessage: \"component.manageproject.projectenddate.msg\",\n  },\n  NOTES: {\n    value: \"notes\",\n    name: \"notes\",\n    label: \"common.label.notes\",\n  },\n};\n\nexport const RESERVATION_FORM_FIELDS = {\n  RESERVATION: {\n    label: \"common.label.reservation\",\n    message: \"common.label.reservation.message\",\n    name: \"comments\",\n    text: \"component.common.update.text\",\n    extendText: \"component.manageprojects.action.text.extend\",\n  },\n  UPDATE_STATUS: {\n    label: \"common.label.update.status\",\n    value: \"updateStatus\",\n  },\n  RELEASE: {\n    label: \"common.label.release\",\n    message: \"common.label.release.date.message\",\n    name: \"releaseDate\",\n    text: \"component.manageprojects.action.label.release\",\n  },\n};\nexport const PAGE_HEADING = {\n  MODAL_TITLE: {\n    title: \"component.manageprojects.action.label.extend.reservation\",\n    text: \"component.manageprojects.action.label.release.employee\",\n  },\n};\n","import IntlMessage from \"components/util-components/IntlMessage\";\nexport const MANAGE_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.heading\" />,\n  value: \"manage projects\",\n};\nexport const ADD_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.addproject.title\" />,\n  value: \"add project\",\n};\nexport const PROJECT_COLUMN = {\n  text: <IntlMessage id=\"component.manageprojects.project.heading\" />,\n  value: \"projectName\",\n  valueOfProject: \"ProjectName\",\n};\nexport const ACCOUNT_COLUMN = {\n  text: <IntlMessage id=\"common.label.account\" />,\n  value: \"account\",\n};\nexport const DELIVERY_LEAD_COLUMN = {\n  text: <IntlMessage id=\"common.label.deliverylead\" />,\n  value: \"deliveryLeadIds\",\n};\nexport const END_DATE_COLUMN = {\n  text: <IntlMessage id=\"component.manageprojects.enddate.heading\" />,\n  value: \"projectEndDate\",\n};\nexport const TEAM_DETAILS_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.teamdetails.heading\" />,\n  value: \"team details\",\n};\n\nexport const EMP_STATUS_FORM_NAME = \"emp_status_form\";\n\nexport const EMP_STATUS_SUCCESS_MSG = {\n  text: <IntlMessage id=\"component.manageprojects.manageteams.success_message\" />,\n  value: \"Employee status update successfully\",\n};\n\nexport const UNAVAILABLE_STATUS = \"UNAVAILABLE\";\n\nexport const ALLOWED_STATUS = {\n  AVAILABLE: {\n    value: \"AVAILABLE\",\n  },\n  RESERVED: {\n    value: \"RESERVED\",\n  },\n  CONFIRMED: {\n    value: \"CONFIRMED\",\n  },\n  BILLED: {\n    value: \"BILLED\",\n  },\n  BILLABLE: {\n    value: \"BILLABLE\",\n  },\n  SHADOW: {\n    value: \"SHADOW\",\n  },\n  UPDATE: {\n    value: \"UPDATE\",\n  },\n};\n\nexport const ALLOWED_BTN_LABELS = {\n  BILLABLE: \"component.common.text.bill\",\n  CONFIRMED: \"component.common.text.confirm\",\n  AVAILABLE: \"component.common.status.available\",\n  RESERVED: \"component.common.text.reserve\",\n  SHADOW: \"component.common.text.shadow\",\n  UPDATE: \"component.common.text.update\",\n};\n\nconst ACTIVE_STATUS = { label: \"component.common.status.active\", value: \"Active\" };\nconst INACTIVE_STATUS = { label: \"component.common.status.released\", value: \"InActive\" };\nconst ALL_STATUS = { label: \"component.common.status.all\", value: \"All\" };\nconst PROPOSED_STATUS = { label: \"component.manageprojects.manageteams.status.proposed\", value: \"Proposed\" };\nconst RELEASED_STATUS = { label: \"component.common.status.released\", value: \"Released\" };\nconst ENGAGED_STATUS = { label: \"component.common.status.engaged\", value: \"Engaged\" };\nconst INACTIVE_STATUS_PROJECT = \"InActive\";\nconst COMPLETED_STATUS = \"Completed\";\nconst ON_HOLD_STATUS = { label: \"common.label.on_hold\", value: \"On Hold\" };\n\nexport const STATUSES = {\n  ACTIVE_STATUS,\n  INACTIVE_STATUS,\n  ALL_STATUS,\n  PROPOSED_STATUS,\n  INACTIVE_STATUS_PROJECT,\n  COMPLETED_STATUS,\n  RELEASED_STATUS,\n  ENGAGED_STATUS,\n};\n\nexport const RADIO_GROUP_STATUS = [ACTIVE_STATUS, INACTIVE_STATUS, ALL_STATUS];\n\nexport const GROUP_COMPLETE_INACTIVE_STATUS = [INACTIVE_STATUS_PROJECT, COMPLETED_STATUS];\nexport const TEAM_TITLE = {\n  TITLE: {\n    text: \"common.title.text.team.member\",\n  },\n};\n\nexport const RECORD_FIELDS = {\n  FIELDS_VALUE: {\n    dateValue: \"date\",\n    subDomainValue: \"subDomain\",\n    domainValue: \"domain\",\n    projectNameValue: \"projectName\",\n    projectValue: \"project\",\n    domainNameValue: \"domainName\",\n    subDomainNameValue: \"subDomainName\",\n  },\n};\nexport const SUCCESS_MESSAGE = {\n  UPDATE_TEAM_MATE_TITLE: {\n    text: \"common.title.text.team.member\",\n  },\n  EXTEND_SUCCESS_MESSAGE: {\n    text: \"common.message.text\",\n  },\n  RELEASE_SUCCESS_MESSAGE: {\n    text: \"common.message.release.text\",\n  },\n  UPDATE_STATUS: {\n    text: \"common.message.update.status\",\n  },\n};\nexport const ACTION_DATE = {\n  START_DATE: {\n    label: \"common.action.releasedate.label\",\n    reserved: \"common.action.reserveddate.label\",\n    value: \"startDate\",\n  },\n  BILLING_EXPECTED_END_DATE: {\n    label: \"common.action.exp.end.date.label\",\n    expBillingEndDate: \"common.action.expected.end.date.label\",\n    value: \"nextAllocationStartDate\",\n  },\n};\nexport const PROJECT_DATES = {\n  START_DATE: {\n    label: \"common.project.startdate.label\",\n    value: \"startDate\",\n  },\n  END_DATE: {\n    label: \"common.project.enddate.label\",\n    value: \"endDate\",\n  },\n  RELEASE_END_DATE: {\n    label: \"component.manageprojects.enddate.heading\",\n    key: \"endDate\",\n    type: \"date\",\n    width: 120,\n  },\n};\n\nexport const DATA_TABLE_COLUMNS_VIEW_TEAM = {\n  EMP_ID: {\n    label: \"common.label.emp_id\",\n    key: \"employeeId\",\n    type: \"text\",\n    width: 100,\n  },\n  EMPLOYEE_NAME: {\n    key: \"employeeName\",\n    label: \"common.label.employeeName\",\n    type: \"text\",\n    width: 150,\n  },\n  EMP_LOCATION: {\n    label: \"common.label.location\",\n    key: \"empLocation\",\n    type: \"text\",\n    width: 120,\n  },\n  // PROJECT_NAME: {\n  //   label: \"common.label.projectname\",\n  //   key: \"project\",\n  //   type: \"text\",\n  //   width: 120,\n  // },\n  DESIGNATION: {\n    key: \"designation\",\n    label: \"common.label.designation\",\n    type: \"text\",\n    width: 130,\n  },\n  DOMAIN: {\n    label: \"common.label.domain\",\n    key: \"domain\",\n    type: \"text\",\n    width: 120,\n  },\n  SUB_DOMAIN: {\n    key: \"subDomain\",\n    label: \"common.label.subdomain.label\",\n    type: \"text\",\n    width: 140,\n  },\n  ALLOCATION_STATUS: {\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n    type: \"text\",\n    width: 140,\n  },\n  ASSINGED_LEVEL: {\n    label: \"component.manage.projects.assignedlevel.label\",\n    key: \"assignedLevel\",\n    type: \"text\",\n    width: 140,\n  },\n  BILLING_START_DATE: {\n    key: \"startDate\",\n    label: \"component.common.start.date\",\n    type: \"date\",\n    width: 140,\n  },\n};\n\nexport const DATA_TABLE_COLUMNS = {\n  PROJECT_COLUMN: {\n    label: \"component.manageprojects.project.heading\",\n    key: \"projectName\",\n    type: \"text\",\n  },\n  ACCOUNT_COLUMN: {\n    label: \"common.label.account\",\n    key: \"account\",\n    type: \"text\",\n  },\n  // NUM_OF_MEMBER: {\n  //   label: \"component.managedesignations.employeecount\",\n  //   key: \"employeeCount\",\n  //   type: \"text\",\n  // },\n  STATUS: {\n    label: \"common.label.status\",\n    key: \"status\",\n    type: \"select\",\n    options: [\n      { label: INACTIVE_STATUS.label, value: INACTIVE_STATUS_PROJECT },\n      { label: PROPOSED_STATUS.label, value: PROPOSED_STATUS.value },\n      { label: ON_HOLD_STATUS.label, value: ON_HOLD_STATUS.value },\n    ],\n  },\n  END_DATE: {\n    label: \"component.manageprojects.manageteams.startdate.heading\",\n    key: \"projectStartDate\",\n    type: \"date\",\n  },\n};\nexport const NEXT_ALLOCATION_START_DATE = {\n  key: \"nextAllocationStartDate\",\n  label: \"common.project.nextAllocationStartDate\",\n};\n\nexport const GROUP_PROPOSED_ACTIVE_STATUS = [ACTIVE_STATUS.value, PROPOSED_STATUS.value];\n","export const ADD_LABEL = \"component.manage.employees.add.allocation.label\";\nexport const CONFIRM_ALERT = \"component.manage.employees.add.allocation.confirmation\";\nexport const RESERVATION_DETAIL = \"component.manage.employees.reservation.detail.label\";\nexport const ALLOCATION_POPUP_TITLE = \"component.manage.employees.reservation.popup.title\";\nexport const AVAILABLE_FROM = \"component.common.status.available.from\";\nexport const FEEDBACK_DETAIL = \"component.manage.employees.feedback.detail.label\";\n\nexport const ALLOCATION_STATUS_TABLE_COLUMNS = {\n  accountName: {\n    label: \"common.label.accountname\",\n    key: \"accountName\",\n    type: \"text\",\n  },\n  projectName: {\n    type: \"text\",\n    label: \"common.label.projectname\",\n    key: \"projectName\",\n  },\n  domainName: {\n    type: \"text\",\n    label: \"common.label.domain\",\n    key: \"domainName\",\n  },\n  subDomainName: {\n    type: \"text\",\n    label: \"common.label.subdomain.label\",\n    key: \"subDomainName\",\n  },\n  allocationStatus: {\n    type: \"text\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n  },\n  startDate: {\n    type: \"date\",\n    label: \"common.label.allocation.start.date\",\n    key: \"startDate\",\n  },\n  endDate: {\n    type: \"date\",\n    label: \"common.label.allocation.end.date\",\n    key: \"reservationExpiryDate\",\n  },\n};\n\nexport const FEEDBACK_TABLE_COLUMNS = {\n  name: {\n    label: \"manage.employee.reservation.feedback\",\n    key: \"givenByName\",\n    type: \"text\",\n  },\n  email: {\n    label: \"common.label.email\",\n    key: \"givenByEmail\",\n    type: \"text\",\n  },\n  date: {\n    label: \"common.label.date\",\n    key: \"givenOn\",\n    type: \"date\",\n  },\n  feedback: {\n    label: \"common.label.feedback\",\n    key: \"feedback\",\n    type: \"text\",\n  },\n};\nexport const FORM_FIELDS = {\n  ACCOUNT: {\n    label: \"common.label.accountname\",\n    name: \"accountName\",\n  },\n  PROJECT: {\n    label: \"common.label.projectname\",\n    name: \"projectName\",\n  },\n  DOMAIN_NAME: {\n    name: \"domainName\",\n    label: \"common.label.domainname\",\n  },\n  SUB_DOMAIN: {\n    name: \"subdomain\",\n    label: \"common.label.subdomain.name.label\",\n  },\n  ALLOCATION_LEVEL: {\n    name: \"allocationLevel\",\n\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ALLOCATION_STATUS: {\n    name: \"allocationStatus\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n  },\n  START_DATE: {\n    name: \"startDate\",\n    label: \"component.common.start.date\",\n  },\n  REASON: {\n    name: \"releaseFeedbackReason\",\n    label: \"component.common.reason.reserve\",\n  },\n  ASSIGNED_LEVEL: {\n    name: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  NOTES: {\n    name: \"notes\",\n    label: \"common.label.notes\",\n  },\n  LEVER: {\n    value: \"leverURL\",\n    name: \"leverURL\",\n    label: \"common.myprojectallocations.project_lever_url\"\n  }\n};\n"],"sourceRoot":""}
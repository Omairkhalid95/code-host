{"version":3,"sources":["assets/data/EmployeeSample.xlsx","views/app-views/manage-group/employees/uploadData.js","constants/AddSubDomainConstants.js"],"names":["UploadForm","_ref","visible","onCancel","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","file","setFile","_Form$useForm","Form","useForm","form","getMessage","useIntlMessage","confirm","Modal","Cancel","isFieldsTouched","title","CONFIRM_MESSAGE","value","centered","onOk","uploadFile","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","info","formData","response","wrap","_context","prev","next","showLoader","FormData","append","store","getState","myTeams","loggedinId","employeeService","uploadDocument","sent","message","success","error","t0","console","finish","stop","_x","apply","arguments","handleOk","validateFields","then","catch","log","VALIDATION_FAILED","handleFileUpload","_ref3","_callee2","_context2","_x2","_jsxs","footer","_jsx","Button","onClick","children","CANCEL_TEXT","text","DOMAIN_MODAL_BACK_BUTTON","type","DOMAIN_MODAL_ADD_BUTTON_TYPE","disabled","SUBMIT_TEXT","className","DownloadOutlined","href","EmployeeSample","target","download","rel","name","DOMAIN_FORM_NAME","onFinish","layout","Item","Upload","maxCount","multiple","beforeUpload","showUploadList","onChange","accept","ACCEPT_FILE_LIST","UploadOutlined","SUB_DOMAINS","IntlMessage","id","subDomainValue","ACCOUNT","DOMAIN_FORM_LAYOUT","SUB_DOMAIN_SUCCESS_MESSAGE","ADD_SUB_DOMAIN","placeholder","ADD_SUB_DOMAIN_MESSAGE","MANAGE_DOMAINS_TITLE"],"mappings":"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","file":"static/js/118.6252f2f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/EmployeeSample.ddd8d64b.xlsx\";","import { DownloadOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Button, Form, message, Modal, Upload } from \"antd\";\n// import sampleEmployee from \"assets/data/sampleemplyee.xls\";\nimport EmployeeSample from \"assets/data/EmployeeSample.xlsx\";\nimport { ACCEPT_FILE_LIST, CONFIRM_MESSAGE, SUBMIT_TEXT } from \"constants/CommonConstants\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { showLoader } from \"redux/actions/Loader\";\nimport store from \"redux/store\";\nimport employeeService from \"services/EmployeeService\";\nimport {\n  CANCEL_TEXT,\n  DOMAIN_FORM_NAME,\n  DOMAIN_MODAL_ADD_BUTTON_TYPE,\n  DOMAIN_MODAL_BACK_BUTTON,\n  VALIDATION_FAILED,\n} from \"../../../../constants/AddSubDomainConstants\";\n\nconst UploadForm = ({ visible, onCancel }) => {\n  const dispatch = useDispatch();\n  const [file, setFile] = useState(null);\n\n  const [form] = Form.useForm();\n  const getMessage = useIntlMessage();\n  const { confirm } = Modal;\n\n  const getEmployeeIdFromStore = () => {\n    return store.getState().myTeams.loggedinId;\n  };\n\n  const handleConfirm = () => {\n    confirm({\n      title: CONFIRM_MESSAGE.value,\n      centered: true,\n      onOk() {\n        onCancel();\n      },\n    });\n  };\n\n  const Cancel = () => {\n    if (form.isFieldsTouched()) {\n      handleConfirm();\n    } else {\n      onCancel();\n    }\n  };\n\n  const uploadFile = async info => {\n    try {\n      dispatch(showLoader(true));\n      let formData = new FormData();\n      formData.append(\"empId\", getEmployeeIdFromStore());\n      formData.append(\"file\", info.file);\n      const response = await employeeService.uploadDocument(formData);\n      if (response) {\n        dispatch(showLoader(false));\n        message.success(response?.message);\n      } else {\n        dispatch(showLoader(false));\n        message.error(response?.message);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      dispatch(showLoader(false));\n    }\n  };\n\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then(value => {\n        uploadFile(file);\n        onCancel();\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const handleFileUpload = async info => {\n    setFile(info);\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      title={getMessage(\"common.uploademployee.tiltle\")}\n      onCancel={Cancel}\n      onOk={handleOk}\n      footer={[\n        <Button key={DOMAIN_MODAL_BACK_BUTTON.value} onClick={Cancel}>\n          {CANCEL_TEXT.text}\n        </Button>,\n        <Button key={SUBMIT_TEXT.value} onClick={handleOk} type={DOMAIN_MODAL_ADD_BUTTON_TYPE.value} disabled={!file}>\n          {getMessage(\"common.upload.titile\")}\n        </Button>,\n      ]}\n    >\n      {\n        <div className=\"mb-5 text-center\">\n          <span className=\"downlaod-button\">\n            <DownloadOutlined className=\"mr-1\" />\n            <a href={EmployeeSample} target=\"_blank\" download=\"sample-employee-data.xlsx\" rel=\"noreferrer\">\n              {getMessage(\"components.dataEntry.sample.File\")}\n            </a>\n          </span>\n        </div>\n      }\n      <Form form={form} name={DOMAIN_FORM_NAME.text} onFinish={handleOk} layout={\"horizontal\"}>\n        <Form.Item className=\"text-center\">\n          <Upload\n            className=\"ant-btn mr-2 w-50\"\n            maxCount={1}\n            multiple={false}\n            beforeUpload={() => false}\n            showUploadList={true}\n            onChange={handleFileUpload}\n            accept={ACCEPT_FILE_LIST}\n          >\n            {<UploadOutlined className=\"mr-2\" />}\n            {getMessage(\"components.dataEntry.Choose.File\")}\n          </Upload>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UploadForm;\n","import IntlMessage from \"components/util-components/IntlMessage\";\n\nexport const DOMAIN_NAME = {\n  text: <IntlMessage id=\"common.label.domain\" />,\n  value: \"domainName\",\n};\nexport const DELIVERY_LEADS = {\n  text: <IntlMessage id=\"component.managedomains.deliveryleads.heading\" />,\n  value: \"deliveryManagers\",\n};\nexport const SUB_DOMAINS = {\n  text: <IntlMessage id=\"common.label.subdomain.label\" />,\n  value: \"subDomains\",\n  subDomainValue: \"subDomain\",\n};\nexport const ACCOUNT = {\n  text: <IntlMessage id=\"common.label.account\" />,\n  value: \"accountName\",\n};\nexport const ADD_DOMAIN = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.adddomainbutton.text\" />,\n  value: \"add domain\",\n};\nexport const DOMAIN_MODAL_ADD_BUTTON_TYPE = {\n  text: <IntlMessage id=\"component.managedomains.modal.button.type\" />,\n  value: \"primary\",\n};\nexport const CANCEL_TEXT = {\n  text: <IntlMessage id=\"component.managedomains.cancel.text\" />,\n  value: \"cancel\",\n};\nexport const DOMAIN_MODAL_BACK_BUTTON = {\n  text: <IntlMessage id=\"component.managedomains.modal.back.button\" />,\n  value: \"back\",\n};\nexport const DOMAIN_FORM_LAYOUT = {\n  text: \"vertical\",\n  value: \"vertical\",\n};\nexport const DOMAIN_FORM_NAME = {\n  text: \"form_in_modal\",\n  value: \"form_in_modal\",\n};\nexport const SUB_DOMAIN_SUCCESS_MESSAGE = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.confirmmessage\" />,\n  value: \"Sub-Domain Added Successfully\",\n};\n\nexport const VALIDATION_FAILED = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.validationfailed.message\" />,\n  value: \"Validation Failed\",\n};\nexport const ADD_SUB_DOMAIN = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.adddomain.heading\" />,\n  value: \"subDomainName\",\n  placeholder: \"component.managedomains.addsubdomain.adddomain.heading\",\n};\nexport const ADD_SUB_DOMAIN_MESSAGE = {\n  text: <IntlMessage id=\"component.managedomains.addsubdomain.validatemessage\" />,\n  value: \"Enter Sub Domain\",\n};\nexport const MANAGE_DOMAINS_TITLE = {\n  text: <IntlMessage id=\"component.managedomains.heading\" />,\n  value: \"manage domains\",\n};\n"],"sourceRoot":""}
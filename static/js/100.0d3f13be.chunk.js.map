{"version":3,"sources":["views/app-views/manage-group/projects/UpdateStatus.jsx","views/app-views/dashboard/allocate-employees/AssignEmployees.jsx","../node_modules/antd/es/divider/index.js","constants/ManageProjectsConstant.js","constants/ManageProjects.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","constants/ChangeAllocationStatusConstant.js"],"names":["TextArea","Input","Option","Select","UpdateStatus","_ref","visible","onCancel","selectedResource","isClickOnExtendable","toggleManageTeamFormModal","getAndUpdateEmployeeList","selectedProject","moveTo","getMessage","useIntlMessage","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","feedbackReasonList","setFeedbackReasonList","_Form$useForm","Form","useForm","form","previousCountrySelected","useSelector","state","myTeams","countryForEmployee","prevStatusForEmployee","statusForEmployee","useEffect","getReasonsList","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","records","wrap","_context","prev","next","projectService","getReasonReserve","sent","t0","console","log","stop","apply","arguments","onExtend","_ref3","_callee2","values","_context2","updateExtend","statusCode","message","success","SUCCESS_MESSAGE","EXTEND_SUCCESS_MESSAGE","text","error","finish","_x","onRelease","_ref4","_callee3","payload","_context3","prepareEmployeeReleaseData","updateRelease","RELEASE_SUCCESS_MESSAGE","_x2","initialsData","comments","startDate","moment","notes","_jsx","Modal","width","onOk","validateFields","then","_selectedResource$res","resetFields","_objectSpread","accountId","reservedFor","employeeId","catch","info","data","VALIDATION_FAILED","value","centered","okButtonProps","okText","RESERVATION_FORM_FIELDS","RESERVATION","title","PAGE_HEADING","MODAL_TITLE","children","_jsxs","layout","FORM_LAYOUT","vertical","name","initialValues","Item","className","label","ACTION_DATE","START_DATE","rules","required","DatePicker","disabledDate","current","future","subtract","isBefore","format","DATE_FORMAT","FORM_FIELDS","REASON","placeholder","SELECT_TEXT","map","e","pattern","whitespace","rows","maxLength","NOTES","formItemLayout","labelCol","span","wrapperCol","connect","_ref10","employees","employeeData","props","_selectedResourcesDat12","_selectedResourcesDat13","_selectedResourcesDat14","_selectedResourcesDat15","_selectedResourcesDat16","empId","URLSearchParams","location","search","get","status","reserveAccId","dispatch","useDispatch","projectList","setProjectList","_useState5","_useState6","subDomainList","setSubDomainList","_useState7","_useState8","showUpdateStatusModal","setShowUpdateStatusModal","_useState9","_useState10","setIsClickOnExtendable","_useState11","_useState12","isRequired","setIsRequired","subDomains","subdomains","domainList","domains","previousCountry","reserveEmployeeCountry","_useState13","_useState14","selectedResourcesData","setSelectedResourcesData","history","useHistory","_selectedResourcesDat","_selectedResourcesDat2","_selectedResourcesDat4","setFieldsValue","subDomainId","getSubDomainName","projectId","containsString","project","projectName","domainId","find","item","_selectedResourcesDat3","domain","undefined","nextAllocationStartDate","_selectedResourcesDat5","_selectedResourcesDat6","validateFieldRequired","handleOnDomainChange","getEmployeeDetail","params","res","_res$","_res$$reservedFor","_res$2","_res$2$parentAccount","showLoader","toUpperCase","dashboardServices","getEmployeeDetailByEmpIdAndStatus","filter","_e$reservedFor","includes","allocationStatus","getProjectListByAccountId","parentAccount","onUpdateStatus","patch","_args2","length","prepareAddAllocationPayload","updateBillableAllocationDetails","updateAllocationStatus","UPDATE_STATUS","t1","_x3","response","columns","quickActions","employeeList","getDashboardAllocateEmployeesTo","employeeService","prepareEmployeeList","setDataForReserveEmployee","setCountryForReserveEmployee","push","concat","_ref5","_callee5","_projectList","_context5","getListByAccountId","_x5","searchText","toLowerCase","useMemo","_selectedResourcesDat7","_selectedResourcesDat9","subDomain","_selectedResourcesDat8","onFirsTime","subDomainsLists","_defineProperty","SUB_DOMAIN","handleProjectUpdate","_ref6","_callee7","_context7","_ref7","_callee6","_selectedResourcesDat10","_context6","Date","reservedForAccountId","assignedLevel","getTime","NEW_DATE_FORMAT","valueOf","_x6","ALLOWED_STATUS","BILLABLE","CONFIRMED","getFieldValue","PROJECT_NAME","DOMAIN_NAME","_form$setFieldsValue2","_Fragment","labelAlign","requiredMark","Row","gutter","Col","xs","md","lg","xl","PARENT_ACCOUNT_LABEL","accountName","RESERVED_FOR_LABEL","EMPLOYEE_ID","EMPLOYEE","employeeName","ALLOCATION_STATUS","DESIGNATION","designation","AVAILABLE","capitalize","DATE","RESERVED","SHADOW","reservationExpiryDate","defaultReservedEndDate","NEXT_ALLOCATION_START_DATE","key","Divider","onValuesChange","showArrow","showSearch","optionFilterProp","CHILDREN","allowClear","disabled","onChange","domainName","subDomainName","getStartDateLabel","startOf","isAfter","add","BILLING_EXPECTED_END_DATE","justify","allowedAllocationStatuses","val","Button","type","MODAL_ADD_BUTTON_TYPE","onClick","_callee4","_context4","_x4","handleUpdate","ALLOWED_BTN_LABELS","UPDATE_TEXT","isExtendable","extendText","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","React","ConfigConsumer","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","dashed","plain","restProps","orientationPrefix","hasChildren","classString","classNames","_extends","role","UPDATE_SUCCESS","ADD_SUCCESS","PROJECT_STATUS_REQ","IntlMessage","id","PROJECT_DATE_REQ","EDIT_PROJECT_CHECKBOX_DATE","EDIT_PROJECT_TITLE","SELECT_HIGHT","SELECT_LAYOUT","ACCOUNT_REQ","CONFIRM_MESSAGE","ADD_PROJECT_MESSAGE","UPDATE_PROJECT_MESSAGE","EXTEND_LABEL","RELEASE_LABEL","ACCOUNT_NAME","DELIVERY_LEAD","PROJECT_STATUS","PROJECT_DATE","errorMessage","ASSIGNED_ROLE","ASSIGNED_LEVEL","ALLOCATION_SUB_STATUS","ALLOWED_ALLOCATION_STATUS","BILLABLE_STATUS","ADD_RESOURCE_ON_BEHALF","RESERVED_FOR","PROJECT_START_DATE","PROJECT_END_DATE","RELEASE","MANAGE_PROJECT_TITLE","ADD_PROJECT_TITLE","PROJECT_COLUMN","valueOfProject","EMP_STATUS_FORM_NAME","UNAVAILABLE_STATUS","BILLED","UPDATE","ACTIVE_STATUS","INACTIVE_STATUS","ALL_STATUS","PROPOSED_STATUS","INACTIVE_STATUS_PROJECT","COMPLETED_STATUS","STATUSES","RELEASED_STATUS","ENGAGED_STATUS","RADIO_GROUP_STATUS","TEAM_TITLE","TITLE","RECORD_FIELDS","FIELDS_VALUE","dateValue","subDomainValue","domainValue","projectNameValue","projectValue","domainNameValue","subDomainNameValue","UPDATE_TEAM_MATE_TITLE","reserved","expBillingEndDate","PROJECT_DATES","END_DATE","RELEASE_END_DATE","DATA_TABLE_COLUMNS_VIEW_TEAM","EMP_ID","EMPLOYEE_NAME","EMP_LOCATION","DOMAIN","ASSINGED_LEVEL","BILLING_START_DATE","DATA_TABLE_COLUMNS","ACCOUNT_COLUMN","STATUS","options","GROUP_PROPOSED_ACTIVE_STATUS","ADD_LABEL","CONFIRM_ALERT","RESERVATION_DETAIL","ALLOCATION_POPUP_TITLE","AVAILABLE_FROM","FEEDBACK_DETAIL","ALLOCATION_STATUS_TABLE_COLUMNS","endDate","FEEDBACK_TABLE_COLUMNS","email","date","feedback","ACCOUNT","PROJECT","ALLOCATION_LEVEL","LEVER"],"mappings":"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","file":"static/js/100.0d3f13be.chunk.js","sourcesContent":["import { DatePicker, Form, Input, message, Modal, Select } from \"antd\";\nimport { DATE_FORMAT, FORM_LAYOUT, VALIDATION_FAILED } from \"constants/CommonConstants\";\nimport { ACTION_DATE, SUCCESS_MESSAGE } from \"constants/ManageProjects\";\nimport { PAGE_HEADING, RESERVATION_FORM_FIELDS } from \"constants/ManageProjectsConstant\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport projectService from \"services/ProjectService\";\nimport { FORM_FIELDS } from \"../../../../constants/ChangeAllocationStatusConstant\";\nimport { SELECT_TEXT } from \"../../../../constants/CommonConstants\";\nimport Utils from \"utils\";\nimport { useEffect } from \"react\";\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst UpdateStatus = ({\n  visible,\n  onCancel,\n  selectedResource,\n  isClickOnExtendable,\n  toggleManageTeamFormModal,\n  selectedProject,\n  getAndUpdateEmployeeList,\n  moveTo,\n}) => {\n  const getMessage = useIntlMessage();\n  const [loading, setLoading] = useState(false);\n  const [feedbackReasonList, setFeedbackReasonList] = useState([]);\n  const [form] = Form.useForm();\n  const previousCountrySelected = useSelector(state => state.myTeams.countryForEmployee);\n  const prevStatusForEmployee = useSelector(state => state.myTeams.statusForEmployee);\n  useEffect(() => {\n    getReasonsList();\n  }, []);\n  const getReasonsList = async () => {\n    try {\n      const records = await projectService.getReasonReserve();\n      setFeedbackReasonList(records);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const onExtend = async values => {\n    try {\n      setLoading(true);\n      const res = await projectService.updateExtend(values);\n      if (res.statusCode === 200) {\n        message.success(getMessage(SUCCESS_MESSAGE.EXTEND_SUCCESS_MESSAGE.text));\n        if (moveTo) {\n          getAndUpdateEmployeeList();\n        }\n        if (prevStatusForEmployee && previousCountrySelected) {\n          getAndUpdateEmployeeList(prevStatusForEmployee, previousCountrySelected);\n        }\n        onCancel();\n        toggleManageTeamFormModal(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleExtend = () => {\n    form\n      .validateFields()\n      .then(values => {\n        form.resetFields();\n        onExtend({\n          ...values,\n          accountId: selectedResource?.reservedFor?.accountId,\n          employeeId: selectedResource?.employeeId,\n        });\n      })\n      .catch(info => {\n        console.log(info);\n      });\n  };\n\n  const onRelease = async values => {\n    try {\n      setLoading(true);\n      const payload = projectService.prepareEmployeeReleaseData(values, selectedResource);\n      const res = await projectService.updateRelease(payload);\n      if (res.statusCode === 200) {\n        message.success(getMessage(SUCCESS_MESSAGE.RELEASE_SUCCESS_MESSAGE.text));\n        if (prevStatusForEmployee && previousCountrySelected) {\n          getAndUpdateEmployeeList(prevStatusForEmployee, previousCountrySelected);\n        }\n        if (moveTo) {\n          getAndUpdateEmployeeList();\n        }\n        toggleManageTeamFormModal(false);\n        onCancel();\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRelease = () => {\n    form\n      .validateFields()\n      .then(data => {\n        onRelease(data);\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const initialsData = {\n    comments: \"\",\n    startDate: moment(),\n    notes: \"\",\n  };\n\n  const disableBeforeDate = current => {\n    const future = moment().subtract(0, \"days\");\n    return current.isBefore(selectedResource?.startDate) || current > future;\n  };\n\n  return (\n    <Modal\n      width=\"25%\"\n      visible={visible}\n      onCancel={onCancel}\n      onOk={isClickOnExtendable ? handleExtend : handleRelease}\n      centered\n      okButtonProps={{ loading: loading }}\n      okText={getMessage(RESERVATION_FORM_FIELDS.RESERVATION.text)}\n      title={getMessage(PAGE_HEADING.MODAL_TITLE.title)}\n    >\n      <Form\n        form={form}\n        layout={FORM_LAYOUT.vertical}\n        name={RESERVATION_FORM_FIELDS.RESERVATION.name}\n        initialValues={initialsData}\n      >\n        {!isClickOnExtendable && (\n          <Form.Item\n            className=\"my-1\"\n            label={getMessage(\"component.common.status.release.start.date\")} // Released start date\n            name={ACTION_DATE.START_DATE.value}\n            rules={[{ required: true }]}\n          >\n            <DatePicker disabledDate={disableBeforeDate} format={DATE_FORMAT} className={\"w-100\"} />\n          </Form.Item>\n        )}\n        <Form.Item\n          name={FORM_FIELDS.REASON.name}\n          label={getMessage(FORM_FIELDS.REASON.label)}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.REASON.label)}>\n            {feedbackReasonList?.map(e => {\n              return (\n                <Option key={e} value={e}>\n                  {e}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          className=\"my-1\"\n          name={RESERVATION_FORM_FIELDS.RESERVATION.name}\n          label={<span className=\"text-wrap\">{getMessage(RESERVATION_FORM_FIELDS.RESERVATION.label)}</span>}\n          rules={[\n            { required: true, message: getMessage(RESERVATION_FORM_FIELDS.RESERVATION.message) },\n            {\n              pattern: /^([^0-9]*)$/,\n              message: \"Digits are not allowed\",\n            },\n            { whitespace: true, message: \"Only spaces are not allowed\" },\n          ]}\n        >\n          <TextArea rows={2} maxLength={50} />\n        </Form.Item>\n        {!isClickOnExtendable && (\n          <Form.Item name={FORM_FIELDS.NOTES.name} label={getMessage(FORM_FIELDS.NOTES.label)}>\n            <TextArea rows={2} maxLength={500} placeholder={getMessage(FORM_FIELDS.NOTES.label)} />\n          </Form.Item>\n        )}\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UpdateStatus;\n","import { Button, Col, DatePicker, Divider, Form, message, Row, Select, Input } from \"antd\";\nimport {\n  CHILDREN,\n  DATE_FORMAT,\n  MODAL_ADD_BUTTON_TYPE,\n  NEW_DATE_FORMAT,\n  SELECT_TEXT,\n  UPDATE_TEXT,\n  VALIDATION_FAILED,\n} from \"constants/CommonConstants\";\nimport {\n  ACTION_DATE,\n  ALLOWED_BTN_LABELS,\n  ALLOWED_STATUS,\n  NEXT_ALLOCATION_START_DATE,\n  SUCCESS_MESSAGE,\n} from \"constants/ManageProjects\";\nimport { FORM_FIELDS, RESERVATION_FORM_FIELDS, START_DATE } from \"constants/ManageProjectsConstant\";\nimport useIntlMessage from \"hooks/useIntlMessage\";\nimport { capitalize } from \"lodash\";\nimport moment from \"moment\";\nimport { useMemo } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { setCountryForReserveEmployee, setDataForReserveEmployee } from \"redux/actions\";\nimport projectService from \"services/ProjectService\";\nimport UpdateStatus from \"views/app-views/manage-group/projects/UpdateStatus\";\nimport dashboardServices from \"services/DashboardServices\";\nimport employeeService from \"services/EmployeeService\";\nimport { useHistory } from \"react-router-dom\";\nimport { showLoader } from \"redux/actions/Loader\";\nimport Utils from \"../../../../utils/index\";\n\nconst formItemLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 14 },\n};\n\nconst AssignEmployees = props => {\n  const empId = new URLSearchParams(props.location.search).get(\"empID\");\n  const status = new URLSearchParams(props.location.search).get(\"to\");\n  const reserveAccId = new URLSearchParams(props.location.search).get(\"reservedForAccountId\");\n  const dispatch = useDispatch();\n  const { Option } = Select;\n  const getMessage = useIntlMessage();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [projectList, setProjectList] = useState([]);\n  const [subDomainList, setSubDomainList] = useState([]);\n  const [showUpdateStatusModal, setShowUpdateStatusModal] = useState(false);\n  const [isClickOnExtendable, setIsClickOnExtendable] = useState(false);\n  const [isRequired, setIsRequired] = useState(false);\n  const subDomains = useSelector(state => state.myTeams.subdomains);\n  const domainList = useSelector(state => state.myTeams.domains);\n  const previousCountry = useSelector(state => state.myTeams.reserveEmployeeCountry);\n  const [selectedResourcesData, setSelectedResourcesData] = useState(null);\n  const history = useHistory();\n  const { TextArea } = Input;\n  const internalBillable = \"INTERNAL_BILLABLE\";\n  useEffect(() => {\n    form.setFieldsValue({\n      subDomainId: getSubDomainName,\n      projectId: containsString(selectedResourcesData?.project?.projectName, \"bench\")\n        ? null\n        : selectedResourcesData?.project?.projectId,\n      domainId: domainList?.find(item => item?.domainId === selectedResourcesData?.domain?.domainId)\n        ? selectedResourcesData?.domain?.domainId\n        : null,\n    });\n    if (selectedResourcesData?.nextAllocationStartDate !== undefined) {\n      form.setFieldsValue({\n        nextAllocationStartDate: moment(selectedResourcesData.nextAllocationStartDate),\n      });\n    }\n  }, [selectedResourcesData, domainList]);\n\n  useEffect(() => {\n    validateFieldRequired();\n    if (selectedResourcesData?.domain?.domainId) {\n      handleOnDomainChange(selectedResourcesData?.domain?.domainId, true);\n    }\n  }, [selectedResourcesData]);\n\n  useEffect(() => {\n    if (!selectedResourcesData) {\n      getEmployeeDetail(empId, status);\n    }\n  }, [selectedResourcesData, empId, status]);\n\n  const getEmployeeDetail = async (empId, status) => {\n    try {\n      dispatch(showLoader(true));\n      let params = { empId, status: status.toUpperCase() };\n      let res = await dashboardServices.getEmployeeDetailByEmpIdAndStatus(params);\n      if (reserveAccId) {\n        res = res.filter(e => e?.reservedFor?.accountId === reserveAccId);\n        setSelectedResourcesData(res[0]);\n      } else {\n        setSelectedResourcesData(res[0]);\n      }\n      if ([\"RESERVED\", \"SHADOW\"].includes(res[0].allocationStatus)) {\n        await getProjectListByAccountId(res[0]?.reservedFor?.accountId);\n      } else {\n        await getProjectListByAccountId(res[0]?.parentAccount?.accountId);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      dispatch(showLoader(false));\n    }\n  };\n\n  const onUpdateStatus = async (values, patch = false) => {\n    try {\n      setLoading(true);\n      const payload = patch ? values : projectService.prepareAddAllocationPayload(values, selectedResourcesData);\n      const res = patch\n        ? await projectService.updateBillableAllocationDetails(payload)\n        : await projectService.updateAllocationStatus(payload);\n      if (res.statusCode === 200) {\n        message.success(getMessage(SUCCESS_MESSAGE.UPDATE_STATUS.text));\n        if (previousCountry) {\n          await getAndUpdateEmployeeList();\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getAndUpdateEmployeeList = async () => {\n    const response = await dashboardServices.getDashboardAllocateEmployeesTo(status.toUpperCase(), previousCountry);\n    const { columns, data, quickActions } = response;\n    const employeeList = employeeService.prepareEmployeeList(data);\n    dispatch(setDataForReserveEmployee(employeeList, quickActions, columns, status));\n    dispatch(setCountryForReserveEmployee(previousCountry));\n    history.push(`/app/manage/moveemployees?to=${status}`);\n  };\n\n  const handleUpdate = status => {\n    form\n      .validateFields()\n      .then(async data => {\n        const values = { ...data, allocationStatus: status };\n\n        try {\n          setLoading(true);\n          await onUpdateStatus(values);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setLoading(false);\n        }\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const getProjectListByAccountId = async accountId => {\n    try {\n      const projectList = await projectService.getListByAccountId(accountId);\n      setProjectList(projectList);\n    } catch (error) {\n      console.error(\"Something went wrong\", error);\n    }\n  };\n\n  const disableBeforeDate = current => {\n    const future = moment().subtract(0, \"days\");\n    if (selectedResourcesData?.allocationStatus === \"SHADOW\") {\n      const twoWeeksBack = moment().subtract(2, \"weeks\");\n      return current < twoWeeksBack || current > future;\n      //return current.isBefore(moment().startOf(\"today\"));\n    } else {\n      return current?.isBefore(selectedResourcesData?.startDate || moment().startOf(\"month\")) || current > future;\n    }\n  };\n  const disableDateBeforeLastMonth = current => {\n    return current?.isBefore(selectedResourcesData?.startDate || moment().startOf(\"month\"));\n  };\n  const getStartDateLabel = () => {\n    switch (selectedResourcesData?.allocationStatus) {\n      case ALLOWED_STATUS.SHADOW.value:\n        return `${getMessage(\"common.label.reserved\")} ${getMessage(START_DATE.DATE.text)}`;\n      case ALLOWED_STATUS.RESERVED.value:\n        return `${getMessage(\"component.common.text.confirm\")} ${getMessage(START_DATE.DATE.text)}`;\n      case ALLOWED_STATUS.CONFIRMED.value:\n        return `${getMessage(\"component.common.text.billable\")} ${getMessage(START_DATE.DATE.text)}`;\n      default:\n        return `${getMessage(\"component.manageopenpool.billingstartdate.heading\")}`;\n    }\n  };\n\n  const getExpectedDateLabel = () => {\n    return `${getMessage(\"common.action.expected.end.date.label\")}`;\n  };\n  const containsString = (text, searchText) => {\n    if (text) {\n      return text.toLowerCase().includes(searchText.toLowerCase());\n    }\n  };\n\n  const getSubDomainName = useMemo(() => {\n    if (\n      selectedResourcesData?.domain?.domainId &&\n      subDomains?.find(subDomain => subDomain?.subDomainId === selectedResourcesData?.subDomain?.subDomainId)\n    ) {\n      return selectedResourcesData?.subDomain?.subDomainId;\n    }\n    return null;\n  }, [selectedResourcesData, subDomains]);\n\n  const handleOnDomainChange = (domainId, onFirsTime = false) => {\n    const subDomainsLists = subDomains?.filter(subDomain => subDomain.domainId === domainId);\n    setSubDomainList(subDomainsLists);\n    if (!onFirsTime) {\n      form.setFieldsValue({ [FORM_FIELDS.SUB_DOMAIN.value]: null });\n    }\n  };\n\n  const handleProjectUpdate = async () => {\n    form\n      .validateFields()\n      .then(async data => {\n        const startDate = new Date(data?.nextAllocationStartDate);\n        const payload = {\n          employeeId: selectedResourcesData?.employeeId,\n          reservedForAccountId: selectedResourcesData?.reservedFor?.accountId,\n          allocationStatus: selectedResourcesData?.allocationStatus,\n          assignedLevel: selectedResourcesData?.assignedLevel,\n          projectId: data.projectId,\n          domainId: data.domainId,\n          subDomainId: data.subDomainId,\n          nextAllocationStartDate:\n            startDate.getTime() > 0 ? moment(data.nextAllocationStartDate).format(NEW_DATE_FORMAT).valueOf() : \"\",\n        };\n        try {\n          setLoading(true);\n          await onUpdateStatus(payload, true);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setLoading(false);\n        }\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n  const isReservedOrConfirmed = () => {\n    if (\n      selectedResourcesData?.allocationStatus === \"RESERVED\" ||\n      selectedResourcesData?.allocationStatus === \"CONFIRMED\"\n    ) {\n      return true;\n    }\n    return false;\n  };\n  function disabledDate(current) {\n    return (\n      current.isBefore(selectedResourcesData?.startDate || moment().startOf(\"month\")) ||\n      current.isAfter(moment().add(1, \"month\").startOf(\"day\"))\n    );\n  }\n  const handleBillableUpdate = async () => {\n    form\n      .validateFields()\n      .then(async data => {\n        const payload = {\n          employeeId: selectedResourcesData?.employeeId,\n          reservedForAccountId: selectedResourcesData?.reservedFor?.accountId,\n          allocationStatus: selectedResourcesData?.allocationStatus,\n          projectId: data.projectId,\n          domainId: data.domainId,\n          subDomainId: data.subDomainId,\n        };\n        await onUpdateStatus(payload, true);\n      })\n      .catch(info => {\n        console.log(VALIDATION_FAILED.value, info);\n      });\n  };\n\n  const validateFieldRequired = () => {\n    if (\n      selectedResourcesData?.allocationStatus === ALLOWED_STATUS.BILLABLE.value ||\n      selectedResourcesData?.allocationStatus === ALLOWED_STATUS.CONFIRMED.value\n    ) {\n      setIsRequired(true);\n    } else if (\n      form.getFieldValue(FORM_FIELDS.PROJECT_NAME.value) ||\n      form.getFieldValue(FORM_FIELDS.DOMAIN_NAME.value) ||\n      form.getFieldValue(FORM_FIELDS.SUB_DOMAIN.value)\n    ) {\n      setIsRequired(true);\n    } else {\n      setIsRequired(false);\n      form.resetFields([FORM_FIELDS.PROJECT_NAME.value, FORM_FIELDS.DOMAIN_NAME.value, FORM_FIELDS.SUB_DOMAIN.value]);\n      form.setFieldsValue({\n        [FORM_FIELDS.PROJECT_NAME.value]: null,\n        [FORM_FIELDS.DOMAIN_NAME.value]: null,\n        [FORM_FIELDS.SUB_DOMAIN.value]: null,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Form {...formItemLayout} layout={\"horizontal\"} form={form} labelAlign=\"left\" requiredMark=\"\">\n        <Row gutter={12}>\n          <Col className=\"text-left mb-1\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              label={getMessage(FORM_FIELDS.PARENT_ACCOUNT_LABEL.label)}\n              name={FORM_FIELDS.PARENT_ACCOUNT_LABEL.name}\n              className=\"my-1\"\n            >\n              <span>\n                {selectedResourcesData?.parentAccount?.accountName\n                  ? selectedResourcesData?.parentAccount?.accountName\n                  : \"N/A\"}\n              </span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={getMessage(FORM_FIELDS.RESERVED_FOR_LABEL.label)}\n              name={FORM_FIELDS.RESERVED_FOR_LABEL.value}\n            >\n              <span>\n                {selectedResourcesData?.reservedFor?.accountName\n                  ? selectedResourcesData?.reservedFor?.accountName\n                  : \"N/A\"}\n              </span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              label={getMessage(FORM_FIELDS.EMPLOYEE_ID.label)}\n              name={FORM_FIELDS.EMPLOYEE_ID.name}\n              className=\"my-1\"\n            >\n              <span>{selectedResourcesData?.employeeId}</span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item className=\"my-1\" label={getMessage(FORM_FIELDS.EMPLOYEE.label)} name={FORM_FIELDS.EMPLOYEE.name}>\n              <span>{selectedResourcesData?.employeeName}</span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={getMessage(FORM_FIELDS.ALLOCATION_STATUS.label)}\n              name={FORM_FIELDS.ALLOCATION_STATUS.name}\n            >\n              <span>{selectedResourcesData?.allocationStatus}</span>\n            </Form.Item>\n          </Col>\n          {/* <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={getMessage(FORM_FIELDS.ASSIGNED_LEVEL.label)}\n              name={FORM_FIELDS.ASSIGNED_LEVEL.name}\n            >\n              <span>{selectedResource?.assignedLevel}</span>\n            </Form.Item>\n          </Col> */}\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={getMessage(FORM_FIELDS.DESIGNATION.label)}\n              name={FORM_FIELDS.DESIGNATION.name}\n            >\n              <span>{selectedResourcesData?.designation}</span>\n            </Form.Item>\n          </Col>\n          <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n            <Form.Item\n              className=\"my-1\"\n              label={`${\n                selectedResourcesData?.allocationStatus === ALLOWED_STATUS.AVAILABLE.value\n                  ? getMessage(\"component.common.status.available\")\n                  : capitalize(selectedResourcesData?.allocationStatus)\n              } ${getMessage(START_DATE.DATE.text)}`}\n            >\n              <span>{moment(selectedResourcesData?.startDate).format(DATE_FORMAT)}</span>\n            </Form.Item>\n          </Col>\n          {(selectedResourcesData?.allocationStatus === ALLOWED_STATUS.RESERVED.value ||\n            selectedResourcesData?.allocationStatus === ALLOWED_STATUS.SHADOW.value) && (\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item className=\"my-1\" label={`${capitalize(selectedResourcesData?.allocationStatus)} End Date`}>\n                <span>\n                  {moment(\n                    selectedResourcesData?.reservationExpiryDate || selectedResourcesData?.defaultReservedEndDate,\n                  ).format(DATE_FORMAT)}\n                </span>\n              </Form.Item>\n            </Col>\n          )}\n          {selectedResourcesData?.nextAllocationStartDate ? (\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item\n                className=\"my-1\"\n                label={getMessage(NEXT_ALLOCATION_START_DATE.label)}\n                name={NEXT_ALLOCATION_START_DATE.key}\n              >\n                <span>{moment(selectedResourcesData.nextAllocationStartDate).format(DATE_FORMAT)}</span>\n              </Form.Item>\n            </Col>\n          ) : null}\n        </Row>\n      </Form>\n\n      <Divider />\n\n      {![\"extend\"].includes(status) && (\n        <Form\n          {...formItemLayout}\n          layout={\"horizontal\"}\n          form={form}\n          labelAlign=\"left\"\n          requiredMark=\"\"\n          onValuesChange={validateFieldRequired}\n        >\n          <Row gutter={12}>\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item\n                className=\"my-2\"\n                label={getMessage(FORM_FIELDS.PROJECT_NAME.label)}\n                name={FORM_FIELDS.PROJECT_NAME.value}\n                rules={[{ required: isRequired }]}\n              >\n                <Select\n                  showArrow\n                  showSearch\n                  optionFilterProp={CHILDREN}\n                  allowClear\n                  disabled={status === \"available\"}\n                  placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.PROJECT_NAME.label)}\n                >\n                  {projectList?.map(e => {\n                    return (\n                      <Option key={e.projectId} value={e.projectId}>\n                        {e.projectName}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item\n                className=\"my-1\"\n                name={FORM_FIELDS.DOMAIN_NAME.value}\n                label={getMessage(FORM_FIELDS.DOMAIN_NAME.label)}\n                rules={[{ required: isRequired }]}\n              >\n                <Select\n                  showArrow\n                  showSearch\n                  optionFilterProp={CHILDREN}\n                  allowClear\n                  disabled={status === \"available\"}\n                  placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.DOMAIN_NAME.label)}\n                  onChange={value => handleOnDomainChange(value)}\n                >\n                  {domainList?.map(e => {\n                    return (\n                      <Option key={e.domainId} value={e.domainId}>\n                        {e.domainName}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n              <Form.Item\n                className=\"my-1\"\n                name={FORM_FIELDS.SUB_DOMAIN.value}\n                label={getMessage(FORM_FIELDS.SUB_DOMAIN.label)}\n                rules={[{ required: isRequired }]}\n              >\n                <Select\n                  placeholder={getMessage(SELECT_TEXT.label, FORM_FIELDS.SUB_DOMAIN.label)}\n                  showArrow\n                  allowClear\n                  showSearch\n                  optionFilterProp={CHILDREN}\n                  disabled={status === \"available\"}\n                >\n                  {subDomainList?.map(e => {\n                    return (\n                      <Option key={e.subDomainId} value={e.subDomainId}>\n                        {e.subDomainName}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </Form.Item>\n            </Col>\n            {selectedResourcesData?.allocationStatus !== ALLOWED_STATUS.BILLABLE.value &&\n            ![\"available\", \"extend\"].includes(status) ? (\n              <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n                <Form.Item\n                  className=\"my-2\"\n                  label={getStartDateLabel()}\n                  name={ACTION_DATE.START_DATE.value}\n                  rules={[{ required: true }]}\n                >\n                  <DatePicker\n                    disabledDate={isReservedOrConfirmed() ? disabledDate : disableBeforeDate}\n                    format={DATE_FORMAT}\n                    className={\"w-100\"}\n                  />\n                </Form.Item>\n              </Col>\n            ) : null}\n            {[\"update\"].includes(status) &&\n              (selectedResourcesData?.allocationStatus === ALLOWED_STATUS.BILLABLE.value ||\n                selectedResourcesData?.allocationStatus === internalBillable) && (\n                <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n                  <Form.Item\n                    className=\"my-2\"\n                    label={getExpectedDateLabel()}\n                    name={ACTION_DATE.BILLING_EXPECTED_END_DATE.value}\n                  >\n                    <DatePicker disabledDate={disableDateBeforeLastMonth} format={DATE_FORMAT} className={\"w-100\"} />\n                  </Form.Item>\n                </Col>\n              )}\n            {![\"update\", \"available\"].includes(status) && (\n              <Col className=\"text-left\" xs={24} md={12} lg={12} xl={12}>\n                <Form.Item name={FORM_FIELDS.NOTES.name} label={getMessage(FORM_FIELDS.NOTES.label)}>\n                  <TextArea rows={2} maxLength={500} placeholder={getMessage(FORM_FIELDS.NOTES.label)} />\n                </Form.Item>\n              </Col>\n            )}\n          </Row>\n        </Form>\n      )}\n\n      <Row justify=\"end\" className=\"mt-5\">\n        <Col>\n          {selectedResourcesData?.allowedAllocationStatuses?.map(val => {\n            if (status === \"available\" && val === ALLOWED_STATUS.AVAILABLE.value) {\n              return (\n                <Button\n                  className=\"mr-3\"\n                  type={MODAL_ADD_BUTTON_TYPE.value}\n                  key={RESERVATION_FORM_FIELDS.RESERVATION.name}\n                  onClick={() => {\n                    setShowUpdateStatusModal(true);\n                    setIsClickOnExtendable(false);\n                  }}\n                >\n                  {getMessage(\"component.common.text.release\")}\n                </Button>\n              );\n            } else if (status !== \"available\" && status !== \"extend\" && val !== \"AVAILABLE\") {\n              return (\n                <Button\n                  className=\"mr-3\"\n                  key={UPDATE_TEXT.value}\n                  type={MODAL_ADD_BUTTON_TYPE.value}\n                  onClick={() => handleUpdate(val)}\n                  loading={loading}\n                >\n                  {getMessage(ALLOWED_BTN_LABELS[val])}\n                </Button>\n              );\n            }\n          })}\n\n          {/* {(!selectedResourcesData?.isExtendable && selectedResourcesData?.reservedDateExtensionCount === 2) && (\n          )} */}\n          {status === \"update\" && (\n            <Button\n              className=\"mr-3\"\n              key={UPDATE_TEXT.value}\n              type={MODAL_ADD_BUTTON_TYPE.value}\n              onClick={() => handleProjectUpdate()}\n              loading={loading}\n            >\n              {getMessage(ALLOWED_BTN_LABELS[\"UPDATE\"])}\n            </Button>\n          )}\n          {status === \"extend\" && selectedResourcesData?.isExtendable && (\n            <Button\n              className=\"mr-3\"\n              type={MODAL_ADD_BUTTON_TYPE.value}\n              key={RESERVATION_FORM_FIELDS.RESERVATION.name}\n              onClick={() => {\n                setShowUpdateStatusModal(true);\n                setIsClickOnExtendable(true);\n              }}\n            >\n              {getMessage(RESERVATION_FORM_FIELDS.RESERVATION.extendText)}\n            </Button>\n          )}\n        </Col>\n      </Row>\n\n      {showUpdateStatusModal && (\n        <UpdateStatus\n          moveTo={true}\n          visible={showUpdateStatusModal}\n          selectedResource={selectedResourcesData}\n          isClickOnExtendable={isClickOnExtendable}\n          getAndUpdateEmployeeList={getAndUpdateEmployeeList}\n          onCancel={() => {\n            setShowUpdateStatusModal(false);\n            setIsClickOnExtendable(false);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ myTeams }) => {\n  return { employees: myTeams.employeeData };\n};\nexport default connect(mapStateToProps)(AssignEmployees);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import IntlMessage from \"components/util-components/IntlMessage\";\nimport commonService from \"services/CommonService\";\nexport const UPDATE_SUCCESS = {\n  text: \"component.manageproject.updatesuccess.msg\",\n  value: \"project updated successfuly\",\n};\nexport const ADD_SUCCESS = {\n  text: \"component.manageproject.projectsuccess.msg\",\n  value: \"project created successfuly\",\n};\nexport const PROJECTNAME_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectname.msg\" />,\n  value: \"project name is required\",\n  placeholder: \"component.manageproject.projectname.msg\",\n};\nexport const DOMAIN_REQ = {\n  text: <IntlMessage id=\"component.manageproject.domainname.msg\" />,\n  value: \"domain name is required\",\n};\nexport const LEAD_REQ = {\n  text: <IntlMessage id=\"component.manageproject.deliveryLeadname.msg\" />,\n  value: \"delivery lead  is required \",\n};\nexport const PROJECT_STATUS_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectstatus.msg\" />,\n  value: \"project status is required\",\n};\nexport const PROJECT_DATE_REQ = {\n  text: <IntlMessage id=\"component.manageproject.projectdate.msg\" />,\n  value: \"project start and end date is required\",\n};\nexport const EDIT_PROJECT_CHECKBOX_DATE = {\n  text: <IntlMessage id=\"component.manageprojects.editproject.datecheckbox\" />,\n  value:\n    \"Select this option if the updated project end date has to be updated with the billing end date for all the team members.\",\n};\nexport const ADD_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageproject.addproject.title\" />,\n  value: \"Add Project\",\n};\nexport const EDIT_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageproject.editproject.title\" />,\n  value: \"Update Project\",\n};\nexport const SELECT_HIGHT = {\n  text: \"calc(100vh - 200px)\",\n  value: \"auto\",\n};\nexport const SELECT_LAYOUT = {\n  text: \"horizontal\",\n  value: \"horizontal\",\n};\nexport const PROJECT_NAME = {\n  text: \"projectName\",\n  value: \"Project Name\",\n};\nexport const DOMAIN_NAME = {\n  text: \"domainName\",\n  value: \"Domain Name\",\n};\nexport const SUBDOMAIN_NAME = {\n  text: \"subdomain\",\n  value: \"Sub Domain\",\n};\nexport const LEAD_NAME = {\n  text: \"deliveryLead\",\n  value: \"Delivery Lead\",\n};\nexport const ACCOUNT_REQ = {\n  text: \"accountName\",\n  value: \"Account Name\",\n};\nexport const PROJECT_DATE = {\n  text: \"projectDate\",\n  value: \"Project Date\",\n};\nexport const PROJECT_STATUS = {\n  text: \"projectStatus\",\n  value: \"Project Status\",\n};\n\nexport const DATE_FORMAT = {\n  text: \"YYYY-MM-DD\",\n  value: \"YYYY-MM-DD\",\n};\nexport const LEAD_ERROR_MESSAGE = {\n  text: <IntlMessage id=\"component.manageproject.inactive.lead.error.msg\" />,\n  value: \"Select active delivery lead\",\n};\nexport const CONFIRM_MESSAGE = {\n  text: <IntlMessage id=\"component.common.confirm.message\" />,\n  value: \"Are you sure you want to cancel this?\",\n};\nexport const ADD_PROJECT_MESSAGE = {\n  text: \"component.common.confirm.addproject.message\",\n  value: \"Are you sure you want to add this project?\",\n};\nexport const UPDATE_PROJECT_MESSAGE = {\n  text: \"component.common.confirm.updateproject.message\",\n  value: \"Are you sure you want to update this project?\",\n};\n\nexport const UPDATE_PROJECT_TITLE = <IntlMessage id=\"component.manageProject.updateprojectTitle\" />;\n// export const ADD_PROJECT_TITLE = <IntlMessage id=\"component.manageProject.addprojectTitle\" />;\nexport const START_DATE = {\n  DATE: {\n    label: \"component.manageprojects.manageteams.date.heading\",\n    text: \"component.manageprojects.manageteams.startdate\",\n    value: \"startDate\",\n  },\n};\nexport const RELEASE_STATUS = {};\nexport const FORM_FIELDS = {\n  EXTEND_LABEL: {\n    label: \"common.label.extend\",\n    value: \"extend\",\n  },\n  PARENT_ACCOUNT_LABEL: {\n    label: \"common.label.parent.account\",\n    value: \"accountName\",\n  },\n  RESERVED_FOR_LABEL: {\n    label: \"component.manage.projects.reservedFor.placeholder\",\n    value: \"accountName\",\n  },\n  RELEASE_LABEL: {\n    label: \"common.label.release.text\",\n    value: \"release\",\n  },\n  PROJECT_NAME: {\n    label: \"common.label.projectname\",\n    name: \"projectName\",\n    value: \"projectId\",\n  },\n  EMPLOYEE_ID: {\n    label: \"common.label.employeeId\",\n    name: \"employeeId\",\n  },\n  ACCOUNT_NAME: {\n    label: \"common.label.accountname\",\n    name: \"accountName\",\n  },\n  DOMAIN_NAME: {\n    name: \"domainName\",\n    value: \"domainId\",\n    label: \"common.label.domainname\",\n  },\n  DELIVERY_LEAD: {\n    name: \"deliveryLead\",\n    label: \"common.label.deliverylead\",\n  },\n  PROJECT_STATUS: {\n    name: \"projectStatus\",\n    label: \"component.manageprojects.project.status.label\",\n  },\n  PROJECT_DATE: {\n    name: \"projectDate\",\n    label: \"component.manageprojects.project.date.label\",\n    errorMessage: \"component.manageproject.projectdate.msg\",\n  },\n  EMPLOYEE: {\n    name: \"employeeName\",\n    label: \"common.label.employeeName\",\n  },\n  SUB_DOMAIN: {\n    value: \"subDomainId\",\n    name: \"subdomain\",\n    label: \"common.label.subdomain.name.label\",\n  },\n  ASSIGNED_ROLE: {\n    name: \"assignedRole\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ASSIGNED_LEVEL: {\n    name: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ALLOCATION_STATUS: {\n    name: \"allocationStatus\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n  },\n  ALLOCATION_SUB_STATUS: {\n    name: \"allocationSubStatus\",\n    label: \"component.manage.projects.allowed.allocation.substatus.lablel\",\n  },\n  ALLOWED_ALLOCATION_STATUS: {\n    name: \"allowedAllocationSubStatues\",\n    label: \"component.manage.projects.allowed.allocationstatus.lablel\",\n  },\n  BILLABLE_STATUS: {\n    name: \"billableStatus\",\n    label: \"common.label.billablestatus\",\n  },\n  ADD_RESOURCE_ON_BEHALF: {\n    name: \"addResourceOnBehalf\",\n    label: \"component.manage.projects.behalfof.placeholder\",\n  },\n  RESERVED_FOR: {\n    name: \"reservedFor\",\n    label: \"component.manage.projects.reservedFor.placeholder\",\n  },\n  DESIGNATION: {\n    name: \"designation\",\n    label: \"common.label.designation\",\n  },\n  PROJECT_START_DATE: {\n    name: \"projectStartDate\",\n    label: \"component.myprojectallocations.project_start_date.heading\",\n    errorMessage: \"component.manageproject.projectstartdate.msg\",\n  },\n  PROJECT_END_DATE: {\n    name: \"projectEndDate\",\n    label: \"component.myprojectallocations.project_end_date.heading\",\n    errorMessage: \"component.manageproject.projectenddate.msg\",\n  },\n  NOTES: {\n    value: \"notes\",\n    name: \"notes\",\n    label: \"common.label.notes\",\n  },\n};\n\nexport const RESERVATION_FORM_FIELDS = {\n  RESERVATION: {\n    label: \"common.label.reservation\",\n    message: \"common.label.reservation.message\",\n    name: \"comments\",\n    text: \"component.common.update.text\",\n    extendText: \"component.manageprojects.action.text.extend\",\n  },\n  UPDATE_STATUS: {\n    label: \"common.label.update.status\",\n    value: \"updateStatus\",\n  },\n  RELEASE: {\n    label: \"common.label.release\",\n    message: \"common.label.release.date.message\",\n    name: \"releaseDate\",\n    text: \"component.manageprojects.action.label.release\",\n  },\n};\nexport const PAGE_HEADING = {\n  MODAL_TITLE: {\n    title: \"component.manageprojects.action.label.extend.reservation\",\n    text: \"component.manageprojects.action.label.release.employee\",\n  },\n};\n","import IntlMessage from \"components/util-components/IntlMessage\";\nexport const MANAGE_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.heading\" />,\n  value: \"manage projects\",\n};\nexport const ADD_PROJECT_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.addproject.title\" />,\n  value: \"add project\",\n};\nexport const PROJECT_COLUMN = {\n  text: <IntlMessage id=\"component.manageprojects.project.heading\" />,\n  value: \"projectName\",\n  valueOfProject: \"ProjectName\",\n};\nexport const ACCOUNT_COLUMN = {\n  text: <IntlMessage id=\"common.label.account\" />,\n  value: \"account\",\n};\nexport const DELIVERY_LEAD_COLUMN = {\n  text: <IntlMessage id=\"common.label.deliverylead\" />,\n  value: \"deliveryLeadIds\",\n};\nexport const END_DATE_COLUMN = {\n  text: <IntlMessage id=\"component.manageprojects.enddate.heading\" />,\n  value: \"projectEndDate\",\n};\nexport const TEAM_DETAILS_TITLE = {\n  text: <IntlMessage id=\"component.manageprojects.teamdetails.heading\" />,\n  value: \"team details\",\n};\n\nexport const EMP_STATUS_FORM_NAME = \"emp_status_form\";\n\nexport const EMP_STATUS_SUCCESS_MSG = {\n  text: <IntlMessage id=\"component.manageprojects.manageteams.success_message\" />,\n  value: \"Employee status update successfully\",\n};\n\nexport const UNAVAILABLE_STATUS = \"UNAVAILABLE\";\n\nexport const ALLOWED_STATUS = {\n  AVAILABLE: {\n    value: \"AVAILABLE\",\n  },\n  RESERVED: {\n    value: \"RESERVED\",\n  },\n  CONFIRMED: {\n    value: \"CONFIRMED\",\n  },\n  BILLED: {\n    value: \"BILLED\",\n  },\n  BILLABLE: {\n    value: \"BILLABLE\",\n  },\n  SHADOW: {\n    value: \"SHADOW\",\n  },\n  UPDATE: {\n    value: \"UPDATE\",\n  },\n};\n\nexport const ALLOWED_BTN_LABELS = {\n  BILLABLE: \"component.common.text.bill\",\n  CONFIRMED: \"component.common.text.confirm\",\n  AVAILABLE: \"component.common.status.available\",\n  RESERVED: \"component.common.text.reserve\",\n  SHADOW: \"component.common.text.shadow\",\n  UPDATE: \"component.common.text.update\",\n};\n\nconst ACTIVE_STATUS = { label: \"component.common.status.active\", value: \"Active\" };\nconst INACTIVE_STATUS = { label: \"component.common.status.released\", value: \"InActive\" };\nconst ALL_STATUS = { label: \"component.common.status.all\", value: \"All\" };\nconst PROPOSED_STATUS = { label: \"component.manageprojects.manageteams.status.proposed\", value: \"Proposed\" };\nconst RELEASED_STATUS = { label: \"component.common.status.released\", value: \"Released\" };\nconst ENGAGED_STATUS = { label: \"component.common.status.engaged\", value: \"Engaged\" };\nconst INACTIVE_STATUS_PROJECT = \"InActive\";\nconst COMPLETED_STATUS = \"Completed\";\nconst ON_HOLD_STATUS = { label: \"common.label.on_hold\", value: \"On Hold\" };\n\nexport const STATUSES = {\n  ACTIVE_STATUS,\n  INACTIVE_STATUS,\n  ALL_STATUS,\n  PROPOSED_STATUS,\n  INACTIVE_STATUS_PROJECT,\n  COMPLETED_STATUS,\n  RELEASED_STATUS,\n  ENGAGED_STATUS,\n};\n\nexport const RADIO_GROUP_STATUS = [ACTIVE_STATUS, INACTIVE_STATUS, ALL_STATUS];\n\nexport const GROUP_COMPLETE_INACTIVE_STATUS = [INACTIVE_STATUS_PROJECT, COMPLETED_STATUS];\nexport const TEAM_TITLE = {\n  TITLE: {\n    text: \"common.title.text.team.member\",\n  },\n};\n\nexport const RECORD_FIELDS = {\n  FIELDS_VALUE: {\n    dateValue: \"date\",\n    subDomainValue: \"subDomain\",\n    domainValue: \"domain\",\n    projectNameValue: \"projectName\",\n    projectValue: \"project\",\n    domainNameValue: \"domainName\",\n    subDomainNameValue: \"subDomainName\",\n  },\n};\nexport const SUCCESS_MESSAGE = {\n  UPDATE_TEAM_MATE_TITLE: {\n    text: \"common.title.text.team.member\",\n  },\n  EXTEND_SUCCESS_MESSAGE: {\n    text: \"common.message.text\",\n  },\n  RELEASE_SUCCESS_MESSAGE: {\n    text: \"common.message.release.text\",\n  },\n  UPDATE_STATUS: {\n    text: \"common.message.update.status\",\n  },\n};\nexport const ACTION_DATE = {\n  START_DATE: {\n    label: \"common.action.releasedate.label\",\n    reserved: \"common.action.reserveddate.label\",\n    value: \"startDate\",\n  },\n  BILLING_EXPECTED_END_DATE: {\n    label: \"common.action.exp.end.date.label\",\n    expBillingEndDate: \"common.action.expected.end.date.label\",\n    value: \"nextAllocationStartDate\",\n  },\n};\nexport const PROJECT_DATES = {\n  START_DATE: {\n    label: \"common.project.startdate.label\",\n    value: \"startDate\",\n  },\n  END_DATE: {\n    label: \"common.project.enddate.label\",\n    value: \"endDate\",\n  },\n  RELEASE_END_DATE: {\n    label: \"component.manageprojects.enddate.heading\",\n    key: \"endDate\",\n    type: \"date\",\n    width: 120,\n  },\n};\n\nexport const DATA_TABLE_COLUMNS_VIEW_TEAM = {\n  EMP_ID: {\n    label: \"common.label.emp_id\",\n    key: \"employeeId\",\n    type: \"text\",\n    width: 100,\n  },\n  EMPLOYEE_NAME: {\n    key: \"employeeName\",\n    label: \"common.label.employeeName\",\n    type: \"text\",\n    width: 150,\n  },\n  EMP_LOCATION: {\n    label: \"common.label.location\",\n    key: \"empLocation\",\n    type: \"text\",\n    width: 120,\n  },\n  // PROJECT_NAME: {\n  //   label: \"common.label.projectname\",\n  //   key: \"project\",\n  //   type: \"text\",\n  //   width: 120,\n  // },\n  DESIGNATION: {\n    key: \"designation\",\n    label: \"common.label.designation\",\n    type: \"text\",\n    width: 130,\n  },\n  DOMAIN: {\n    label: \"common.label.domain\",\n    key: \"domain\",\n    type: \"text\",\n    width: 120,\n  },\n  SUB_DOMAIN: {\n    key: \"subDomain\",\n    label: \"common.label.subdomain.label\",\n    type: \"text\",\n    width: 140,\n  },\n  ALLOCATION_STATUS: {\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n    type: \"text\",\n    width: 140,\n  },\n  ASSINGED_LEVEL: {\n    label: \"component.manage.projects.assignedlevel.label\",\n    key: \"assignedLevel\",\n    type: \"text\",\n    width: 140,\n  },\n  BILLING_START_DATE: {\n    key: \"startDate\",\n    label: \"component.common.start.date\",\n    type: \"date\",\n    width: 140,\n  },\n};\n\nexport const DATA_TABLE_COLUMNS = {\n  PROJECT_COLUMN: {\n    label: \"component.manageprojects.project.heading\",\n    key: \"projectName\",\n    type: \"text\",\n  },\n  ACCOUNT_COLUMN: {\n    label: \"common.label.account\",\n    key: \"account\",\n    type: \"text\",\n  },\n  // NUM_OF_MEMBER: {\n  //   label: \"component.managedesignations.employeecount\",\n  //   key: \"employeeCount\",\n  //   type: \"text\",\n  // },\n  STATUS: {\n    label: \"common.label.status\",\n    key: \"status\",\n    type: \"select\",\n    options: [\n      { label: INACTIVE_STATUS.label, value: INACTIVE_STATUS_PROJECT },\n      { label: PROPOSED_STATUS.label, value: PROPOSED_STATUS.value },\n      { label: ON_HOLD_STATUS.label, value: ON_HOLD_STATUS.value },\n    ],\n  },\n  END_DATE: {\n    label: \"component.manageprojects.manageteams.startdate.heading\",\n    key: \"projectStartDate\",\n    type: \"date\",\n  },\n};\nexport const NEXT_ALLOCATION_START_DATE = {\n  key: \"nextAllocationStartDate\",\n  label: \"common.project.nextAllocationStartDate\",\n};\n\nexport const GROUP_PROPOSED_ACTIVE_STATUS = [ACTIVE_STATUS.value, PROPOSED_STATUS.value];\n","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","export const ADD_LABEL = \"component.manage.employees.add.allocation.label\";\nexport const CONFIRM_ALERT = \"component.manage.employees.add.allocation.confirmation\";\nexport const RESERVATION_DETAIL = \"component.manage.employees.reservation.detail.label\";\nexport const ALLOCATION_POPUP_TITLE = \"component.manage.employees.reservation.popup.title\";\nexport const AVAILABLE_FROM = \"component.common.status.available.from\";\nexport const FEEDBACK_DETAIL = \"component.manage.employees.feedback.detail.label\";\n\nexport const ALLOCATION_STATUS_TABLE_COLUMNS = {\n  accountName: {\n    label: \"common.label.accountname\",\n    key: \"accountName\",\n    type: \"text\",\n  },\n  projectName: {\n    type: \"text\",\n    label: \"common.label.projectname\",\n    key: \"projectName\",\n  },\n  domainName: {\n    type: \"text\",\n    label: \"common.label.domain\",\n    key: \"domainName\",\n  },\n  subDomainName: {\n    type: \"text\",\n    label: \"common.label.subdomain.label\",\n    key: \"subDomainName\",\n  },\n  allocationStatus: {\n    type: \"text\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n    key: \"allocationStatus\",\n  },\n  startDate: {\n    type: \"date\",\n    label: \"common.label.allocation.start.date\",\n    key: \"startDate\",\n  },\n  endDate: {\n    type: \"date\",\n    label: \"common.label.allocation.end.date\",\n    key: \"reservationExpiryDate\",\n  },\n};\n\nexport const FEEDBACK_TABLE_COLUMNS = {\n  name: {\n    label: \"manage.employee.reservation.feedback\",\n    key: \"givenByName\",\n    type: \"text\",\n  },\n  email: {\n    label: \"common.label.email\",\n    key: \"givenByEmail\",\n    type: \"text\",\n  },\n  date: {\n    label: \"common.label.date\",\n    key: \"givenOn\",\n    type: \"date\",\n  },\n  feedback: {\n    label: \"common.label.feedback\",\n    key: \"feedback\",\n    type: \"text\",\n  },\n};\nexport const FORM_FIELDS = {\n  ACCOUNT: {\n    label: \"common.label.accountname\",\n    name: \"accountName\",\n  },\n  PROJECT: {\n    label: \"common.label.projectname\",\n    name: \"projectName\",\n  },\n  DOMAIN_NAME: {\n    name: \"domainName\",\n    label: \"common.label.domainname\",\n  },\n  SUB_DOMAIN: {\n    name: \"subdomain\",\n    label: \"common.label.subdomain.name.label\",\n  },\n  ALLOCATION_LEVEL: {\n    name: \"allocationLevel\",\n\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  ALLOCATION_STATUS: {\n    name: \"allocationStatus\",\n    label: \"component.manage.projects.allocationstatus.lablel\",\n  },\n  START_DATE: {\n    name: \"startDate\",\n    label: \"component.common.start.date\",\n  },\n  REASON: {\n    name: \"releaseFeedbackReason\",\n    label: \"component.common.reason.reserve\",\n  },\n  ASSIGNED_LEVEL: {\n    name: \"assignedLevel\",\n    label: \"component.manage.projects.assignedlevel.label\",\n  },\n  NOTES: {\n    name: \"notes\",\n    label: \"common.label.notes\",\n  },\n  LEVER: {\n    value: \"leverURL\",\n    name: \"leverURL\",\n    label: \"common.myprojectallocations.project_lever_url\"\n  }\n};\n"],"sourceRoot":""}
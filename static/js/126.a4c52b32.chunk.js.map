{"version":3,"sources":["views/app-views/dashboard/Charts/GradientDonut.js"],"names":["GradientDonut","props","categories","series","_useState","useState","_useState2","_slicedToArray","chartData","setChartData","useEffect","_series$map","data","map","x","Number","options","chart","type","plotOptions","pie","startAngle","endAngle","noData","text","align","verticalAlign","offsetX","offsetY","style","color","fontSize","fontFamily","undefined","labels","fill","legend","formatter","val","opts","w","globals","seriesIndex","responsive","breakpoint","width","position","_jsx","Chart","Empty","image","PRESENTED_IMAGE_SIMPLE"],"mappings":"+JAmEeA,UA/DO,SAAAC,GACpB,IAAQC,EAAuBD,EAAvBC,WAAYC,EAAWF,EAAXE,OACpBC,EAAkCC,qBAAUC,EAAAC,YAAAH,EAAA,GAArCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAsD9B,OApDAI,qBAAU,WAAO,IAADC,EACRC,EAAO,CACXT,OAAmC,QAA7BQ,EAAQ,OAANR,QAAM,IAANA,OAAM,EAANA,EAAQU,KAAI,SAAAC,GAAC,OAAIC,OAAOD,EAAE,WAAC,IAAAH,IAAI,GACvCK,QAAS,CACPC,MAAO,CACLC,KAAM,SAERC,YAAa,CACXC,IAAK,CACHC,YAAa,GACbC,SAAU,MAGdC,OAAQ,CACNC,KAAM,gBACNC,MAAO,SACPC,cAAe,SACfC,QAAS,EACTC,QAAS,EACTC,MAAO,CACLC,MAAO,UACPC,SAAU,OACVC,gBAAYC,IAGhBC,OAAkB,OAAVhC,QAAU,IAAVA,IAAc,GACtBiC,KAAM,CACJjB,KAAM,YAERkB,OAAQ,CACNC,UAAW,SAAUC,EAAKC,GACxB,OAAOD,EAAM,MAAQC,EAAKC,EAAEC,QAAQtC,OAAOoC,EAAKG,YAClD,GAEFC,WAAY,CACV,CACEC,WAAY,IACZ5B,QAAS,CACPC,MAAO,CACL4B,MAAO,KAETT,OAAQ,CACNU,SAAU,eAOtBrC,EAAaG,EACf,GAAG,CAACV,EAAYC,IAETK,EACLuC,cAACC,IAAK,CAAChC,QAASR,EAAUQ,QAASb,OAAQK,EAAUL,OAAQ0C,MAAO,IAAK3B,KAAK,UAE9E6B,cAACE,IAAK,CAACC,MAAOD,IAAME,wBAExB,C","file":"static/js/126.a4c52b32.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Empty } from \"antd\";\n\nconst GradientDonut = props => {\n  const { categories, series } = props;\n  const [chartData, setChartData] = useState();\n\n  useEffect(() => {\n    const data = {\n      series: series?.map(x => Number(x)) ?? [],\n      options: {\n        chart: {\n          type: \"donut\",\n        },\n        plotOptions: {\n          pie: {\n            startAngle: -90,\n            endAngle: 270,\n          },\n        },\n        noData: {\n          text: \"No Data Found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n          offsetX: 0,\n          offsetY: 0,\n          style: {\n            color: \"#df4759\",\n            fontSize: \"14px\",\n            fontFamily: undefined,\n          },\n        },\n        labels: categories ?? [],\n        fill: {\n          type: \"gradient\",\n        },\n        legend: {\n          formatter: function (val, opts) {\n            return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n          },\n        },\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              chart: {\n                width: 200,\n              },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n    setChartData(data);\n  }, [categories, series]);\n\n  return chartData ? (\n    <Chart options={chartData.options} series={chartData.series} width={550} type=\"donut\" />\n  ) : (\n    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n  );\n};\n\nexport default GradientDonut;\n"],"sourceRoot":""}